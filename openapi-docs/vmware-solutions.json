{
    "openapi": "3.0.0",
    "info": {
      "description": "Moving your existing data center to the cloud does not have to take up so much time and effort. IBM Cloud for VMware Solutions lets you deploy a comprehensive portfolio of automated and on-demand services for VMware workloads to the cloud, faster than ever before. And by capturing your data center infrastructure as patterns, you have a seamless path to bring your data center to the IBM Cloud without converting virtual machines or changing existing tools and skill sets.",
      "title": "IBM Cloud for VMware Solutions API",
      "version": "1.0",
      "x-last-updated": "2021-06-17"
    },
    "externalDocs": {
      "url": "https://cloud.ibm.com/docs/services/vmwaresolutions"
    },
    "paths": {
      "/v1/infra_credentials": {
        "post": {
          "tags": [
            "users and accounts"
          ],
          "summary": "Set the IBM Cloud infrastructure account user ID and API key for linked IBM Cloud account",
          "description": "If no request body is provided, retrieve the user name and API key for the IBM Cloud infrastructure account that is linked to the current IBM Cloud account. Then enter the information in the VMware Solutions account settings. If a request body is provided, set the provided user name and API key for the IBM Cloud infrastructure account in the VMware Solutions account settings.",
          "operationId": "controllers.public.v1.proxy.set_sl_account_key_bssaccount",
          "parameters": [
            {
              "$ref": "#/components/parameters/authorization"
            },
            {
              "$ref": "#/components/parameters/transaction_id"
            },
            {
              "$ref": "#/components/parameters/retrieve_only"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "x-body-name": "infra_account",
                  "$ref": "#/components/schemas/infra_credentials"
                }
              }
            },
            "description": "The IBM Cloud infrastructure account information. The provided IBM Cloud infrastructure account ID should be consistent with the provided user name and API key.",
            "x-nullable": true
          },
          "responses": {
            "200": {
              "description": "Success. The request has been successfully performed.",
              "headers": {
                "x-global-transaction-id": {
                  "description": "Global transaction ID for request correlation.",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/account_infra_credentials"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/400"
            }
          }
        }
      },
      "/v1/vcenters": {
        "post": {
          "tags": [
            "vcenters"
          ],
          "summary": "Order a new vCenter Server instance or verify the order.",
          "description": "Order a new vCenter Server instance or verify the order with specified configurations.",
          "operationId": "controllers.public.v1.proxy.order_vcenter",
          "parameters": [
            {
              "$ref": "#/components/parameters/authorization"
            },
            {
              "$ref": "#/components/parameters/transaction_id"
            },
            {
              "$ref": "#/components/parameters/verify_only"
            },
            {
              "$ref": "#/components/parameters/check_price"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "x-body-name": "vcenter_order_data",
                  "$ref": "#/components/schemas/vcenter_order_data"
                }
              }
            },
            "description": "Order specification with configurations.",
            "required": true
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request (Use quotation marks for URL with parameters)",
                  "example": [
                    {
                      "type": "code",
                      "lang": "curl",
                      "source": [
                        "curl -X POST \\\n  'https://api.vmware-solutions.cloud.ibm.com/v1/vcenters?verify_only=false&check_price=true' \\\n  -H 'authorization: Bearer <IAM_token>' \\\n  -H 'Content-Type:application/json' \\\n  -d '{\n    \"name\": \"myvmware\",\n    \"location\": \"sjc03\",\n    \"root_domain\": \"mycompany.local\",\n    \"host_prefix\": \"host\",\n    \"subdomain\": \"myvmware\",\n    \"domain_type\": \"primary\",\n    \"dns_type\": \"vsi\",\n    \"vsphere_version\": \"6.7\",\n    \"hardware\": {\n      \"quantity\": 4,\n      \"customized_hardware\": {\n        \"server\": \"INTEL_INTEL_XEON_4210_2_20\",\n        \"ram\": \"RAM_64_GB_DDR4_2133_ECC_NON_REG\",\n        \"disks\": [\n          \"HARD_DRIVE_960GB_SSD_SED_5DWPD\",\n          \"HARD_DRIVE_960GB_SSD_SED_5DWPD\"\n        ],\n        \"vsan_cache_disks\": [\n          \"HARD_DRIVE_960GB_SSD_SED_5DWPD\",\n          \"HARD_DRIVE_960GB_SSD_SED_5DWPD\"\n        ]\n      }\n    },\n    \"license_keys\": {\n      \"vcenter\": {\n        \"key\": \"\"\n      },\n      \"nsx\": {\n        \"key\": \"\",\n        \"license_type\": \"base\"\n      },\n      \"vsphere\": {\n        \"key\": \"\"\n      },\n      \"vsan\": {\n        \"key\": \"\",\n        \"license_type\": \"advanced\"\n      }\n    },\n    \"services\": [\n      {\n        \"service_info\": {\n          \"service_id\": \"vSRX\",\n          \"variables\": {\n            \"nickname\": \"test-auto\",\n            \"vsrx_license_type\": \"Standard Edition\",\n            \"target_cluster\": \"mgmt\"\n            }\n          }\n        }\n      ]\n  }'"
                      ]
                    }
                  ]
                }
              ]
            }
          },
          "responses": {
            "200": {
              "description": "Success. The request has been successfully verified."
            },
            "202": {
              "description": "Success. The request for creating the vCenter Server instance has been accepted.",
              "headers": {
                "x-global-transaction-id": {
                  "description": "Global transaction ID for request correlation.",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/vcenter_order_response"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/400"
            },
            "401": {
              "$ref": "#/components/responses/401"
            },
            "403": {
              "$ref": "#/components/responses/403"
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        }
      },
      "/v1/vcenters/edge": {
        "post": {
          "tags": [
            "vcenters"
          ],
          "summary": "Order a new vCenter Server instance with an edge services cluster or verify the order.",
          "description": "Order a new vCenter Server instance with edge services cluster or verify the order with specified configurations.",
          "operationId": "controllers.public.v1.proxy.order_edge_vcs",
          "parameters": [
            {
              "$ref": "#/components/parameters/authorization"
            },
            {
              "$ref": "#/components/parameters/transaction_id"
            },
            {
              "$ref": "#/components/parameters/verify_only"
            },
            {
              "$ref": "#/components/parameters/check_price"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "x-body-name": "vcs_edge_order_data",
                  "$ref": "#/components/schemas/vcs_edge_order_data"
                }
              }
            },
            "description": "Order specification with configurations.",
            "required": true
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request (Use quotation marks for URL with parameters)",
                  "example": [
                    {
                      "type": "code",
                      "lang": "curl",
                      "source": [
                        "curl -X POST \\\n  'https://api.vmware-solutions.cloud.ibm.com/v1/vcenters/edge?verify_only=false&check_price=true' \\\n  -H 'authorization: Bearer <IAM_token>' \\\n  -H 'Content-Type:application/json' \\\n  -d '{\n      \"name\": \"vcs-edge\",\n      \"subdomain\": \"mysubdomain\",\n      \"root_domain\": \"mydomain.local\",\n      \"vsphere_version\": \"6.7\",\n      \"host_prefix\": \"host\",\n      \"dns_type\": \"vsi\",\n      \"license_keys\": {\n          \"vcenter\": {\n              \"key\": \"\"\n          },\n          \"nsx\": {\n              \"key\": \"\",\n              \"license_type\": \"base\"\n          },\n          \"vsphere\": {\n              \"key\": \"\"\n          }\n      },\n      \"management\": {\n          \"cluster_name\": \"my-management-cluster\",\n          \"location\": \"wdc04\",\n          \"template_id\": \"1\",\n          \"customized_hardware\": {\n              \"server\": \"INTEL_INTEL_XEON_4210_2_20\",\n              \"ram\": \"RAM_192_GB_DDR4_2133_ECC_REG\",\n              \"disks\": [\n                  \"HARD_DRIVE_960GB_SSD_SED_5DWPD\",\n                  \"HARD_DRIVE_960GB_SSD_SED_5DWPD\"\n              ],\n              \"vsan_cache_disks\": [\n                  \"HARD_DRIVE_NVME_750_GB_PCIE\",\n                  \"HARD_DRIVE_NVME_750_GB_PCIE\"\n              ],\n              \"vsan_compression\": true\n          },\n          \"quantity\": 4,\n          \"license_keys\": {\n              \"vsan\": {\n                  \"key\": \"\",\n                  \"license_type\": \"advanced\"\n              }\n          }\n      },\n      \"edge\": {\n          \"location\": \"wdc04\",\n          \"cluster_name\": \"my-edge-cluster\",\n          \"quantity\": 2,\n          \"customized_hardware\": {\n              \"server\": \"2U_VMW_BARE_METAL_GATEWAY_10_GBPS\",\n              \"ram\": \"RAM_64_GB_DDR4_2133_ECC_NON_REG\"\n          }\n      },\n      \"services\": [\n          {\n              \"service_info\": {\n                  \"service_id\": \"vSRX\",\n                  \"variables\": {\n                      \"nickname\": \"myservice\",\n                      \"vsrx_license_type\": \"Standard Edition\",\n                      \"target_cluster\": \"edge\"\n                  }\n              }\n          }\n      ]\n  }"
                      ]
                    }
                  ]
                }
              ]
            }
          },
          "responses": {
            "200": {
              "description": "Success. The request has been successfully verified."
            },
            "202": {
              "description": "Success. The request for creating the vCenter Server instance with NSX-T has been accepted.",
              "headers": {
                "x-global-transaction-id": {
                  "description": "Global transaction ID for request correlation.",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/vcenter_order_response"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/400"
            },
            "401": {
              "$ref": "#/components/responses/401"
            },
            "403": {
              "$ref": "#/components/responses/403"
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        }
      },
      "/v1/vcenters/nsxt": {
        "post": {
          "tags": [
            "vcenters"
          ],
          "summary": "Order a new vCenter Server instance with NSX-T or verify the order.",
          "description": "Order a new vCenter Server instance with NSX-T or verify the order with specified configurations.",
          "operationId": "controllers.public.v1.proxy.order_nsxt",
          "parameters": [
            {
              "$ref": "#/components/parameters/authorization"
            },
            {
              "$ref": "#/components/parameters/transaction_id"
            },
            {
              "$ref": "#/components/parameters/verify_only"
            },
            {
              "$ref": "#/components/parameters/check_price"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "x-body-name": "nsxt_order_data",
                  "$ref": "#/components/schemas/nsxt_order_data"
                }
              }
            },
            "description": "Order specification with configurations.",
            "required": true
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request (Use quotation marks for URL with parameters)",
                  "example": [
                    {
                      "type": "code",
                      "lang": "curl",
                      "source": [
                        "curl -X POST \\\n  'https://api.vmware-solutions.cloud.ibm.com/v1/vcenters/nsxt?verify_only=false&check_price=true' \\\n  -H 'authorization: Bearer <IAM_token>' \\\n  -H 'Content-Type:application/json' \\\n  -d '{\n      \"name\": \"my-nsxt\",\n      \"dns_type\": \"vsi\",\n      \"root_domain\": \"domain.local\",\n      \"domain_type\": \"primary\",\n      \"subdomain\": \"mysubdomain\",\n      \"vcs_type\": \"vcs_nsx_t\",\n      \"vsphere_version\": \"6.7\",\n      \"host_prefix\": \"host\",\n      \"license_keys\": {\n          \"vsphere\": {\n              \"key\": \"\"\n          },\n          \"vcenter\": {\n              \"key\": \"\"\n          },\n          \"nsx\": {\n              \"key\": \"\",\n              \"license_type\": \"advanced\"\n          }\n      },\n      \"management\": {\n          \"cluster_name\": \"my-management-cluster\",\n          \"customized_hardware\": {\n              \"server\": \"INTEL_INTEL_XEON_4210_2_20\",\n              \"ram\": \"RAM_192_GB_DDR4_2133_ECC_REG\"\n          },\n          \"template_id\": \"1\",\n          \"shared_storages\": [\n              {\n                  \"quantity\": 1,\n                  \"volume\": 1000,\n                  \"iops\": \"READHEAVY_TIER\",\n                  \"size\": \"STORAGE_SPACE_FOR_2_IOPS_PER_GB\"\n              }\n          ],\n          \"quantity\": 3,\n          \"location\": \"dal12\",\n          \"network\": {\n              \"private_only\": false\n          }\n      },\n      \"workload\": {\n          \"cluster_name\": \"my-workload-cluster\",\n          \"customized_hardware\": {\n              \"server\": \"INTEL_INTEL_XEON_5218_2_30\",\n              \"ram\": \"RAM_128_GB_DDR4_2133_ECC_REG\"\n          },\n          \"template_id\": \"1\",\n          \"shared_storages\": [\n              {\n                  \"quantity\": 1,\n                  \"volume\": 1000,\n                  \"iops\": \"READHEAVY_TIER\",\n                  \"size\": \"STORAGE_SPACE_FOR_2_IOPS_PER_GB\"\n              }\n          ],\n          \"quantity\": 2,\n          \"location\": \"dal12\",\n          \"network\": {\n              \"private_only\": false\n          }\n      },\n      \"edge\": {\n          \"location\": \"dal12\",\n          \"cluster_name\": \"my-edge-cluster\",\n          \"quantity\": 2,\n          \"network\": {\n              \"private_only\": false\n          },\n          \"customized_hardware\": {\n              \"server\": \"2U_VMW_BARE_METAL_GATEWAY_10_GBPS\",\n              \"ram\": \"RAM_64_GB_DDR4_2133_ECC_NON_REG\"\n          }\n      },\n      \"services\": [\n          {\n              \"service_info\": {\n                  \"service_id\": \"vSRX\",\n                  \"variables\": {\n                      \"nickname\": \"myedge\",\n                      \"vsrx_license_type\": \"Standard Edition\",\n                      \"target_cluster\": \"edge\"\n                  }\n              }\n          }\n      ],\n  }"
                      ]
                    }
                  ]
                }
              ]
            }
          },
          "responses": {
            "200": {
              "description": "Success. The request has been successfully verified."
            },
            "202": {
              "description": "Success. The request for creating the vCenter Server instance with NSX-T has been accepted.",
              "headers": {
                "x-global-transaction-id": {
                  "description": "Global transaction ID for request correlation.",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/vcenter_order_response"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/400"
            },
            "401": {
              "$ref": "#/components/responses/401"
            },
            "403": {
              "$ref": "#/components/responses/403"
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        }
      },
      "/v1/vcenters/mcv": {
        "post": {
          "tags": [
            "vcenters"
          ],
          "summary": "Order a new multi-zone stretched cluster instance or verify the order.",
          "description": "Order a new multi-zone stretched cluster instance or verify the order with specified configurations.",
          "operationId": "controllers.public.v1.proxy.order_mcv",
          "parameters": [
            {
              "$ref": "#/components/parameters/authorization"
            },
            {
              "$ref": "#/components/parameters/transaction_id"
            },
            {
              "$ref": "#/components/parameters/verify_only"
            },
            {
              "$ref": "#/components/parameters/check_price"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "x-body-name": "mcv_order_data",
                  "$ref": "#/components/schemas/mcv_order_data"
                }
              }
            },
            "description": "Order specification with configurations.",
            "required": true
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request (Use quotation marks for URL with parameters)",
                  "example": [
                    {
                      "type": "code",
                      "lang": "curl",
                      "source": [
                        "curl -X POST \\\n  'https://api.vmware-solutions.cloud.ibm.com/v1/vcenters/mcv?verify_only=false&check_price=true' \\\n  -H 'authorization: Bearer <IAM_token>' \\\n  -H 'Content-Type:application/json' \\\n  -d '{\n      \"dns_type\": \"vsi\",\n      \"license_keys\": {\n          \"vsan\": {\n              \"key\": \"\",\n              \"license_type\": \"enterprise\"\n          },\n          \"nsx\": {\n              \"key\": \"\",\n              \"license_type\": \"advanced\"\n          }\n      },\n      \"domain_type\": \"primary\",\n      \"deploy_type\": \"mcv\",\n      \"vsphere_version\": \"7.0\",\n      \"mzr_location\": \"Washington\",\n      \"name\": \"my-inst\",\n      \"host_prefix\": \"host\",\n      \"root_domain\": \"test.local.com\",\n      \"management\": {\n          \"cluster_name\": \"mgt-cluster\",\n          \"customized_hardware\": {\n              \"server\": \"INTEL_INTEL_XEON_4210_2_20\",\n              \"ram\": \"RAM_128_GB_DDR4_2133_ECC_REG\",\n              \"disks\": [\n                  \"HARD_DRIVE_960GB_SSD_SED_5DWPD\",\n                  \"HARD_DRIVE_960GB_SSD_SED_5DWPD\"\n              ],\n              \"vsan_cache_disks\": [\n                  \"HARD_DRIVE_960GB_SSD_SED_5DWPD\",\n                  \"HARD_DRIVE_960GB_SSD_SED_5DWPD\"\n              ]\n          },\n          \"template_id\": \"1\",\n          \"quantity\": 3\n      },\n      \"witness\": {\n          \"cluster_name\": \"witness-cluster\",\n          \"customized_hardware\": {\n              \"server\": \"INTEL_INTEL_XEON_4210_2_20\",\n              \"ram\": \"RAM_128_GB_DDR4_2133_ECC_REG\"\n          },\n          \"template_id\": \"1\",\n          \"shared_storages\": [\n              {\n                  \"iops\": \"READHEAVY_TIER\",\n                  \"quantity\": 1,\n                  \"volume\": 1000,\n                  \"size\": \"STORAGE_SPACE_FOR_2_IOPS_PER_GB\"\n              }\n          ],\n          \"quantity\": 2,\n          \"witness_location\": \"wdc04\"\n      },\n      \"edge\": {\n          \"cluster_name\": \"edge-cluster\",\n          \"quantity\": 2,\n          \"private_only\": false,\n          \"customized_hardware\": {\n              \"server\": \"2U_VMW_BARE_METAL_GATEWAY_10_GBPS_4210\",\n              \"ram\": \"RAM_64_GB_DDR4_2133_ECC_NON_REG\"\n          },\n          \"datacenters\": [\n              \"wdc04\",\n              \"wdc06\",\n              \"wdc07\"\n          ]\n      },\n      \"workload\": {\n          \"cluster_name\": \"workload-cluster\",\n          \"cluster_type\": \"stretched\",\n          \"hardware\": {\n              \"customized_hardware\": {\n                  \"server\": \"INTEL_INTEL_XEON_4210_2_20\",\n                  \"ram\": \"RAM_128_GB_DDR4_2133_ECC_REG\",\n                  \"disks\": [\n                      \"HARD_DRIVE_960GB_SSD_SED_5DWPD\",\n                      \"HARD_DRIVE_960GB_SSD_SED_5DWPD\"\n                  ],\n                  \"vsan_cache_disks\": [\n                      \"HARD_DRIVE_960GB_SSD_SED_5DWPD\",\n                      \"HARD_DRIVE_960GB_SSD_SED_5DWPD\"\n                  ],\n                  \"vsan_compression\": false\n              },\n              \"quantity\": 3\n          },\n          \"datacenters\": [\n              \"wdc06\",\n              \"wdc07\"\n          ]\n      },\n      \"services\": [\n          {\n              \"service_info\": {\n                  \"service_id\": \"vSRX\",\n                  \"variables\": {\n                      \"nickname\": \"myedge\",\n                      \"vsrx_license_type\": \"Standard Edition\",\n                      \"target_cluster\": \"edge\"\n                  }\n              }\n          }\n      ]\n  }"
                      ]
                    }
                  ]
                }
              ]
            }
          },
          "responses": {
            "200": {
              "description": "Success. The request has been successfully verified."
            },
            "202": {
              "description": "Success. The request for creating the Multi-Zone Stretched Cluster instance has been accepted.",
              "headers": {
                "x-global-transaction-id": {
                  "description": "Global transaction ID for request correlation.",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/vcenter_order_response"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/400"
            },
            "401": {
              "$ref": "#/components/responses/401"
            },
            "403": {
              "$ref": "#/components/responses/403"
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        }
      },
      "/v1/vcenters/{instance_id}": {
        "get": {
          "tags": [
            "vcenters"
          ],
          "summary": "Retrieve the detailed information of a vCenter Server instance.",
          "description": "Retrieve the detailed information of a vCenter Server instance.",
          "operationId": "controllers.public.v1.proxy.get_vcenter",
          "parameters": [
            {
              "$ref": "#/components/parameters/authorization"
            },
            {
              "$ref": "#/components/parameters/instance_id"
            },
            {
              "$ref": "#/components/parameters/transaction_id"
            }
          ],
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "lang": "curl",
                      "source": [
                        "curl -X GET \\\n  https://api.vmware-solutions.cloud.ibm.com/v1/vcenters/<instance_id> \\\n  -H 'authorization: Bearer <IAM_token>' \\\n  -H 'Content-Type:application/json'"
                      ]
                    }
                  ]
                }
              ]
            }
          },
          "responses": {
            "200": {
              "description": "Success.",
              "headers": {
                "x-global-transaction-id": {
                  "description": "Global transaction ID for request correlation.",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/vcenter_detail"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/401"
            },
            "403": {
              "$ref": "#/components/responses/403"
            },
            "404": {
              "$ref": "#/components/responses/404"
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        },
        "delete": {
          "tags": [
            "vcenters"
          ],
          "summary": "Delete a vCenter Server instance.",
          "description": "Delete a vCenter Server instance.",
          "operationId": "controllers.public.v1.proxy.delete_vcenter",
          "parameters": [
            {
              "$ref": "#/components/parameters/authorization"
            },
            {
              "$ref": "#/components/parameters/instance_id"
            },
            {
              "$ref": "#/components/parameters/transaction_id"
            }
          ],
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "lang": "curl",
                      "source": [
                        "curl -X DELETE \\\n  https://api.vmware-solutions.cloud.ibm.com/v1/vcenters/<instance_id> \\\n  -H 'authorization: Bearer <IAM_token>' \\\n  -H 'Content-Type:application/json'"
                      ]
                    }
                  ]
                }
              ]
            }
          },
          "responses": {
            "202": {
              "description": "Success. The request for deleting the vCenter Server instance has been accepted."
            },
            "401": {
              "$ref": "#/components/responses/401"
            },
            "403": {
              "$ref": "#/components/responses/403"
            },
            "404": {
              "$ref": "#/components/responses/404"
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        }
      },
      "/v1/vcenters/{instance_id}/clusters": {
        "post": {
          "tags": [
            "vcenters"
          ],
          "summary": "Add a cluster for a specified vCenter Server instance or verify the order.",
          "description": "Add a cluster for a specified vCenter Server instance or verify the order.",
          "operationId": "controllers.public.v1.proxy.order_vcenter_cluster",
          "parameters": [
            {
              "$ref": "#/components/parameters/authorization"
            },
            {
              "$ref": "#/components/parameters/instance_id"
            },
            {
              "$ref": "#/components/parameters/transaction_id"
            },
            {
              "$ref": "#/components/parameters/verify_only"
            },
            {
              "$ref": "#/components/parameters/check_price"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "x-body-name": "cluster_order_data",
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/cluster_order_data"
                    },
                    {
                      "$ref": "#/components/schemas/mcv_cluster_order_data"
                    },
                    {
                      "$ref": "#/components/schemas/edge_cluster_data"
                    }
                  ]
                }
              }
            },
            "description": "Cluster order specification with configurations.",
            "required": true
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request to add workload cluster to NSX-V or NSX-T instance.",
                  "example": [
                    {
                      "type": "code",
                      "lang": "curl",
                      "source": [
                        "curl -X POST \\\n  'https://api.vmware-solutions.cloud.ibm.com/v1/vcenters/<instance_id>/clusters?verify_only=false&check_price=true' \\\n  -H 'authorization: Bearer <IAM_token>' \\\n  -H 'Content-Type:application/json' \\\n  -d '{\n    \"cluster_name\": \"mycluster\",\n    \"host_prefix\": \"myhost\",\n    \"location\": \"sjc03\",\n    \"license_keys\": {\n      \"vsphere\": {\n        \"key\": \"\"\n      }\n    },\n    \"hardware\": {\n      \"quantity\": 2,\n      \"customized_hardware\": {\n        \"server\": \"INTEL_INTEL_XEON_4210_2_20\",\n        \"ram\": \"RAM_64_GB_DDR4_2133_ECC_NON_REG\"\n      }\n    },\n    \"shared_storages\": [\n      {\n        \"iops\": \"LOW_INTENSITY_TIER\",\n        \"quantity\": 1,\n        \"volume\": 1000,\n        \"size\": \"STORAGE_SPACE_FOR_0_25_IOPS_PER_GB\"\n      }\n    ]\n    \"is_default_pod\": true,\n    \"network\": {\n      \"private_only\": false\n    },\n    \"networking\": {\n        \"public_vlan\": {\n            \"id\": 1234567,\n            \"primary_subnet_id\": 4567890\n        }\n    }\n  }'"
                      ]
                    }
                  ]
                },
                {
                  "name": "Example request to add workload cluster to a multizone instance.",
                  "example": [
                    {
                      "type": "code",
                      "lang": "curl",
                      "source": [
                        "curl -X POST \\\n  'https://api.vmware-solutions.cloud.ibm.com/v1/vcenters/<instance_id>/clusters?verify_only=false&check_price=true' \\\n  -H 'authorization: Bearer <IAM_token>' \\\n  -H 'Content-Type:application/json' \\\n  -d '{\n    \"cluster_name\": \"vsan-workload-cluster\",\n    \"cluster_type\": \"stretched\",\n    \"host_prefix\": \"host\",\n    \"datacenters\": [\n        \"syd04\",\n        \"syd05\"\n    ],\n    \"hardware\": {\n        \"customized_hardware\": {\n            \"server\": \"INTEL_INTEL_XEON_4210_2_20\",\n            \"ram\": \"RAM_128_GB_DDR4_2133_ECC_REG\",\n            \"disks\": [\n                \"HARD_DRIVE_960GB_SSD_SED_5DWPD\",\n                \"HARD_DRIVE_960GB_SSD_SED_5DWPD\"\n            ],\n            \"vsan_cache_disks\": [\n                \"HARD_DRIVE_960GB_SSD_SED_5DWPD\",\n                \"HARD_DRIVE_960GB_SSD_SED_5DWPD\"\n            ],\n            \"vsan_compression\": true\n        },\n        \"quantity\": 3\n    },\n    \"network\": {\n        \"private_only\": true,\n        \"uplink_speed\": \"10GB\"\n    }\n  }'"
                      ]
                    }
                  ]
                },
                {
                  "name": "Example request to add edge services cluster to an instance.",
                  "example": [
                    {
                      "type": "code",
                      "lang": "curl",
                      "source": [
                        "curl -X POST \\\n  'https://api.vmware-solutions.cloud.ibm.com/v1/vcenters/<instance_id>/clusters?verify_only=false&check_price=true' \\\n  -H 'authorization: Bearer <IAM_token>' \\\n  -H 'Content-Type:application/json' \\\n  -d '{\n    \"cluster_name\": \"edge-cluster\",\n    \"location\": \"syd04\",\n    \"cluster_type\": \"edge\",\n    \"customized_hardware\": {\n        \"server\": \"2U_VMW_BARE_METAL_GATEWAY_10_GBPS_4210\",\n        \"ram\": \"RAM_64_GB_DDR4_2133_ECC_NON_REG\"\n    },\n    \"quantity\": 2,\n    \"network\": {\n        \"private_only\": true,\n        \"uplink_speed\": \"10GB\"\n    }\n  }'"
                      ]
                    }
                  ]
                }
              ]
            }
          },
          "responses": {
            "200": {
              "description": "Success. The request has been successfully verified."
            },
            "202": {
              "description": "Success. The request for adding the new cluster has been accepted.",
              "headers": {
                "x-global-transaction-id": {
                  "description": "Global transaction ID for request correlation.",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/cluster_order_response"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/400"
            },
            "401": {
              "$ref": "#/components/responses/401"
            },
            "403": {
              "$ref": "#/components/responses/403"
            },
            "404": {
              "$ref": "#/components/responses/404"
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        }
      },
      "/v1/vcenters/{instance_id}/clusters/{cluster_id}": {
        "get": {
          "tags": [
            "vcenters"
          ],
          "summary": "Retrieve the detailed information of a cluster.",
          "description": "Retrieve the detailed information of a specified cluster deployed in a specified vCenter Server instance.",
          "operationId": "controllers.public.v1.proxy.get_vcenter_cluster",
          "parameters": [
            {
              "$ref": "#/components/parameters/authorization"
            },
            {
              "$ref": "#/components/parameters/instance_id"
            },
            {
              "$ref": "#/components/parameters/cluster_id"
            },
            {
              "$ref": "#/components/parameters/transaction_id"
            }
          ],
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "lang": "curl",
                      "source": [
                        "curl -X GET \\\n  https://api.vmware-solutions.cloud.ibm.com/v1/vcenters/<instance_id>/clusters/<cluster_id> \\\n  -H 'authorization: Bearer <IAM_token>' \\\n  -H 'Content-Type:application/json'"
                      ]
                    }
                  ]
                }
              ]
            }
          },
          "responses": {
            "200": {
              "description": "Success.",
              "headers": {
                "x-global-transaction-id": {
                  "description": "Global transaction ID for request correlation.",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/cluster_detail"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/401"
            },
            "403": {
              "$ref": "#/components/responses/403"
            },
            "404": {
              "$ref": "#/components/responses/404"
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        },
        "delete": {
          "tags": [
            "vcenters"
          ],
          "summary": "Delete a cluster",
          "description": "Delete a specified cluster from a specified vCenter Server instance.",
          "operationId": "controllers.public.v1.proxy.delete_vcenter_cluster",
          "parameters": [
            {
              "$ref": "#/components/parameters/authorization"
            },
            {
              "$ref": "#/components/parameters/instance_id"
            },
            {
              "$ref": "#/components/parameters/cluster_id"
            },
            {
              "$ref": "#/components/parameters/transaction_id"
            }
          ],
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "lang": "curl",
                      "source": [
                        "curl -X DELETE \\\n  https://api.vmware-solutions.cloud.ibm.com/v1/vcenters/<instance_id>/clusters/<cluster_id> \\\n  -H 'authorization: Bearer <IAM_token>' \\\n  -H 'Content-Type:application/json'"
                      ]
                    }
                  ]
                }
              ]
            }
          },
          "responses": {
            "202": {
              "description": "Success. The request for deleting the cluster has been accepted."
            },
            "401": {
              "$ref": "#/components/responses/401"
            }
          }
        }
      },
      "/v1/vcenters/{instance_id}/clusters/{cluster_id}/hosts": {
        "post": {
          "tags": [
            "vcenters"
          ],
          "summary": "Add new hosts to a specified cluster.",
          "description": "Add new hosts to a specified cluster for a specified vCenter Server instance.",
          "operationId": "controllers.public.v1.proxy.add_vcenter_hosts",
          "parameters": [
            {
              "$ref": "#/components/parameters/authorization"
            },
            {
              "$ref": "#/components/parameters/instance_id"
            },
            {
              "$ref": "#/components/parameters/cluster_id"
            },
            {
              "$ref": "#/components/parameters/transaction_id"
            },
            {
              "$ref": "#/components/parameters/verify_only"
            },
            {
              "$ref": "#/components/parameters/check_price"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "x-body-name": "hosts_order_data",
                  "$ref": "#/components/schemas/hosts_order_data"
                }
              }
            },
            "description": "Parameters for adding new hosts.",
            "required": true
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request to add two hosts.",
                  "example": [
                    {
                      "type": "code",
                      "lang": "curl",
                      "source": [
                        "curl -X POST \\\n  'https://api.vmware-solutions.cloud.ibm.com/v1/vcenters/<instance_id>/clusters/<cluster_id>/hosts?verify_only=false&check_price=true' \\\n  -H 'authorization: Bearer <IAM_token>' \\\n  -H 'Content-Type:application/json' \\\n  -d '{\n    \"quantity\": 2\n  }'"
                      ]
                    }
                  ]
                }
              ]
            }
          },
          "responses": {
            "200": {
              "description": "Success. The request has been successfully verified."
            },
            "202": {
              "description": "Success. The request for adding new hosts has been accepted."
            },
            "400": {
              "$ref": "#/components/responses/400"
            },
            "401": {
              "$ref": "#/components/responses/401"
            },
            "403": {
              "$ref": "#/components/responses/403"
            },
            "404": {
              "$ref": "#/components/responses/404"
            },
            "409": {
              "$ref": "#/components/responses/409"
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        },
        "patch": {
          "tags": [
            "vcenters"
          ],
          "summary": "Delete hosts from a specified cluster",
          "description": "Delete hosts from a specified cluster for a specified vCenter Server instance.",
          "operationId": "controllers.public.v1.proxy.batch_delete_vcenter_hosts",
          "parameters": [
            {
              "$ref": "#/components/parameters/authorization"
            },
            {
              "$ref": "#/components/parameters/instance_id"
            },
            {
              "$ref": "#/components/parameters/cluster_id"
            },
            {
              "$ref": "#/components/parameters/transaction_id"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "x-body-name": "hosts_delete_data",
                  "type": "object",
                  "required": [
                    "action",
                    "hosts"
                  ],
                  "properties": {
                    "action": {
                      "description": "Action to be performed against the specified hosts. 'delete' is the only supported value.",
                      "type": "string",
                      "enum": [
                        "delete"
                      ]
                    },
                    "hosts": {
                      "type": "array",
                      "description": "List of host IDs to be deleted. Delete these specified hosts from a specified cluster.",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "description": "Parameters for deleting hosts.",
            "required": true
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "lang": "curl",
                      "source": [
                        "curl -X PATCH \\\n  https://api.vmware-solutions.cloud.ibm.com/v1/vcenters/<instance_id>/clusters/<cluster_id>/hosts \\\n  -H 'authorization: Bearer <IAM_token>' \\\n  -H 'Content-Type:application/json' \\\n  -d '{\n      \"action\": \"delete\",\n      \"hosts\": [\n        \"8945234\",\n        \"7843945\"\n      ]\n    }'"
                      ]
                    }
                  ]
                }
              ]
            }
          },
          "responses": {
            "202": {
              "description": "Success. The request for deleting the specified hosts has been accepted."
            },
            "400": {
              "$ref": "#/components/responses/400"
            },
            "401": {
              "$ref": "#/components/responses/401"
            },
            "403": {
              "$ref": "#/components/responses/403"
            },
            "404": {
              "$ref": "#/components/responses/404"
            },
            "409": {
              "$ref": "#/components/responses/409"
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        }
      },
      "/v1/vcenters/{instance_id}/clusters/{cluster_id}/shared_storages": {
        "post": {
          "tags": [
            "vcenters"
          ],
          "summary": "Add shared storages to a specified cluster",
          "description": "Add new shared storages to a specified cluster for a specified vCenter Server instance.",
          "operationId": "controllers.public.v1.proxy.add_vcenter_nfs_storage",
          "parameters": [
            {
              "$ref": "#/components/parameters/authorization"
            },
            {
              "$ref": "#/components/parameters/instance_id"
            },
            {
              "$ref": "#/components/parameters/cluster_id"
            },
            {
              "$ref": "#/components/parameters/transaction_id"
            },
            {
              "$ref": "#/components/parameters/verify_only"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "x-body-name": "nfs_order_data",
                  "type": "object",
                  "required": [
                    "shared_storages"
                  ],
                  "properties": {
                    "shared_storages": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/shared_storage_config"
                      }
                    }
                  },
                  "additionalProperties": false
                }
              }
            },
            "description": "Parameters for adding new Network File System (NFS) storage.",
            "required": true
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "lang": "curl",
                      "source": [
                        "curl -X POST \\\n  https://api.vmware-solutions.cloud.ibm.com/v1/vcenters/<instance_id>/clusters/<cluster_id>/shared_storages?verify_only=false \\\n  -H 'authorization: Bearer <IAM_token>' \\\n  -H 'Content-Type:application/json' \\\n  -d '{\n      \"shared_storages\": [\n        {\n          \"iops\": \"LOW_INTENSITY_TIER\",\n          \"size\": \"STORAGE_SPACE_FOR_0_25_IOPS_PER_GB\",\n          \"volume\": 2000,\n          \"quantity\": 1\n        }\n      ]\n  }'"
                      ]
                    }
                  ]
                }
              ]
            }
          },
          "responses": {
            "200": {
              "description": "Success. The request has been successfully verified."
            },
            "202": {
              "description": "Success. The request for adding new NFS storage has been accepted."
            },
            "400": {
              "$ref": "#/components/responses/400"
            },
            "401": {
              "$ref": "#/components/responses/401"
            },
            "403": {
              "$ref": "#/components/responses/403"
            },
            "404": {
              "$ref": "#/components/responses/404"
            },
            "409": {
              "$ref": "#/components/responses/409"
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        },
        "patch": {
          "tags": [
            "vcenters"
          ],
          "summary": "Delete NFS storages from a specified cluster",
          "description": "Delete Network File System (NFS) storages from a specified cluster for a specified vCenter Server instance.",
          "operationId": "controllers.public.v1.proxy.batch_delete_vcenter_nfs_storage",
          "parameters": [
            {
              "$ref": "#/components/parameters/authorization"
            },
            {
              "$ref": "#/components/parameters/instance_id"
            },
            {
              "$ref": "#/components/parameters/cluster_id"
            },
            {
              "$ref": "#/components/parameters/transaction_id"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "x-body-name": "nfs_delete_data",
                  "type": "object",
                  "required": [
                    "action",
                    "storage_ids"
                  ],
                  "properties": {
                    "action": {
                      "description": "Action to be performed against the specified shared storages. 'delete' is the only supported value.",
                      "type": "string",
                      "enum": [
                        "delete"
                      ]
                    },
                    "storage_ids": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of NFS storage IDs to be deleted. Delete these specified storages from a specified cluster."
                    }
                  },
                  "additionalProperties": false
                }
              }
            },
            "description": "NFS storage ID list for deleting.",
            "required": true
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "lang": "curl",
                      "source": [
                        "curl -X PATCH \\\n  https://api.vmware-solutions.cloud.ibm.com/v1/vcenters/<instance_id>/clusters/<cluster_id>/shared_storages \\\n  -H 'authorization: Bearer <IAM_token>' \\\n  -H 'Content-Type:application/json' \\\n  -d '{\n        \"action\": \"delete\",\n        \"storage_ids\": [\n          \"3422454323\"\n        ]\n    }'"
                      ]
                    }
                  ]
                }
              ]
            }
          },
          "responses": {
            "202": {
              "description": "Success. The request for deleting the specified nfs storage has been accepted."
            },
            "400": {
              "$ref": "#/components/responses/400"
            },
            "401": {
              "$ref": "#/components/responses/401"
            },
            "403": {
              "$ref": "#/components/responses/403"
            },
            "404": {
              "$ref": "#/components/responses/404"
            },
            "409": {
              "$ref": "#/components/responses/409"
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        }
      },
      "/v2/locations": {
        "get": {
          "tags": [
            "utils"
          ],
          "summary": "Get the list of supported data center locations as a JSON object",
          "description": "Get the list of supported data center locations as a JSON object, and the key name is \"locations\".",
          "operationId": "controllers.public.v2.proxy.list_locations",
          "parameters": [
            {
              "$ref": "#/components/parameters/transaction_id"
            }
          ],
          "responses": {
            "200": {
              "description": "Success.",
              "headers": {
                "x-global-transaction-id": {
                  "description": "Global transaction ID for request correlation.",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/def_locations"
                  }
                }
              }
            }
          }
        }
      },
      "/v2/mzr_locations": {
        "get": {
          "tags": [
            "utils"
          ],
          "summary": "Get the list of supported data center locations as a JSON object",
          "description": "Get the list of supported data center locations as a JSON object, and the key name is \"mzr_locations\".",
          "operationId": "controllers.public.v2.proxy.list_mzr_locations",
          "parameters": [
            {
              "$ref": "#/components/parameters/transaction_id"
            }
          ],
          "responses": {
            "200": {
              "description": "Success.",
              "headers": {
                "x-global-transaction-id": {
                  "description": "Global transaction ID for request correlation.",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/def_mzr_locations"
                  }
                }
              }
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        }
      },
      "/v2/templates": {
        "get": {
          "tags": [
            "utils"
          ],
          "summary": "Get the list of available hardware templates as a JSON object",
          "description": "Get the list of available hardware templates as a JSON object, and the key name is \"templates\".",
          "operationId": "controllers.public.v2.proxy.list_templates",
          "parameters": [
            {
              "$ref": "#/components/parameters/transaction_id"
            },
            {
              "$ref": "#/components/parameters/location"
            },
            {
              "in": "query",
              "name": "tag",
              "description": "The specific tag to view customer specific templates.",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "att",
                  "hourly"
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success.",
              "headers": {
                "x-global-transaction-id": {
                  "description": "Global transaction ID for request correlation.",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/def_templates"
                  }
                }
              }
            }
          }
        }
      },
      "/v2/server_types": {
        "get": {
          "tags": [
            "utils"
          ],
          "summary": "Get the list of supported server CPU types per location  or vSphere version as a JSON object",
          "description": "Get the list of supported server types per location or vSphere version as a JSON object. The key name is the given location value or the vSphere version value. If no location or vSphere version is given, the key name is \"server_types”.",
          "operationId": "controllers.public.v2.proxy.list_server_types",
          "parameters": [
            {
              "$ref": "#/components/parameters/transaction_id"
            },
            {
              "$ref": "#/components/parameters/location"
            },
            {
              "$ref": "#/components/parameters/vsphere_version"
            }
          ],
          "responses": {
            "200": {
              "description": "Success.",
              "headers": {
                "x-global-transaction-id": {
                  "description": "Global transaction ID for request correlation per location.",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/def_server_types"
                  }
                }
              }
            }
          }
        }
      },
      "/v2/ram_types": {
        "get": {
          "tags": [
            "utils"
          ],
          "summary": "Get the list of supported RAM types as a JSON object",
          "description": "Get the list of supported RAM types as a JSON object, and the key name is \"ram_types\".",
          "operationId": "controllers.public.v2.proxy.list_ram_types",
          "parameters": [
            {
              "$ref": "#/components/parameters/transaction_id"
            }
          ],
          "responses": {
            "200": {
              "description": "Success.",
              "headers": {
                "x-global-transaction-id": {
                  "description": "Global transaction ID for request correlation.",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/def_ram_types"
                  }
                }
              }
            }
          }
        }
      },
      "/v2/disk_types": {
        "get": {
          "tags": [
            "utils"
          ],
          "summary": "Get the list of supported disk types as a JSON object",
          "description": "Get the list of supported disk types as a JSON object, and the key name is \"disk_types\".",
          "operationId": "controllers.public.v2.proxy.list_disk_types",
          "parameters": [
            {
              "$ref": "#/components/parameters/transaction_id"
            }
          ],
          "responses": {
            "200": {
              "description": "Success.",
              "headers": {
                "x-global-transaction-id": {
                  "description": "Global transaction ID for request correlation.",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/def_disk_types"
                  }
                }
              }
            }
          }
        }
      },
      "/v2/shared_storage_tiers": {
        "get": {
          "tags": [
            "utils"
          ],
          "summary": "Get the list of supported shared storage tiers as a JSON object",
          "description": "Get the list of supported shared storage tiers as a JSON object, and the key name is \"shared_storage_tiers\".",
          "operationId": "controllers.public.v2.proxy.list_shared_storage_tiers",
          "parameters": [
            {
              "$ref": "#/components/parameters/transaction_id"
            }
          ],
          "responses": {
            "200": {
              "description": "Success.",
              "headers": {
                "x-global-transaction-id": {
                  "description": "Global transaction ID for request correlation.",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/def_shared_storage_tiers"
                  }
                }
              }
            }
          }
        }
      },
      "/v2/vsphere_versions": {
        "get": {
          "tags": [
            "utils"
          ],
          "summary": "Get the list of supported vSphere versions as a JSON object",
          "description": "Get the list of supported vSphere versions as a JSON object, and the key name is \"vsphere_versions\".",
          "operationId": "controllers.public.v2.proxy.list_vsphere_versions",
          "parameters": [
            {
              "$ref": "#/components/parameters/transaction_id"
            }
          ],
          "responses": {
            "200": {
              "description": "Success.",
              "headers": {
                "x-global-transaction-id": {
                  "description": "Global transaction ID for request correlation.",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/def_vsphere_versions"
                  }
                }
              }
            }
          }
        }
      },
      "/v2/vcenters": {
        "get": {
          "tags": [
            "vcenters"
          ],
          "summary": "List all vCenter Server instances as a JSON object",
          "description": "List all the vCenter Server instances that the user can access. The key name is \"vcenters\".",
          "operationId": "controllers.public.v2.proxy.list_vcenters",
          "parameters": [
            {
              "$ref": "#/components/parameters/authorization"
            },
            {
              "$ref": "#/components/parameters/transaction_id"
            }
          ],
          "responses": {
            "200": {
              "description": "Success.",
              "headers": {
                "x-global-transaction-id": {
                  "description": "Global transaction ID for request correlation.",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/def_vcenters"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/401"
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        }
      },
      "/v2/vcenters/{instance_id}/history": {
        "get": {
          "tags": [
            "vcenters"
          ],
          "summary": "List all history messages for a specified vCenter Server instance as a JSON object",
          "description": "List all the history messages in a specified vCenter Server instance within the specified time frame. If the history messages are obtained, the key name is \"history_messages\". Otherwise the key name is \"errors\".",
          "operationId": "controllers.public.v2.proxy.get_vcenter_history_messages",
          "parameters": [
            {
              "$ref": "#/components/parameters/authorization"
            },
            {
              "$ref": "#/components/parameters/instance_id"
            },
            {
              "$ref": "#/components/parameters/transaction_id"
            },
            {
              "name": "start_date",
              "in": "query",
              "description": "The start date from when history messages are retrieved. If it is not specified, the date when the instance was deployed is used. The format is YYYY-MM-DD.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date"
              }
            },
            {
              "name": "end_date",
              "in": "query",
              "description": "The end date to when history messages are retrieved. If it is not specified, the current date is used. The format is YYYY-MM-DD.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success.",
              "headers": {
                "x-global-transaction-id": {
                  "description": "Global transaction ID for request correlation.",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/def_history_messages"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/401"
            },
            "403": {
              "$ref": "#/components/responses/403"
            },
            "404": {
              "$ref": "#/components/responses/404"
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        }
      },
      "/v2/vcenters/{instance_id}/clusters": {
        "get": {
          "tags": [
            "vcenters"
          ],
          "summary": "List all the clusters for a specified vCenter Server instance as a JSON object",
          "description": "List all the clusters that are deployed in a specified vCenter Server instance as a JSON object. If the clusters are obtained, the key name is \"clusters\". Otherwise the key name is \"errors\".",
          "operationId": "controllers.public.v2.proxy.list_vcenter_clusters",
          "parameters": [
            {
              "$ref": "#/components/parameters/authorization"
            },
            {
              "$ref": "#/components/parameters/instance_id"
            },
            {
              "$ref": "#/components/parameters/transaction_id"
            }
          ],
          "responses": {
            "200": {
              "description": "Success.",
              "headers": {
                "x-global-transaction-id": {
                  "description": "Global transaction ID for request correlation.",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/def_clusters"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/401"
            },
            "403": {
              "$ref": "#/components/responses/403"
            },
            "404": {
              "$ref": "#/components/responses/404"
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        }
      },
      "/v2/vcenters/{instance_id}/clusters/{cluster_id}/vlans": {
        "get": {
          "tags": [
            "vcenters"
          ],
          "summary": "Retrieve the detailed network interface of a cluster as a JSON object",
          "description": "Retrieve the detailed information of network interface for a specified cluster as a JSON object. If the detailed network interface information is obtained, the key name is \"array_vlans\". Otherwise the key name is \"errors\".",
          "operationId": "controllers.public.v2.proxy.get_vlans_for_cluster",
          "parameters": [
            {
              "$ref": "#/components/parameters/authorization"
            },
            {
              "$ref": "#/components/parameters/instance_id"
            },
            {
              "$ref": "#/components/parameters/cluster_id"
            },
            {
              "$ref": "#/components/parameters/transaction_id"
            }
          ],
          "responses": {
            "200": {
              "description": "Success.",
              "headers": {
                "x-global-transaction-id": {
                  "description": "Global transaction ID for request correlation.",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/def_array_vlans"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/401"
            },
            "403": {
              "$ref": "#/components/responses/403"
            },
            "404": {
              "$ref": "#/components/responses/404"
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        }
      },
      "/v2/vcenters/{instance_id}/clusters/{cluster_id}/existing_network": {
        "get": {
          "tags": [
            "vcenters"
          ],
          "summary": "Retrieve the existing network of a cluster.",
          "description": "Retrieve the existing network of a specified cluster.",
          "operationId": "controllers.public.v2.proxy.get_existing_network_for_cluster",
          "parameters": [
            {
              "$ref": "#/components/parameters/authorization"
            },
            {
              "$ref": "#/components/parameters/instance_id"
            },
            {
              "$ref": "#/components/parameters/cluster_id"
            },
            {
              "$ref": "#/components/parameters/transaction_id"
            }
          ],
          "responses": {
            "200": {
              "description": "Success.",
              "headers": {
                "x-global-transaction-id": {
                  "description": "Global transaction ID for request correlation.",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/def_array_vlans"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/401"
            },
            "403": {
              "$ref": "#/components/responses/403"
            },
            "404": {
              "$ref": "#/components/responses/404"
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        }
      },
      "/v2/existing_network": {
        "get": {
          "tags": [
            "utils"
          ],
          "summary": "Retrieve the existing network in a datacenter",
          "description": "Retrieve the existing network from a specified datacenter.",
          "operationId": "controllers.public.v2.proxy.list_existing_network_dc",
          "parameters": [
            {
              "$ref": "#/components/parameters/authorization"
            },
            {
              "$ref": "#/components/parameters/transaction_id"
            },
            {
              "name": "datacenter",
              "in": "query",
              "description": "Datacenter ID.  Use /v1/locations to find datacenter ID.  Example `dal10`.",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success.",
              "headers": {
                "x-global-transaction-id": {
                  "description": "Global transaction ID for request correlation.",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/def_array_vlans"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/401"
            },
            "403": {
              "$ref": "#/components/responses/403"
            },
            "404": {
              "$ref": "#/components/responses/404"
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        }
      },
      "/v1/service_catalog": {
        "get": {
          "tags": [
            "services"
          ],
          "summary": "Get list of available services",
          "description": "Get the list of all available service offerings.",
          "operationId": "controllers.public.v1.proxy.get_service_catalog_list",
          "parameters": [
            {
              "$ref": "#/components/parameters/transaction_id"
            }
          ],
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request (Use quotes for URL with parameters)",
                  "example": [
                    {
                      "type": "code",
                      "lang": "curl",
                      "source": [
                        "curl -X GET \\\n  'https://api.vmware-solutions.cloud.ibm.com/v1/service_catalog' \\\n  -H 'authorization: Bearer <IAM_token>' \\\n  -H 'Content-Type:application/json'"
                      ]
                    }
                  ]
                }
              ]
            }
          },
          "responses": {
            "200": {
              "description": "Success.",
              "headers": {
                "x-global-transaction-id": {
                  "description": "Global transaction ID for request correlation.",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/service_catalog"
                  }
                }
              }
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        }
      },
      "/v1/service_catalog/{service_id}": {
        "get": {
          "tags": [
            "services"
          ],
          "summary": "Retrieve service information",
          "description": "Retrieve the detailed information on the service, including the set of necessary input fields, and their available options, for ordering the service, the service name, and an explanation of the service",
          "operationId": "controllers.public.v1.proxy.get_service_catalog_details",
          "parameters": [
            {
              "$ref": "#/components/parameters/authorization"
            },
            {
              "$ref": "#/components/parameters/transaction_id"
            },
            {
              "$ref": "#/components/parameters/service_id"
            }
          ],
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request (Use quotation marks for URL with parameters)",
                  "example": [
                    {
                      "type": "code",
                      "lang": "curl",
                      "source": [
                        "curl -X GET \\\n  'https://api.vmware-solutions.cloud.ibm.com/v1/service_catalog/<service_id>' \\\n  -H 'authorization: Bearer <IAM_token>' \\\n  -H 'Content-Type:application/json'"
                      ]
                    }
                  ]
                }
              ]
            }
          },
          "responses": {
            "200": {
              "description": "Success.",
              "headers": {
                "x-global-transaction-id": {
                  "description": "Global transaction ID for request correlation.",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/service_catalog_details"
                  }
                }
              }
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        }
      },
      "/v1/vcenters/{instance_id}/service_instances": {
        "get": {
          "tags": [
            "services"
          ],
          "summary": "List services on instance",
          "description": "List all the services on a specified vCenter Server instance.",
          "operationId": "controllers.public.v1.proxy.list_vcenter_services",
          "parameters": [
            {
              "$ref": "#/components/parameters/authorization"
            },
            {
              "$ref": "#/components/parameters/instance_id"
            },
            {
              "$ref": "#/components/parameters/transaction_id"
            },
            {
              "$ref": "#/components/parameters/installed_only"
            }
          ],
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request (Use quotation marks for URL with parameters)",
                  "example": [
                    {
                      "type": "code",
                      "lang": "curl",
                      "source": [
                        "curl -X GET \\\n  'https://api.vmware-solutions.cloud.ibm.com/v1/vcenters/<instance_id>/service_instances?installed_only=true' \\\n  -H 'authorization: Bearer <IAM_token>' \\\n  -H 'Content-Type:application/json'"
                      ]
                    }
                  ]
                }
              ]
            }
          },
          "responses": {
            "200": {
              "description": "Success.",
              "headers": {
                "x-global-transaction-id": {
                  "description": "Global transaction ID for request correlation.",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/service_instances"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/401"
            },
            "403": {
              "$ref": "#/components/responses/403"
            },
            "404": {
              "$ref": "#/components/responses/404"
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        },
        "post": {
          "tags": [
            "services"
          ],
          "summary": "Add services or verify order",
          "description": "Add service or services for a specified vCenter Server instance, verify the order, and check the price",
          "operationId": "controllers.public.v1.proxy.order_vcenter_service",
          "parameters": [
            {
              "$ref": "#/components/parameters/authorization"
            },
            {
              "$ref": "#/components/parameters/instance_id"
            },
            {
              "$ref": "#/components/parameters/transaction_id"
            },
            {
              "$ref": "#/components/parameters/verify_only"
            },
            {
              "$ref": "#/components/parameters/check_price"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "x-body-name": "service_order_data",
                  "$ref": "#/components/schemas/service_order_data"
                }
              }
            },
            "description": "Service order specification.",
            "required": true
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request (Use quotation marks for URL with parameters)",
                  "example": [
                    {
                      "type": "code",
                      "lang": "curl",
                      "source": [
                        "curl -X POST \\\n  'https://api.vmware-solutions.cloud.ibm.com/v1/vcenters/<instance_id>/service_instances?verify_only=false&check_price=true' \\\n  -H 'authorization: Bearer <IAM_token>' \\\n  -H 'Content-Type:application/json' \\\n  -d '{\n    \"services\": [\n      {\n        \"service_info\": {\n          \"service_id\": \"vSRX\",\n          \"variables\": {\n            \"nickname\": \"test-auto\",\n            \"vsrx_license_type\": \"Standard Edition\",\n            \"target_cluster\": \"0\"\n            }\n          }\n        }\n      ]\n    }'"
                      ]
                    }
                  ]
                }
              ]
            }
          },
          "responses": {
            "200": {
              "description": "Success. The request has been successfully verified."
            },
            "202": {
              "description": "Success. The request for adding the new service has been accepted.",
              "headers": {
                "x-global-transaction-id": {
                  "description": "Global transaction ID for request correlation.",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/service_order_response"
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/400"
            },
            "401": {
              "$ref": "#/components/responses/401"
            },
            "403": {
              "$ref": "#/components/responses/403"
            },
            "404": {
              "$ref": "#/components/responses/404"
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        }
      },
      "/v1/vcenters/{instance_id}/service_instances/{service_instance_id}": {
        "get": {
          "tags": [
            "services"
          ],
          "summary": "Retrieve specified service instance information on an instance",
          "description": "Retrieve the detailed information of a specified service deployed in a specified vCenter Server instance.",
          "operationId": "controllers.public.v1.proxy.get_vcenter_service",
          "parameters": [
            {
              "$ref": "#/components/parameters/authorization"
            },
            {
              "$ref": "#/components/parameters/instance_id"
            },
            {
              "$ref": "#/components/parameters/service_instance_id"
            },
            {
              "$ref": "#/components/parameters/transaction_id"
            }
          ],
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request (Use quotation marks for URL with parameters)",
                  "example": [
                    {
                      "type": "code",
                      "lang": "curl",
                      "source": [
                        "curl -X GET \\\n  'https://api.vmware-solutions.cloud.ibm.com/v1/vcenters/<instance_id>/service_instances/<service_instance_id>' \\\n  -H 'authorization: Bearer <IAM_token>' \\\n  -H 'Content-Type:application/json'"
                      ]
                    }
                  ]
                }
              ]
            }
          },
          "responses": {
            "200": {
              "description": "Success.",
              "headers": {
                "x-global-transaction-id": {
                  "description": "Global transaction ID for request correlation.",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/service_instance"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/401"
            },
            "403": {
              "$ref": "#/components/responses/403"
            },
            "404": {
              "$ref": "#/components/responses/404"
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        },
        "delete": {
          "tags": [
            "services"
          ],
          "summary": "Delete specified service instance on an instance",
          "description": "Deletes the specified service instance installed on the vCenter Server instance by the instance ID of the service.",
          "operationId": "controllers.v1.service_controller.remove_service_applied_to_vm_insts",
          "parameters": [
            {
              "$ref": "#/components/parameters/authorization"
            },
            {
              "$ref": "#/components/parameters/instance_id"
            },
            {
              "$ref": "#/components/parameters/service_instance_id"
            },
            {
              "$ref": "#/components/parameters/transaction_id"
            }
          ],
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "lang": "curl",
                      "source": [
                        "curl -X DELETE \\\n  'https://api.vmware-solutions.cloud.ibm.com/v1/vcenters/<instance_id>/service_instances/<service_instance_id>' \\\n  -H 'authorization: Bearer <IAM_token>' \\\n  -H 'Content-Type:application/json'"
                      ]
                    }
                  ]
                }
              ]
            }
          },
          "responses": {
            "202": {
              "description": "Delete of service instance initiated successfully",
              "headers": {
                "x-global-transaction-id": {
                  "description": "Global transaction ID for request correlation.",
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/401"
            },
            "403": {
              "$ref": "#/components/responses/403"
            },
            "404": {
              "$ref": "#/components/responses/404"
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        }
      },
      "/v1/service_instances/{service_instance_id}/service_variables": {
        "patch": {
          "tags": [
            "services"
          ],
          "summary": "Update or delete variables of service instance",
          "description": "Add, modify, or delete the variables of a service instance.",
          "operationId": "controllers.public.v1.proxy.mutate_service_variables",
          "parameters": [
            {
              "$ref": "#/components/parameters/authorization"
            },
            {
              "$ref": "#/components/parameters/service_instance_id"
            },
            {
              "$ref": "#/components/parameters/transaction_id"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "x-body-name": "service_variable_patch_data",
                  "type": "object",
                  "required": [
                    "action",
                    "variables"
                  ],
                  "properties": {
                    "action": {
                      "description": "The action to be performed against the specified variables of a service instance. The only supported values are 'update' and 'delete'.",
                      "type": "string",
                      "enum": [
                        "update",
                        "delete"
                      ]
                    },
                    "variables": {
                      "description": "The list of variables requested to be updated or deleted for a service instance.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the variable to be updated or deleted."
                          },
                          "item_ids": {
                            "type": "array",
                            "description": "The sub-item IDs in the list or dictionary keys that need to be deleted.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "value": {
                            "description": "The new values specified for the variables. The new values are in free-form JSON format, and they are used only when the performed action is 'update'."
                          }
                        },
                        "additionalProperties": false
                      }
                    }
                  }
                }
              }
            },
            "description": "The list of variables to be updated or deleted for a service instance.",
            "required": true
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request for variable update",
                  "example": [
                    {
                      "type": "code",
                      "lang": "curl",
                      "source": [
                        "curl -X PATCH \\\n  'https://api.vmware-solutions.cloud.ibm.com/v1/service_instances/<service_instance_id>/service_variables' \\\n  -H 'authorization: Bearer <IAM_token>' \\\n  -H 'Content-Type:application/json'\n  -d '{\n    \"action\": \"update\",\n    \"variables\": [\n      {\n        \"name\": \"<variable_name_1>\",\n        \"value\": \"<string_formatted_content_value>\"\n      },\n      {\n        \"name\": \"<variable_name_2>\",\n        \"value\": {\n          \"<sub_variable_name_1>\": \"<string_formatted_sub_variable_value>\",\n          \"<sub_variable_name_2>\": {\n            \"<nested_sub_variable_name_2_1>\": \"<string_formatted_sub_variable_value>\"\n          }\n        }\n      }\n    ]\n  }'"
                      ]
                    }
                  ]
                },
                {
                  "name": "Example request for variable deletion",
                  "example": [
                    {
                      "type": "code",
                      "lang": "curl",
                      "source": [
                        "curl -X PATCH \\\n  'https://api.vmware-solutions.cloud.ibm.com/v1/service_instances/<service_instance_id>/service_variables' \\\n  -H 'authorization: Bearer <IAM_token>' \\\n  -H 'Content-Type:application/json'\n  -d '{\n    \"action\": \"delete\",\n    \"variables\": [\n      {\n        \"name\": \"<variable_name_1>\"\n      },\n      {\n        \"name\": \"<variable_name_2>\",\n        \"item_ids\": [\n          \"<item_1_id>\",\n          \"<item_2_id>\"\n        ]\n      }\n    ]\n  }'"
                      ]
                    }
                  ]
                }
              ]
            }
          },
          "responses": {
            "202": {
              "description": "Success. The request for updating or deleting the specified service variables has been accepted.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "variables": {
                        "type": "array",
                        "description": "The name list of the variables that were updated or removed.",
                        "items": {
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of the variable that was updated or removed."
                            }
                          },
                          "additionalProperties": false
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/400"
            },
            "401": {
              "$ref": "#/components/responses/401"
            },
            "403": {
              "$ref": "#/components/responses/403"
            },
            "404": {
              "$ref": "#/components/responses/404"
            },
            "409": {
              "$ref": "#/components/responses/409"
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        }
      }
    },
    "components": {
      "parameters": {
        "transaction_id": {
          "in": "header",
          "name": "x-global-transaction-id",
          "description": "Global transaction ID for request correlation.",
          "required": false,
          "schema": {
            "type": "string"
          }
        },
        "authorization": {
          "in": "header",
          "name": "Authorization",
          "description": "Your IBM Cloud Identity and Access Management (IAM) token. To retrieve your IAM token, run `ibmcloud iam oauth-tokens`.",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        "verify_only": {
          "in": "query",
          "name": "verify_only",
          "description": "Whether to verify the order only instead of performing the order for real.",
          "required": false,
          "schema": {
            "type": "boolean",
            "default": false
          }
        },
        "check_price": {
          "in": "query",
          "name": "check_price",
          "description": "Whether to display the high-level price associated with the order.",
          "required": false,
          "schema": {
            "type": "boolean",
            "default": false
          }
        },
        "installed_only": {
          "in": "query",
          "name": "installed_only",
          "description": "If set to true, services with REMOVED state will be excluded. Otherwise, services with INSTALLED, INSTALLING, REMOVING, REMOVED, and FAILEDVALIDATION states will be returned.",
          "required": false,
          "schema": {
            "type": "boolean",
            "default": true
          }
        },
        "remote_cluster": {
          "in": "query",
          "name": "remote_cluster",
          "description": "Allow order at high latency data center or not",
          "required": false,
          "schema": {
            "type": "boolean",
            "default": false
          }
        },
        "instance_id": {
          "in": "path",
          "name": "instance_id",
          "description": "Instance ID.",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        "cluster_id": {
          "in": "path",
          "name": "cluster_id",
          "description": "Cluster ID.",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        "location": {
          "in": "query",
          "name": "location",
          "description": "Optional. The default value is all locations.",
          "required": false,
          "schema": {
            "type": "string"
          }
        },
        "vsphere_version": {
          "in": "query",
          "name": "vsphere_version",
          "description": "Optional. The default value is all supported vSphere versions.",
          "required": false,
          "schema": {
            "type": "string"
          }
        },
        "service_id": {
          "in": "path",
          "name": "service_id",
          "description": "Service catalog ID.",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        "service_instance_id": {
          "in": "path",
          "name": "service_instance_id",
          "description": "Service Instance ID.",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        "retrieve_only": {
          "in": "query",
          "name": "retrieve_only",
          "description": "Whether to only retrieve the IBM Cloud infrastructure API user information.",
          "required": false,
          "schema": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "responses": {
        "400": {
          "description": "Bad request. Check your request parameters.",
          "headers": {
            "x-global-transaction-id": {
              "description": "Global transaction ID for request correlation.",
              "schema": {
                "type": "string"
              }
            }
          },
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/error"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized. The IAM token is invalid or expired. To retrieve your IAM token, run `ibmcloud login` and then `ibmcloud iam oauth-tokens`.",
          "headers": {
            "x-global-transaction-id": {
              "description": "Global transaction ID for request correlation.",
              "schema": {
                "type": "string"
              }
            }
          },
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/error"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden. Access to the specified resource is not authorized. Check the IAM access policy for the `VMware Solutions` service.",
          "headers": {
            "x-global-transaction-id": {
              "description": "Global transaction ID for request correlation.",
              "schema": {
                "type": "string"
              }
            }
          },
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/error"
              }
            }
          }
        },
        "404": {
          "description": "Not found. The resource cannot be found.",
          "headers": {
            "x-global-transaction-id": {
              "description": "Global transaction ID for request correlation.",
              "schema": {
                "type": "string"
              }
            }
          },
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/error"
              }
            }
          }
        },
        "409": {
          "description": "Conflict. The request cannot be completed because of a conflict with the current state of the target resource.",
          "headers": {
            "x-global-transaction-id": {
              "description": "Global transaction ID for request correlation.",
              "schema": {
                "type": "string"
              }
            }
          },
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/error"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error. Your request cannot be processed. Please wait a few minutes and try again.",
          "headers": {
            "x-global-transaction-id": {
              "description": "Global transaction ID for request correlation.",
              "schema": {
                "type": "string"
              }
            }
          },
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/error"
              }
            }
          }
        }
      },
      "schemas": {
        "vcenter_order_data": {
          "type": "object",
          "required": [
            "name",
            "location",
            "root_domain",
            "hardware"
          ],
          "properties": {
            "name": {
              "type": "string",
              "description": "New VMware instance name that must be unique in your account.",
              "maxLength": 10,
              "example": "myvmware"
            },
            "location": {
              "type": "string",
              "description": "Data center location. To list available data center locations, use the `GET /v2/locations` API."
            },
            "root_domain": {
              "type": "string",
              "description": "Root domain of the VMware vSphere hosts.",
              "example": "mycompany.local"
            },
            "host_prefix": {
              "type": "string",
              "description": "Hostname prefix of the VMware vSphere hosts.",
              "default": "host",
              "example": "host"
            },
            "subdomain": {
              "type": "string",
              "description": "Subdomain of the VMware vSphere hosts.",
              "default": "same as `name`",
              "example": "myvmware"
            },
            "domain_type": {
              "type": "string",
              "description": "Domain type. \"primary\" is the only supported value currently.",
              "enum": [
                "primary"
              ],
              "default": "primary"
            },
            "dns_type": {
              "type": "string",
              "description": "Active Directory DNS type. Valid values are \"vsi\" or \"ha_vm\".",
              "enum": [
                "vsi",
                "ha_vm"
              ],
              "default": "vsi"
            },
            "vsphere_version": {
              "type": "string",
              "description": "vSphere version. To list supported vSphere versions, use the `GET /v2/vsphere_versions` API. Use \"latest\" to specify the latest supported vSphere version.",
              "default": "latest",
              "example": "latest"
            },
            "resource_group": {
              "type": "string",
              "description": "Resource group ID. To list resource groups, see the Resource Manager API for IBM Cloud. By default, the default resource group ID in the account is used.",
              "example": "abcdefgba12e4c0fb69c3b09d1f12345"
            },
            "hardware": {
              "$ref": "#/components/schemas/hardware"
            },
            "network": {
              "$ref": "#/components/schemas/network_config"
            },
            "shared_storages": {
              "type": "array",
              "description": "List of shared storage configurations.",
              "items": {
                "$ref": "#/components/schemas/shared_storage_config"
              }
            },
            "license_keys": {
              "type": "object",
              "description": "VMware license keys configuration.",
              "properties": {
                "vcenter": {
                  "$ref": "#/components/schemas/vcenter_license"
                },
                "nsx": {
                  "$ref": "#/components/schemas/nsx_license"
                },
                "vsphere": {
                  "$ref": "#/components/schemas/vsphere_license"
                },
                "vsan": {
                  "$ref": "#/components/schemas/vsan_license"
                }
              }
            },
            "default_cluster_name": {
              "type": "string",
              "description": "Name of the default cluster.",
              "maxLength": 30,
              "default": "cluster1",
              "example": "cluster1"
            },
            "hourly": {
              "type": "boolean",
              "description": "Whether hosts should be billed hourly or monthly (default). Currently for AT&T only",
              "default": false
            },
            "vcs_type": {
              "$ref": "#/components/schemas/vcs_type"
            },
            "networking": {
              "$ref": "#/components/schemas/def_existing_networking"
            },
            "services": {
              "type": "array",
              "description": "list of services to be added on bringup.",
              "items": {
                "$ref": "#/components/schemas/service_info"
              }
            }
          },
          "additionalProperties": false
        },
        "vcs_edge_order_data": {
          "type": "object",
          "required": [
            "name",
            "root_domain",
            "management",
            "edge",
            "license_keys"
          ],
          "properties": {
            "name": {
              "type": "string",
              "description": "New VMware instance name that must be unique in your account.",
              "maxLength": 10,
              "example": "myvmware"
            },
            "root_domain": {
              "type": "string",
              "description": "Root domain of the VMware vSphere hosts.",
              "example": "mycompany.local"
            },
            "host_prefix": {
              "type": "string",
              "description": "Hostname prefix of the VMware vSphere hosts.",
              "default": "host",
              "example": "host"
            },
            "subdomain": {
              "type": "string",
              "description": "Subdomain of the VMware vSphere hosts.",
              "default": "same as `name`",
              "example": "myvmware"
            },
            "domain_type": {
              "type": "string",
              "description": "Domain type. \"primary\" is the only supported value currently.",
              "enum": [
                "primary"
              ],
              "default": "primary"
            },
            "dns_type": {
              "type": "string",
              "description": "Active Directory DNS type. Valid values are \"vsi\" or \"ha_vm\".",
              "enum": [
                "vsi",
                "ha_vm"
              ],
              "default": "vsi"
            },
            "vsphere_version": {
              "type": "string",
              "description": "vSphere version. To list supported vSphere versions, use the `GET /v2/vsphere_versions` API. Use \"latest\" to specify the latest supported vSphere version.",
              "default": "latest",
              "example": "latest"
            },
            "management": {
              "$ref": "#/components/schemas/multi_cluster"
            },
            "edge": {
              "$ref": "#/components/schemas/edge_multi_cluster"
            },
            "license_keys": {
              "type": "object",
              "description": "VMware license keys configuration.",
              "properties": {
                "vcenter": {
                  "$ref": "#/components/schemas/vcenter_license"
                },
                "nsx": {
                  "$ref": "#/components/schemas/nsx_license"
                },
                "vsphere": {
                  "$ref": "#/components/schemas/vsphere_license"
                },
                "vsan": {
                  "$ref": "#/components/schemas/vsan_license"
                }
              }
            },
            "vcs_type": {
              "$ref": "#/components/schemas/vcs_type"
            },
            "services": {
              "type": "array",
              "description": "List of services to be added to the instance.",
              "items": {
                "$ref": "#/components/schemas/service_info"
              }
            }
          },
          "additionalProperties": false
        },
        "nsxt_order_data": {
          "type": "object",
          "required": [
            "name",
            "root_domain",
            "management",
            "workload",
            "license_keys"
          ],
          "properties": {
            "name": {
              "type": "string",
              "description": "New VMware instance name that must be unique in your account.",
              "maxLength": 10,
              "example": "myvmware"
            },
            "root_domain": {
              "type": "string",
              "description": "Root domain of the VMware vSphere hosts.",
              "example": "mycompany.local"
            },
            "host_prefix": {
              "type": "string",
              "description": "Hostname prefix of the VMware vSphere hosts.",
              "default": "host",
              "example": "host"
            },
            "subdomain": {
              "type": "string",
              "description": "Subdomain of the VMware vSphere hosts.",
              "default": "same as `name`",
              "example": "myvmware"
            },
            "domain_type": {
              "type": "string",
              "description": "Domain type. \"primary\" is the only supported value currently.",
              "enum": [
                "primary"
              ],
              "default": "primary"
            },
            "dns_type": {
              "type": "string",
              "description": "Active Directory DNS type. Valid values are \"vsi\" or \"ha_vm\".",
              "enum": [
                "vsi",
                "ha_vm"
              ],
              "default": "vsi"
            },
            "vsphere_version": {
              "type": "string",
              "description": "vSphere version. To list supported vSphere versions, use the `GET /v2/vsphere_versions` API. Use \"latest\" to specify the latest supported vSphere version.",
              "default": "latest",
              "example": "latest"
            },
            "management": {
              "$ref": "#/components/schemas/multi_cluster"
            },
            "workload": {
              "$ref": "#/components/schemas/multi_cluster"
            },
            "edge": {
              "$ref": "#/components/schemas/edge_multi_cluster"
            },
            "license_keys": {
              "type": "object",
              "description": "VMware license keys configuration.",
              "properties": {
                "vcenter": {
                  "$ref": "#/components/schemas/vcenter_license"
                },
                "nsx": {
                  "$ref": "#/components/schemas/nsx_license"
                },
                "vsphere": {
                  "$ref": "#/components/schemas/vsphere_license"
                },
                "vsan": {
                  "$ref": "#/components/schemas/vsan_license"
                }
              }
            },
            "vcs_type": {
              "$ref": "#/components/schemas/vcs_type"
            },
            "services": {
              "type": "array",
              "description": "List of services to be added to the instance.",
              "items": {
                "$ref": "#/components/schemas/service_info"
              }
            }
          },
          "additionalProperties": false
        },
        "mcv_order_data": {
          "type": "object",
          "required": [
            "name",
            "mzr_location",
            "root_domain",
            "management",
            "witness",
            "deploy_type"
          ],
          "properties": {
            "name": {
              "type": "string",
              "description": "New VMware instance name that must be unique in your account.",
              "maxLength": 10,
              "example": "myvmware"
            },
            "mzr_location": {
              "type": "string",
              "description": "MZR location. Choose one from ['Dallas', 'Washington', 'Sydney', 'Frankfurt', 'Tokyo', 'London']"
            },
            "root_domain": {
              "type": "string",
              "description": "Root domain of the VMware vSphere hosts.",
              "example": "mycompany.local"
            },
            "host_prefix": {
              "type": "string",
              "description": "Hostname prefix of the VMware vSphere hosts.",
              "default": "host",
              "example": "host"
            },
            "subdomain": {
              "type": "string",
              "description": "Subdomain of the VMware vSphere hosts.",
              "default": "same as `name`",
              "example": "myvmware"
            },
            "domain_type": {
              "type": "string",
              "description": "Domain type. \"primary\" is the only supported value currently.",
              "enum": [
                "primary"
              ],
              "default": "primary"
            },
            "dns_type": {
              "type": "string",
              "description": "Active Directory DNS type. Valid values are \"vsi\" or \"ha_vm\".",
              "enum": [
                "vsi",
                "ha_vm"
              ],
              "default": "vsi"
            },
            "vsphere_version": {
              "type": "string",
              "description": "vSphere version. To list supported vSphere versions, use the `GET /v2/vsphere_versions` API. Use \"latest\" to specify the latest supported vSphere version.",
              "default": "latest",
              "example": "latest"
            },
            "management": {
              "$ref": "#/components/schemas/mcv_mgmt"
            },
            "witness": {
              "$ref": "#/components/schemas/witness"
            },
            "workload": {
              "$ref": "#/components/schemas/mcv_cluster_order_data"
            },
            "edge": {
              "$ref": "#/components/schemas/edge_mcv_cluster"
            },
            "license_keys": {
              "type": "object",
              "description": "VMware license keys configuration.",
              "properties": {
                "vcenter": {
                  "$ref": "#/components/schemas/vcenter_license"
                },
                "nsx": {
                  "$ref": "#/components/schemas/nsx_license"
                },
                "vsphere": {
                  "$ref": "#/components/schemas/vsphere_license"
                },
                "vsan": {
                  "$ref": "#/components/schemas/vsan_license"
                }
              }
            },
            "deploy_type": {
              "$ref": "#/components/schemas/deploy_type"
            },
            "services": {
              "type": "array",
              "description": "List of services to be added to the instance.",
              "items": {
                "$ref": "#/components/schemas/service_info"
              }
            },
            "network": {
              "$ref": "#/components/schemas/network_config"
            }
          },
          "additionalProperties": false
        },
        "cluster_order_data": {
          "type": "object",
          "required": [
            "cluster_name",
            "location",
            "hardware"
          ],
          "properties": {
            "cluster_name": {
              "type": "string",
              "description": "New cluster name, which must be unique for the specified instance.",
              "maxLength": 30,
              "example": "mycluster"
            },
            "location": {
              "type": "string",
              "description": "Data center location. To list available data center locations, use the `GET /v2/locations` API."
            },
            "is_default_pod": {
              "type": "boolean",
              "description": "Whether the cluster should be placed into the default pod of the data center."
            },
            "hardware": {
              "$ref": "#/components/schemas/hardware"
            },
            "network": {
              "$ref": "#/components/schemas/network_config"
            },
            "shared_storages": {
              "type": "array",
              "description": "List of shared storage configurations.",
              "items": {
                "$ref": "#/components/schemas/shared_storage_config"
              }
            },
            "license_keys": {
              "type": "object",
              "description": "VMware license keys configuration.",
              "properties": {
                "vsphere": {
                  "$ref": "#/components/schemas/vsphere_license"
                },
                "vsan": {
                  "$ref": "#/components/schemas/vsan_license"
                }
              }
            },
            "hourly": {
              "type": "boolean",
              "description": "Whether hosts should be billed hourly or monthly (default)",
              "default": false
            },
            "host_prefix": {
              "type": "string",
              "description": "Hostname prefix of the VMware vSphere hosts.",
              "default": "host",
              "example": "host"
            },
            "networking": {
              "$ref": "#/components/schemas/def_existing_networking"
            }
          },
          "additionalProperties": false
        },
        "mcv_cluster_order_data": {
          "type": "object",
          "description": "Additional workload cluster configuration of the multizone VMware instance.",
          "required": [
            "cluster_name",
            "cluster_type",
            "datacenters",
            "hardware"
          ],
          "properties": {
            "cluster_name": {
              "type": "string",
              "description": "New cluster name that must be unique for the specified instance.",
              "maxLength": 30,
              "example": "mycluster"
            },
            "cluster_type": {
              "description": "Type of cluster to add = edge services or workload.",
              "type": "string"
            },
            "deploy_type": {
              "type": "string"
            },
            "hardware": {
              "$ref": "#/components/schemas/hardware"
            },
            "network": {
              "$ref": "#/components/schemas/network_config"
            },
            "license_keys": {
              "type": "object",
              "description": "VMware license keys configuration.",
              "properties": {
                "vsphere": {
                  "$ref": "#/components/schemas/vsphere_license"
                },
                "vsan": {
                  "$ref": "#/components/schemas/vsan_license"
                }
              }
            },
            "host_prefix": {
              "type": "string",
              "description": "Hostname prefix of the VMware vSphere hosts.",
              "default": "host",
              "example": "host"
            },
            "datacenters": {
              "type": "array",
              "description": "Array of IBM Cloud data centers to add the workload cluster.",
              "items": {
                "type": "string",
                "description": "Data center name abbreviation.",
                "example": "wdc07"
              },
              "minItems": 2,
              "maxItems": 2
            }
          },
          "additionalProperties": false
        },
        "def_existing_networking": {
          "type": "object",
          "description": "existing network selections",
          "properties": {
            "private_vlan": {
              "type": "object",
              "description": "Data for an existing private VLAN to use for vCenter",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "primary_subnet_id": {
                  "type": "integer"
                },
                "num": {
                  "type": "string"
                },
                "podname": {
                  "type": "string"
                },
                "primary_subnet": {
                  "type": "string"
                }
              }
            },
            "public_vlan": {
              "type": "object",
              "description": "Data for an existing public VLAN to use for vCenter",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "primary_subnet_id": {
                  "type": "integer"
                },
                "num": {
                  "type": "string"
                },
                "podname": {
                  "type": "string"
                },
                "primary_subnet": {
                  "type": "string"
                }
              }
            },
            "additional_private_vlan": {
              "type": "object",
              "description": "Data for an existing additional private VLAN to use for vCenter",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "num": {
                  "type": "string"
                },
                "podname": {
                  "type": "string"
                }
              }
            }
          }
        },
        "hosts_order_data": {
          "type": "object",
          "required": [
            "quantity"
          ],
          "properties": {
            "quantity": {
              "type": "integer",
              "description": "Number of new hosts to be added.",
              "example": 2
            },
            "template_id": {
              "type": "string",
              "description": "The template ID that maps to a preconfigured hardware specification to be ordered. To see supported templates, use the `GET /v2/templates` API. To customize your hardware configuration, use `customized_hardware`. This will be ignored if `customized_hardware` is also specified. If using hourly packages, this must be defined along with the hourly flag.",
              "example": "1186"
            },
            "maintenance_mode": {
              "type": "boolean",
              "description": "Whether to put the new hosts into maintenance mode after they are added.",
              "default": false
            },
            "hourly": {
              "type": "boolean",
              "description": "Whether hosts should be billed hourly or monthly (default)",
              "default": false
            },
            "vsphere_version": {
              "type": "string",
              "description": "The vSphere version for the host OS",
              "example": "6.7u2"
            },
            "customized_hardware": {
              "$ref": "#/components/schemas/customized_hardware"
            },
            "networking": {
              "$ref": "#/components/schemas/def_existing_networking"
            }
          },
          "additionalProperties": false
        },
        "multi_cluster": {
          "type": "object",
          "description": "Customized hardware configuration to be ordered.",
          "required": [
            "cluster_name",
            "customized_hardware",
            "location",
            "quantity"
          ],
          "properties": {
            "cluster_name": {
              "type": "string",
              "description": "New cluster name that must be unique for the specified instance.",
              "maxLength": 30,
              "example": "mycluster"
            },
            "quantity": {
              "type": "integer",
              "description": "Number of bare metal servers.",
              "example": 4
            },
            "template_id": {
              "type": "string",
              "description": "The template ID that maps to a preconfigured hardware specification to be ordered. To see supported templates, use the `GET /v2/templates` API.",
              "example": "1"
            },
            "customized_hardware": {
              "$ref": "#/components/schemas/customized_hardware"
            },
            "shared_storages": {
              "type": "array",
              "description": "List of shared storage configurations.",
              "items": {
                "$ref": "#/components/schemas/shared_storage_config"
              }
            },
            "location": {
              "type": "string",
              "description": "Data center location."
            },
            "networking": {
              "$ref": "#/components/schemas/def_existing_networking"
            },
            "is_default_pod": {
              "type": "boolean",
              "description": "Whether the default pod is used",
              "default": true
            },
            "license_keys": {
              "type": "object",
              "description": "VMware license keys for vSAN",
              "properties": {
                "vsan": {
                  "$ref": "#/components/schemas/vsan_license"
                }
              }
            },
            "network": {
              "$ref": "#/components/schemas/network_config"
            }
          },
          "additionalProperties": false
        },
        "edge_multi_cluster": {
          "type": "object",
          "description": "Edge cluster configuration.",
          "required": [
            "cluster_name",
            "customized_hardware",
            "location",
            "quantity"
          ],
          "properties": {
            "cluster_name": {
              "type": "string",
              "description": "New cluster name that must be unique for the specified instance.",
              "maxLength": 30,
              "example": "mycluster"
            },
            "quantity": {
              "type": "integer",
              "description": "Number of bare metal servers.",
              "example": 4
            },
            "template_id": {
              "type": "string",
              "description": "The template ID that maps to a preconfigured hardware specification to be ordered. To see supported templates, use the `GET /v2/templates` API.",
              "example": "1"
            },
            "customized_hardware": {
              "$ref": "#/components/schemas/edge_customized_hardware"
            },
            "location": {
              "type": "string",
              "description": "Data center location."
            },
            "network": {
              "$ref": "#/components/schemas/network_config"
            }
          },
          "additionalProperties": false
        },
        "edge_cluster_data": {
          "type": "object",
          "description": "Edge services cluster configuration for add cluster operation.",
          "required": [
            "cluster_name",
            "location",
            "cluster_type",
            "customized_hardware"
          ],
          "properties": {
            "cluster_name": {
              "type": "string",
              "description": "New cluster name that must be unique for the specified instance.",
              "maxLength": 30,
              "example": "mycluster"
            },
            "cluster_type": {
              "type": "string",
              "description": "Cluster type.  For edge services clusters, the required value is `edge`."
            },
            "quantity": {
              "type": "integer",
              "description": "Number of bare metal servers. For edge services clusters, the required value is `2`."
            },
            "customized_hardware": {
              "$ref": "#/components/schemas/edge_customized_hardware"
            },
            "location": {
              "type": "string",
              "description": "Data center location."
            },
            "network": {
              "$ref": "#/components/schemas/network_config"
            }
          },
          "additionalProperties": false
        },
        "edge_mcv_cluster": {
          "type": "object",
          "description": "Cluster configuration for each cluster in multi_clusters",
          "required": [
            "cluster_name",
            "customized_hardware",
            "datacenters",
            "quantity"
          ],
          "properties": {
            "cluster_name": {
              "type": "string",
              "description": "New cluster name that must be unique for the specified instance.",
              "maxLength": 30,
              "example": "mycluster"
            },
            "quantity": {
              "type": "integer",
              "description": "Number of bare metal servers.",
              "example": 4
            },
            "template_id": {
              "type": "string",
              "description": "The template ID that maps to a preconfigured hardware specification to be ordered. To see supported templates, use the `GET /v1/templates` API.",
              "example": "1"
            },
            "customized_hardware": {
              "$ref": "#/components/schemas/edge_customized_hardware"
            },
            "location": {
              "type": "string",
              "description": "Data center location."
            },
            "network": {
              "$ref": "#/components/schemas/network_config"
            },
            "datacenters": {
              "type": "array",
              "description": "Array of data centers to add the edge services cluster.",
              "items": {
                "type": "string",
                "description": "Data center name abbreviation.",
                "example": "WDC07"
              }
            }
          }
        },
        "mcv_mgmt": {
          "type": "object",
          "description": "Management cluster configuration of the multizone VMware instance.",
          "required": [
            "cluster_name",
            "quantity"
          ],
          "properties": {
            "cluster_name": {
              "type": "string",
              "description": "New cluster name that must be unique for the specified instance.",
              "maxLength": 30,
              "example": "mycluster"
            },
            "quantity": {
              "type": "integer",
              "description": "Number of bare metal servers.",
              "example": 3
            },
            "template_id": {
              "type": "string",
              "description": "The template ID that maps to a preconfigured hardware specification to be ordered. To see supported templates, use the `GET /v2/templates` API. To customize your hardware configuration, use `customized_hardware`. This will be ignored if `customized_hardware` is also specified.",
              "example": "1"
            },
            "customized_hardware": {
              "$ref": "#/components/schemas/customized_hardware"
            },
            "shared_storages": {
              "type": "array",
              "description": "List of shared storage configurations.",
              "items": {
                "$ref": "#/components/schemas/shared_storage_config"
              }
            }
          },
          "additionalProperties": false
        },
        "witness": {
          "type": "object",
          "description": "Witness cluster configuration of the multizone VMware instance.",
          "required": [
            "cluster_name",
            "quantity",
            "witness_location"
          ],
          "properties": {
            "cluster_name": {
              "type": "string",
              "description": "New cluster name that must be unique for the specified instance.",
              "maxLength": 30,
              "example": "mycluster"
            },
            "quantity": {
              "type": "integer",
              "description": "Number of bare metal servers.",
              "example": 2
            },
            "template_id": {
              "type": "string",
              "description": "The template ID that maps to a preconfigured hardware specification to be ordered. To see supported templates, use the `GET /v2/templates` API. To customize your hardware configuration, use `customized_hardware`. This will be ignored if `customized_hardware` is also specified.",
              "example": "1"
            },
            "customized_hardware": {
              "$ref": "#/components/schemas/customized_hardware"
            },
            "shared_storages": {
              "type": "array",
              "description": "List of shared storage configurations.",
              "items": {
                "$ref": "#/components/schemas/shared_storage_config"
              }
            },
            "witness_location": {
              "type": "string",
              "description": "Data center location. Pick one data center by using `GET /v2/mzr_locations` API.",
              "example": "Washington"
            }
          },
          "additionalProperties": false
        },
        "hardware": {
          "type": "object",
          "description": "Hardware configuration of the vSphere servers.",
          "required": [
            "quantity"
          ],
          "properties": {
            "quantity": {
              "type": "integer",
              "description": "Number of bare metal servers.",
              "example": 4
            },
            "template_id": {
              "type": "string",
              "description": "The template ID that maps to a preconfigured hardware specification to be ordered. To see supported templates, use the `GET /v2/templates` API. To customize your hardware configuration, use `customized_hardware`. This will be ignored if `customized_hardware` is also specified.",
              "example": "1"
            },
            "customized_hardware": {
              "$ref": "#/components/schemas/customized_hardware"
            }
          },
          "additionalProperties": false
        },
        "customized_hardware": {
          "type": "object",
          "description": "Customized hardware configuration to be ordered.",
          "required": [
            "server",
            "ram"
          ],
          "properties": {
            "server": {
              "type": "string",
              "description": "Server CPU type of the hardware. To see supported server types, use the `GET /v2/server_types` API.",
              "example": "INTEL_INTEL_XEON_4210_2_20"
            },
            "ram": {
              "type": "string",
              "description": "RAM type of the hardware. To see supported RAM types, use the `GET /v2/ram_types` API.",
              "example": "RAM_64_GB_DDR4_2133_ECC_NON_REG"
            },
            "disk_groups": {
              "type": "array",
              "description": "Array of disk groups. If you are not using vSAN, you must specify this setting.",
              "items": {
                "$ref": "#/components/schemas/disk_group"
              }
            },
            "disks": {
              "type": "array",
              "description": "Array of disk types for each of the local disks used by vSAN.",
              "items": {
                "type": "string",
                "description": "A disk type. To see supported disk types, use the `GET /v2/disk_types` API.",
                "example": "HARD_DRIVE_960GB_SSD_SED_5DWPD"
              }
            },
            "vsan_cache_disks": {
              "type": "array",
              "description": "Array of disk types for each of the local disks used by vSAN cache.",
              "items": {
                "type": "string",
                "description": "A disk type. To see supported disk types, use the `GET /v2/disk_types` API.",
                "example": "HARD_DRIVE_960GB_SSD_SED_5DWPD"
              }
            },
            "vsan_compression": {
              "type": "boolean",
              "description": "Whether or not to compress the vSAN disks. Applicable only when using vSAN. If true, the compression ratio on vSAN is set to 3.5.",
              "default": true
            }
          },
          "additionalProperties": false
        },
        "edge_customized_hardware": {
          "type": "object",
          "description": "Customized hardware configuration to be ordered.",
          "required": [
            "server",
            "ram"
          ],
          "properties": {
            "server": {
              "type": "string",
              "description": "Server CPU type of the hardware. Only one server type is supported for the edge cluster.",
              "example": "2U_VMW_BARE_METAL_GATEWAY_10_GBPS_4210"
            },
            "ram": {
              "type": "string",
              "description": "RAM type of the hardware. To see supported RAM types, use the `GET /v2/ram_types` API.",
              "example": "RAM_64_GB_DDR4_2133_ECC_NON_REG"
            }
          },
          "additionalProperties": false
        },
        "network_config": {
          "type": "object",
          "description": "Network configuration.",
          "properties": {
            "uplink_speed": {
              "type": "string",
              "description": "Network Uplink Speed. The default value is 10 GB. 25 GB is available only for certain server types and data centers.",
              "enum": [
                "10GB",
                "25GB"
              ],
              "default": "10GB"
            },
            "private_only": {
              "type": "boolean",
              "description": "Whether to attach to private network only or not.",
              "default": false
            }
          },
          "additionalProperties": false
        },
        "shared_storage_config": {
          "type": "object",
          "description": "A specified type of shared storage configuration.",
          "required": [
            "iops",
            "size",
            "volume",
            "quantity"
          ],
          "properties": {
            "iops": {
              "type": "string",
              "description": "IOPS tier. To see supported IOPS and size combinations, use the `GET /v2/shared_storage_tiers` API.",
              "example": "READHEAVY_TIER"
            },
            "size": {
              "type": "string",
              "description": "Size tier. To see supported IOPS and size combinations, use the `GET /v2/shared_storage_tiers` API.",
              "example": "STORAGE_SPACE_FOR_2_IOPS_PER_GB"
            },
            "volume": {
              "type": "integer",
              "description": "Volume size of each storage in GB. For 10 IOPS/GB tier, the volume size can be in the range 20 - 4000. For other tiers, the volume size can be in the range 20 - 24000.",
              "example": 2000
            },
            "quantity": {
              "type": "integer",
              "description": "Number of storages of this type.",
              "example": 1
            }
          },
          "additionalProperties": false
        },
        "vsphere_license": {
          "type": "object",
          "description": "vSphere license key configuration.",
          "properties": {
            "key": {
              "type": "string",
              "description": "Bring your own license key. If not provided or empty, license key is included in the order.",
              "default": ""
            }
          },
          "additionalProperties": false
        },
        "vcenter_license": {
          "type": "object",
          "description": "vCenter license key configuration.",
          "properties": {
            "key": {
              "type": "string",
              "description": "Bring your own license key. If not provided or empty, license key is included in the order.",
              "default": ""
            }
          },
          "additionalProperties": false
        },
        "nsx_license": {
          "type": "object",
          "description": "vCenter license key configuration.",
          "properties": {
            "key": {
              "type": "string",
              "description": "Bring your own license key. If not provided or empty, license key is included in the order.",
              "default": ""
            },
            "license_type": {
              "type": "string",
              "description": "For non-BYOL, specify which type of NSX license you want to order. Ignored when `key` is provided.",
              "enum": [
                "base",
                "advanced",
                "enterprise"
              ],
              "default": "base",
              "example": "base"
            }
          },
          "additionalProperties": false
        },
        "vsan_license": {
          "type": "object",
          "description": "vCenter license key configuration.",
          "properties": {
            "key": {
              "type": "string",
              "description": "Bring your own license key. If not provided or empty, license key is included in the order.",
              "default": ""
            },
            "license_type": {
              "type": "string",
              "description": "For non-BYOL, specify which type of VSAN license you want to order. Ignored when `key` is provided.",
              "enum": [
                "advanced",
                "enterprise"
              ],
              "default": "advanced",
              "example": "advanced"
            }
          },
          "additionalProperties": false
        },
        "def_vcenters": {
          "type": "object",
          "description": "The list of vCenters information in JSON format.",
          "required": [
            "vcenters"
          ],
          "properties": {
            "vcenters": {
              "type": "array",
              "description": "The detailed information of the vCenter Server instance.",
              "items": {
                "$ref": "#/components/schemas/vcenter"
              }
            }
          }
        },
        "vcenter": {
          "type": "object",
          "required": [
            "id",
            "name"
          ],
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique ID of the vCenter Server instance."
            },
            "name": {
              "type": "string",
              "description": "vCenter Server instance name."
            },
            "creator": {
              "type": "string",
              "description": "Creator of the instance."
            },
            "created_time": {
              "type": "integer",
              "description": "Creation timestamp in epoch.",
              "example": 1523282400
            },
            "status": {
              "type": "string",
              "description": "vCenter Server instance status.",
              "example": "ReadyToUse"
            },
            "location": {
              "type": "string",
              "description": "Primary data center location of the instance."
            },
            "initial_version": {
              "type": "string",
              "description": "Initial version of the instance."
            },
            "current_version": {
              "type": "string",
              "description": "Current version of the instance."
            },
            "domain_type": {
              "type": "string",
              "description": "Domain types.",
              "enum": [
                "primary",
                "secondary"
              ]
            },
            "crn": {
              "type": "string",
              "description": "Cloud resource name. The unique resource identifier in IBM Cloud.",
              "example": "crn:v1:bluemix:public:vmware-solutions:global:a/account-abc:resource-abc::"
            },
            "resource_group_id": {
              "type": "string",
              "description": "Resource group ID. To list resource groups, see the Resource Manager API for IBM Cloud. By default, the default resource group ID in the account is used.",
              "example": "abcdefgba12e4c0fb69c3b09d1f12345"
            }
          }
        },
        "vcenter_detail": {
          "type": "object",
          "required": [
            "id",
            "name"
          ],
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique ID of the vCenter Server instance."
            },
            "name": {
              "type": "string",
              "description": "vCenter Server instance name."
            },
            "creator": {
              "type": "string",
              "description": "Creator of the instance."
            },
            "created_time": {
              "type": "integer",
              "description": "Creation timestamp in epoch.",
              "example": 1523282400
            },
            "status": {
              "type": "string",
              "description": "vCenter Server instance status."
            },
            "location": {
              "type": "string",
              "description": "Primary data center location of the instance."
            },
            "initial_version": {
              "type": "string",
              "description": "Initial version of the instance."
            },
            "current_version": {
              "type": "string",
              "description": "Current version of the instance."
            },
            "domain_type": {
              "type": "string",
              "description": "Domain types.",
              "enum": [
                "primary",
                "secondary"
              ]
            },
            "root_domain": {
              "type": "string",
              "description": "Root domain of the VMware vSphere hosts."
            },
            "host_prefix": {
              "type": "string",
              "description": "Hostname prefix of the VMware vSphere hosts."
            },
            "subdomain": {
              "type": "string",
              "description": "Subdomain of the VMware vSphere hosts."
            },
            "crn": {
              "type": "string",
              "description": "Cloud resource name. The unique resource identifier in IBM Cloud.",
              "example": "crn:v1:bluemix:public:vmware-solutions:global:a/account-abc:resource-abc::"
            },
            "resource_group_id": {
              "type": "string",
              "description": "Resource group ID. To list resource groups, see the Resource Manager API for IBM Cloud. By default, the default resource group ID in the account is used.",
              "example": "abcdefgba12e4c0fb69c3b09d1f12345"
            },
            "endpoints": {
              "type": "array",
              "description": "List of endpoints that the instance exposes.",
              "items": {
                "$ref": "#/components/schemas/endpoint"
              }
            }
          }
        },
        "clusters": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/cluster"
          }
        },
        "cluster": {
          "type": "object",
          "required": [
            "id",
            "name"
          ],
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique ID of the cluster."
            },
            "name": {
              "type": "string",
              "description": "Cluster name."
            },
            "location": {
              "type": "string",
              "description": "Data center location of the cluster."
            },
            "is_default_pod": {
              "type": "boolean",
              "description": "Whether the cluster is in the default pod of the data center."
            },
            "status": {
              "type": "string",
              "description": "Cluster status."
            },
            "num_hosts": {
              "type": "integer",
              "description": "Number of hosts in the cluster.",
              "example": 2
            }
          }
        },
        "cluster_detail": {
          "type": "object",
          "required": [
            "id",
            "name"
          ],
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique ID of the cluster."
            },
            "name": {
              "type": "string",
              "description": "Cluster name."
            },
            "location": {
              "type": "string",
              "description": "Data center location of the cluster."
            },
            "is_default_pod": {
              "type": "boolean",
              "description": "Whether the cluster is in the default pod of the data center."
            },
            "sl_pod_name": {
              "type": "string",
              "description": "Name of the specific pod in the data center."
            },
            "status": {
              "type": "string",
              "description": "Cluster status."
            },
            "num_hosts": {
              "type": "integer",
              "description": "Number of hosts in the cluster.",
              "example": 2
            },
            "hosts": {
              "type": "array",
              "description": "List of hosts in the cluster.",
              "items": {
                "$ref": "#/components/schemas/host"
              }
            },
            "shared_storages": {
              "type": "array",
              "description": "List of shared storage datastores configurations.",
              "items": {
                "$ref": "#/components/schemas/shared_storage_datastore"
              }
            }
          }
        },
        "shared_storage_datastore": {
          "type": "object",
          "description": "A shared storage datastore configuration.",
          "required": [
            "datastore_name",
            "storage_id"
          ],
          "properties": {
            "datastore_name": {
              "type": "string",
              "description": "Datastore name."
            },
            "storage_id": {
              "type": "string",
              "description": "Storage resource unique ID from the infrastructure service."
            },
            "iops": {
              "type": "string",
              "description": "IOPS tier.",
              "example": "READHEAVY_TIER"
            },
            "size": {
              "type": "string",
              "description": "Size tier.",
              "example": "STORAGE_SPACE_FOR_2_IOPS_PER_GB"
            },
            "volume": {
              "type": "integer",
              "description": "Volume size of each storage.",
              "example": 2000
            }
          }
        },
        "host": {
          "type": "object",
          "required": [
            "id",
            "hostname",
            "domain",
            "state"
          ],
          "properties": {
            "id": {
              "type": "string",
              "description": "ID of the host."
            },
            "hostname": {
              "type": "string",
              "description": "Host name."
            },
            "domain": {
              "type": "string",
              "description": "Network domain."
            },
            "state": {
              "type": "string",
              "description": "State of the host."
            },
            "os": {
              "type": "string",
              "description": "OS type of the host, which is 'vsphere'.",
              "enum": [
                "vsphere"
              ]
            },
            "vsphere_version": {
              "type": "string",
              "description": "vSphere version."
            },
            "private_ip_address": {
              "type": "string",
              "description": "Private IP address of the host."
            },
            "public_ip_address": {
              "type": "string",
              "description": "Public IP address of the host."
            },
            "memory": {
              "type": "integer",
              "description": "Memory size of the host in GB.",
              "example": 64
            },
            "processor": {
              "type": "integer",
              "description": "Number of processors of the host.",
              "example": 16
            },
            "user": {
              "type": "string",
              "description": "User name of the host."
            },
            "password": {
              "type": "string",
              "description": "User password of the host."
            },
            "vsan_compression": {
              "type": "boolean",
              "description": "Whether or not the vSAN disks are compressed."
            }
          }
        },
        "endpoint": {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of the endpoint."
            },
            "credentials": {
              "type": "array",
              "description": "List of access credentials of the endpoint.",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "user",
                  "password"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Type of the credentials."
                  },
                  "user": {
                    "type": "string",
                    "description": "User name."
                  },
                  "password": {
                    "type": "string",
                    "description": "User password."
                  }
                }
              }
            },
            "ip_address": {
              "type": "string",
              "description": "IP address of the endpoint."
            },
            "fqdn": {
              "type": "string",
              "description": "Fully qualified DNS name of the endpoint."
            },
            "version": {
              "type": "string",
              "description": "Version of the endpoint, if applicable."
            }
          }
        },
        "vcenter_order_response": {
          "type": "object",
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique ID of the vCenter Server instance."
            }
          }
        },
        "cluster_order_response": {
          "type": "object",
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique ID of the cluster."
            }
          }
        },
        "error": {
          "type": "object",
          "required": [
            "errors"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "description": "List of errors.",
              "items": {
                "type": "object",
                "description": "Details about an error.",
                "required": [
                  "code",
                  "message"
                ],
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "Code of the error."
                  },
                  "message": {
                    "type": "string",
                    "description": "Detailed message of the error."
                  },
                  "reason": {
                    "type": "string",
                    "description": "Optional. A detailed description of the cause of the error."
                  }
                }
              }
            },
            "status_code": {
              "type": "integer",
              "description": "HTTP status code of the error response.",
              "example": 500
            }
          }
        },
        "history_message": {
          "description": "history messages",
          "type": "object",
          "required": [
            "history_id",
            "message",
            "timestamp"
          ],
          "properties": {
            "history_id": {
              "description": "Unique ID of the history record.",
              "type": "string"
            },
            "message": {
              "description": "History message.",
              "type": "string"
            },
            "timestamp": {
              "description": "Epoch timestamp of the history record.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "array_vlans": {
          "type": "array",
          "description": "List of VLANs that the instance exposes.",
          "items": {
            "$ref": "#/components/schemas/vlan"
          }
        },
        "vlan": {
          "type": "object",
          "required": [
            "location",
            "name",
            "number",
            "primary_router",
            "purpose",
            "link",
            "subnets"
          ],
          "properties": {
            "location": {
              "type": "string",
              "description": "Data Center location of the specified VLAN."
            },
            "name": {
              "type": "string",
              "description": "Internal ID of the VLAN."
            },
            "number": {
              "type": "integer",
              "description": "VLAN number."
            },
            "primary_router": {
              "type": "string",
              "description": "Primary router that the VLAN is associated with."
            },
            "purpose": {
              "type": "string",
              "description": "Purpose of the VLAN."
            },
            "link": {
              "type": "string",
              "description": "Link to the VLAN."
            },
            "subnets": {
              "type": "array",
              "description": "List of subnets in the specified VLAN.",
              "items": {
                "$ref": "#/components/schemas/subnet"
              }
            }
          }
        },
        "subnet": {
          "type": "object",
          "required": [
            "ips",
            "network_identifier",
            "subnet_type",
            "purpose",
            "link",
            "available_ip_address_count"
          ],
          "properties": {
            "ips": {
              "type": "array",
              "description": "List of IP addresses in the subnet.",
              "items": {
                "$ref": "#/components/schemas/network_ip"
              }
            },
            "network_identifier": {
              "type": "string",
              "description": "Network identifier of the subnet."
            },
            "subnet_type": {
              "type": "string",
              "description": "Type of the subnet."
            },
            "purpose": {
              "type": "string",
              "description": "Purpose of the subnet."
            },
            "link": {
              "type": "string",
              "description": "Link to the subnet."
            },
            "available_ip_address_count": {
              "type": "integer",
              "description": "Number of available slots in the subnet."
            }
          }
        },
        "network_ip": {
          "type": "object",
          "required": [
            "ip_address"
          ],
          "properties": {
            "ip_address": {
              "type": "string",
              "description": "IP address."
            },
            "status": {
              "type": "string",
              "description": "Status of the IP address."
            },
            "desc": {
              "type": "string",
              "description": "Description of the IP address."
            },
            "host": {
              "type": "string",
              "description": "Fully qualified domain name of the IP address."
            }
          }
        },
        "disk_group": {
          "type": "object",
          "required": [
            "disks"
          ],
          "properties": {
            "disks": {
              "type": "array",
              "description": "Array of disk types for each of the local disks used in disk groups.",
              "items": {
                "type": "string",
                "description": "Disk type. To see supported disk types, use the `GET /v2/disk_types` API.",
                "example": "HARD_DRIVE_960GB_SSD_SED_5DWPD"
              }
            },
            "raid_type": {
              "type": "string",
              "description": "RAID type for disk groups. Currently only RAID_10 is supported.",
              "enum": [
                "RAID_10"
              ],
              "default": "RAID_10",
              "example": "RAID_10"
            }
          },
          "additionalProperties": false
        },
        "vcs_type": {
          "type": "string",
          "description": "Networking solution type. Use `vcs_nsx_t` to deploy a vCenter Server with NSX-T instance.",
          "enum": [
            "vcs",
            "vcs_nsx_t",
            "vcs_edge",
            "vcs_nsx_t_trial"
          ],
          "default": "vcs"
        },
        "deploy_type": {
          "type": "string",
          "description": "Deployment type. Use `mcv` to deploy a multizone VMware instance. Workloads instance.",
          "enum": [
            "mcv",
            "vcs",
            "vss",
            "stub"
          ],
          "default": "vcs"
        },
        "tags": {
          "type": "object",
          "description": "Tags attached to an instance.",
          "properties": {
            "total_count": {
              "type": "integer",
              "description": "Total count of tags attached to an instance."
            },
            "offset": {
              "type": "integer",
              "description": "Offset value when query the tags."
            },
            "limit": {
              "type": "integer",
              "description": "Maximum length when returning the list of tags."
            },
            "items": {
              "type": "array",
              "description": "List of tags attached to an instance.",
              "items": {
                "type": "string",
                "description": "Tag which is attached to an instance."
              }
            }
          }
        },
        "service_catalog": {
          "type": "object",
          "properties": {
            "services_catalog": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/service_catalog_entry"
              }
            }
          },
          "additionalProperties": false
        },
        "service_catalog_entry": {
          "type": "object",
          "required": [
            "service_id",
            "description",
            "name",
            "service_version"
          ],
          "properties": {
            "service_id": {
              "type": "string",
              "description": "Service catalog ID."
            },
            "description": {
              "type": "string",
              "description": "Description of the service."
            },
            "name": {
              "type": "string",
              "description": "Full name of service."
            },
            "service_version": {
              "type": "string",
              "description": "Service version."
            }
          },
          "additionalProperties": false
        },
        "service_catalog_details": {
          "type": "object",
          "required": [
            "name",
            "service_id",
            "description",
            "service_version",
            "variables"
          ],
          "properties": {
            "name": {
              "type": "string",
              "description": "The full name of a specified service."
            },
            "service_id": {
              "type": "string",
              "description": "The catalog ID of a specified service."
            },
            "description": {
              "type": "string",
              "description": "The detailed description of a service purpose, as displayed on the UI."
            },
            "service_version": {
              "type": "string",
              "description": "Latest service version."
            },
            "variables": {
              "type": "object",
              "description": "Set of input variables and their available options for ordering a service."
            }
          },
          "additionalProperties": false
        },
        "service_instance": {
          "type": "object",
          "required": [
            "service_instance_id",
            "service_id"
          ],
          "properties": {
            "service_instance_id": {
              "type": "string",
              "description": "Unique ID of the service."
            },
            "service_id": {
              "type": "string",
              "description": "Service catalog ID."
            },
            "service_name": {
              "type": "string",
              "description": "Service full name."
            },
            "instance_name": {
              "type": "string",
              "description": "vCenter Server instance name."
            },
            "status": {
              "type": "string",
              "description": "Service status."
            },
            "creation_time": {
              "type": "string",
              "description": "Creation date and time."
            },
            "variables": {
              "type": "object",
              "description": "Public variables for a service installation."
            }
          },
          "additionalProperties": false
        },
        "service_order": {
          "type": "object",
          "required": [
            "service_id"
          ],
          "properties": {
            "service_id": {
              "type": "string",
              "description": "Service catalog ID."
            },
            "variables": {
              "type": "object",
              "description": "Input variables for a service installation (if required).",
              "example": "see 'Retrieve service information' response"
            }
          },
          "additionalProperties": false
        },
        "service_instances": {
          "type": "object",
          "properties": {
            "service_instances": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/service_instance"
              }
            }
          },
          "additionalProperties": false
        },
        "service_info": {
          "type": "object",
          "properties": {
            "service_info": {
              "$ref": "#/components/schemas/service_order"
            }
          },
          "additionalProperties": false
        },
        "service_order_data": {
          "type": "object",
          "description": "Input details to order a new service.",
          "required": [
            "services"
          ],
          "properties": {
            "services": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/service_info"
              }
            }
          },
          "additionalProperties": false
        },
        "service_order_response": {
          "type": "object",
          "required": [
            "service_instance_ids"
          ],
          "properties": {
            "service_instance_ids": {
              "type": "array",
              "description": "Unique ID of service or services.",
              "items": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false
        },
        "account_infra_credentials": {
          "type": "object",
          "required": [
            "account_name",
            "infra_credentials"
          ],
          "properties": {
            "account_name": {
              "type": "string",
              "description": "IBM Cloud account name"
            },
            "infra_credentials": {
              "$ref": "#/components/schemas/common_infra_credentials"
            }
          }
        },
        "infra_credentials": {
          "type": "object",
          "required": [
            "infra_credentials"
          ],
          "properties": {
            "infra_credentials": {
              "$ref": "#/components/schemas/common_infra_credentials"
            }
          }
        },
        "common_infra_credentials": {
          "type": "object",
          "description": "IBM Cloud infrastructure API credentials",
          "required": [
            "user_name"
          ],
          "properties": {
            "user_name": {
              "type": "string",
              "description": "IBM Cloud infrastructure API user name"
            },
            "api_key": {
              "type": "string",
              "description": "IBM Cloud infrastructure API key"
            },
            "account_id": {
              "type": "string",
              "description": "IBM Cloud infrastructure account ID"
            }
          },
          "additionalProperties": false
        },
        "def_locations": {
          "type": "object",
          "description": "Available data center locations in JSON format. The key name is \"locations\".",
          "required": [
            "locations"
          ],
          "properties": {
            "locations": {
              "type": "array",
              "description": "The list of available data center locations",
              "items": {
                "type": "object",
                "description": "A data center location.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The data center ID"
                  },
                  "geo": {
                    "type": "string",
                    "description": "The geography of the data center."
                  },
                  "region": {
                    "type": "string",
                    "description": "The region of the data center."
                  }
                }
              }
            }
          }
        },
        "def_mzr_locations": {
          "type": "object",
          "description": "The list of available Multi-Zone Region data center locations in JSON format. The key name is \"mzr_locations\".",
          "required": [
            "mzr_locations"
          ],
          "properties": {
            "mzr_locations": {
              "type": "array",
              "description": "The list of available Multi-Zone Region data center locations.",
              "items": {
                "type": "object",
                "description": "The Multi-Zone Region data center location.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The Multi-Zone Region data center ID."
                  },
                  "geo": {
                    "type": "string",
                    "description": "The geography of the Multi-Zone Region data center."
                  },
                  "region": {
                    "type": "string",
                    "description": "The region of the Multi-Zone Region data center."
                  },
                  "mzr": {
                    "type": "string",
                    "description": "The Multi-Zone Region location."
                  }
                }
              }
            }
          }
        },
        "def_templates": {
          "type": "object",
          "description": "The list of available hardware templates in JSON format.",
          "required": [
            "templates"
          ],
          "properties": {
            "templates": {
              "type": "array",
              "description": "The list of available hardware templates.",
              "items": {
                "type": "object",
                "description": "A hardware template.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The hardware template ID."
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the hardware template."
                  },
                  "supported_locations": {
                    "type": "string",
                    "description": "Supported data center locations for the template."
                  }
                }
              }
            }
          }
        },
        "def_server_types": {
          "type": "object",
          "description": "The list of supported server CPU types in JSON format.",
          "required": [
            "server_types"
          ],
          "properties": {
            "server_types": {
              "type": "array",
              "description": "The list of supported server CPU types.",
              "items": {
                "type": "object",
                "description": "A server CPU type.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The server CPU type ID."
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the server CPU type."
                  }
                }
              }
            }
          }
        },
        "def_ram_types": {
          "type": "object",
          "description": "The list of supported RAM types in JSON format.",
          "required": [
            "ram_types"
          ],
          "properties": {
            "ram_types": {
              "type": "array",
              "description": "The list of supported RAM types.",
              "items": {
                "type": "object",
                "description": "A RAM type.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The RAM type ID."
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the RAM type."
                  },
                  "supported_server_types": {
                    "type": "array",
                    "description": "The list of server CPU types on which the specified RAM type is supported.",
                    "items": {
                      "type": "string",
                      "description": "The server CPU type ID."
                    }
                  }
                }
              }
            }
          }
        },
        "def_disk_types": {
          "type": "object",
          "description": "The list of supported disk types in JSON format.",
          "required": [
            "disk_types"
          ],
          "properties": {
            "disk_types": {
              "type": "array",
              "description": "The list of supported disk types.",
              "items": {
                "type": "object",
                "description": "A disk type.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The disk type ID."
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the disk type."
                  }
                }
              }
            }
          }
        },
        "def_shared_storage_tiers": {
          "type": "object",
          "description": "The list of supported shared storage tiers in JSON format.",
          "required": [
            "shared_storage_tiers"
          ],
          "properties": {
            "shared_storage_tiers": {
              "type": "array",
              "description": "The list of supported shared storage tiers.",
              "items": {
                "type": "object",
                "description": "A shared storage tier.",
                "properties": {
                  "iops": {
                    "type": "string",
                    "description": "The type of the shared storage tier."
                  },
                  "size": {
                    "type": "string",
                    "description": "The size of the shared storage tier."
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the shared storage tier."
                  }
                }
              }
            }
          }
        },
        "def_vsphere_versions": {
          "type": "object",
          "description": "The list of supported vSphere versions in JSON format.",
          "required": [
            "vsphere_versions"
          ],
          "properties": {
            "vsphere_versions": {
              "type": "array",
              "description": "The list of supported vSphere versions.",
              "items": {
                "type": "object",
                "description": "A specified vSphere version.",
                "properties": {
                  "version": {
                    "type": "string",
                    "description": "vSphere version."
                  }
                }
              }
            }
          }
        },
        "def_clusters": {
          "type": "object",
          "required": [
            "clusters"
          ],
          "properties": {
            "clusters": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/cluster"
              }
            }
          }
        },
        "def_history_messages": {
          "type": "object",
          "required": [
            "history_messages"
          ],
          "properties": {
            "history_messages": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/history_message"
              }
            }
          }
        },
        "def_array_vlans": {
          "type": "object",
          "description": "The list of VLANs that the instance exposes in JSON format.",
          "required": [
            "array_vlans"
          ],
          "properties": {
            "array_vlans": {
              "type": "array",
              "description": "The list of VLANs that the instance exposes.",
              "items": {
                "$ref": "#/components/schemas/vlan"
              }
            }
          }
        }
      }
    }
  }