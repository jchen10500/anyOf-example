{
    "openapi": "3.0.0",
    "info": {
      "description": "Schematics service is to provide the capability to manage resources of (cloud) provider infrastructure using file based configurations. With the Schematics service the customer is able to specify the required set of resources and their configuration in 'config files', and then pass these config files to the service to fulfill it by calling the necessary actions on the infrastructure. This principle is also known as Infrastructure as Code. For more information Please refer /docs/schematics?topic=schematics-getting-started",
      "title": "IBM Cloud Schematics API",
      "version": "1.0",
      "x-alternate-name": "schematics",
      "x-sdk-supported-languages": [
        "node",
        "python",
        "java",
        "go"
      ],
      "x-last-updated": "2020-04-14"
    },
    "paths": {
      "/v1/version": {
        "get": {
          "tags": [
            "util"
          ],
          "summary": "Get Schematics API information",
          "description": "Retrieve detailed information about the IBM Cloud Schematics API version and the version of the provider plug-ins that the API uses.\n\n <h3>Authorization</h3> \n\n Schematics support generic authorization such as service access or platform access to the workspace ID and the resource group. For more information, about Schematics access and permissions, see [Schematics service access roles and required permissions](/docs/schematics?topic=schematics-access#access-roles).",
          "operationId": "get_schematics_version",
          "responses": {
            "200": {
              "description": "Successfully returned version information.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/VersionResponse"
                  },
                  "examples": {
                    "response": {
                      "value": {
                        "commitsha": "f905818892a0fa73d6b74792cfeabd0b49aeb930",
                        "builddate": "2019-11-01T07:06:27Z",
                        "buildno": "3230",
                        "terraform_version": "v0.12.24",
                        "terraform_provider_version": "v0.18.0",
                        "helm_version": "v2.14.2",
                        "helm_provider_version": "v0.10.0"
                      }
                    }
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl -X GET https://schematics.cloud.ibm.com/v1/version"
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "schematicsVersion, detailedResponse, err := schematicsService.GetSchematicsVersion(&schematicsv1.GetSchematicsVersionOptions{})\n",
                        "if err != nil {\n",
                        "  panic(err)\n",
                        "}\n",
                        "\n",
                        "b, _ := json.MarshalIndent(schematicsVersion, \"\", \"  \")\n",
                        "fmt.Println(string(b))\n"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "schematicsService.getSchematicsVersion({})\n",
                        "  .then(res => {\n",
                        "    console.log(JSON.stringify(res.result, null, 2));\n",
                        "  })\n",
                        "  .catch(err => {\n",
                        "    console.warn(err)\n",
                        "  });"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "version_response = schematics_service.get_schematics_version().get_result()\n",
                        "\n",
                        "print(json.dumps(version_response, indent=2))"
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "GetSchematicsVersionOptions getSchematicsVersionOptions = new GetSchematicsVersionOptions();\n",
                        "\n",
                        "Response<VersionResponse> response = service.getSchematicsVersion(getSchematicsVersionOptions).execute();\n",
                        "VersionResponse versionResponse = response.getResult();\n",
                        "\n",
                        "System.out.println(versionResponse);"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "/v1/locations": {
        "get": {
          "tags": [
            "util"
          ],
          "summary": "List supported Schematics locations",
          "description": "Retrieve a list of IBM Cloud locations where you can create Schematics workspaces. ",
          "parameters": [
            {
              "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "operationId": "list_schematics_location",
          "responses": {
            "200": {
              "description": "Successfully returned location information.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "description": "A list of IBM Cloud locations where you can create Schematics workspaces. ",
                    "items": {
                      "$ref": "#/components/schemas/SchematicsLocations"
                    }
                  },
                  "examples": {
                    "response": {
                      "value": {
                        "ID": "us",
                        "Name": "us",
                        "Country": "",
                        "Geography": "na",
                        "Kind": "country",
                        "Metro": "",
                        "MultizoneMetro": ""
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl -X GET https://schematics.cloud.ibm.com/v1/locations -H \"Authorization: <iam_token>\""
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "getSchematicsLocationOptions := schematicsService.NewListSchematicsLocationOptions()\n",
                        "\n",
                        "locations, detailedResponse, err := schematicsService.ListSchematicsLocation(getSchematicsLocationOptions)\n",
                        "\n",
                        "if err != nil {\n",
                        "    panic(err)\n",
                        "}\n",
                        "\n",
                        "w, err := json.MarshalIndent(locations, \"\", \"  \")\n",
                        "fmt.Println(string(w))"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "schematicsService.listSchematicsLocation({})\n",
                        "  .then(res => {\n",
                        "    console.log(JSON.stringify(res.result, null, 2));\n",
                        "  })\n",
                        "  .catch(err => {\n",
                        "    console.warn(err)\n",
                        "  });"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "list_schematics_locations = schematics_service.list_schematics_location().get_result()\n",
                        "\n",
                        "print(json.dumps(list_schematics_locations, indent=2))"
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "ListSchematicsLocationOptions listSchematicsLocationOptions = new ListSchematicsLocationOptions();\n",
                        "\n",
                        "Response<List<SchematicsLocations>> response = service.listSchematicsLocation(listSchematicsLocationOptions).execute();\n",
                        "List<SchematicsLocations> listSchematicsLocations = response.getResult();\n",
                        "\n",
                        "System.out.println(listSchematicsLocations);"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "/v1/resource_groups": {
        "get": {
          "tags": [
            "util"
          ],
          "summary": "List resource groups",
          "description": "Retrieve a list of IBM Cloud resource groups that your account has access to. ",
          "parameters": [
            {
              "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "operationId": "list_resource_group",
          "responses": {
            "200": {
              "description": "Successfully returned resource group information.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "description": "A list of resource groups that your account has access to. ",
                    "items": {
                      "$ref": "#/components/schemas/ResourceGroupResponse"
                    }
                  },
                  "examples": {
                    "response": {
                      "value": {
                        "resource_group_id": "469557713b904c6485d59fe833cf0a68",
                        "crn": "crn:v1:bluemix:public:resource-controller::a/6ef045fd2b43266cfe8e6388dd2ec098::resource-group:469557713b904c6485d59fe833cf0a68",
                        "name": "rg2",
                        "state": "ACTIVE",
                        "default": false,
                        "account_id": "6ef045fd2b43266cfe8e6388dd2ec098"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl -X GET https://schematics.cloud.ibm.com/v1/resource_groups -H \"Authorization: <iam_token>\""
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "listResourceGroupOptions := schematicsService.NewListResourceGroupOptions()\n",
                        "\n",
                        "resourceGroups, detailedResponse, err := schematicsService.ListResourceGroup(listResourceGroupOptions)\n",
                        "\n",
                        "if err != nil {\n",
                        "    panic(err)\n",
                        "}\n",
                        "\n",
                        "w, err := json.MarshalIndent(resourceGroups, \"\", \"  \")\n",
                        "fmt.Println(string(w))"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "schematicsService.listResourceGroup({})\n",
                        "  .then(res => {\n",
                        "    console.log(JSON.stringify(res.result, null, 2));\n",
                        "  })\n",
                        "  .catch(err => {\n",
                        "    console.warn(err)\n",
                        "  });"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "list_resource_group_response = schematics_service.list_resource_group().get_result()\n",
                        "\n",
                        "print(json.dumps(list_resource_group_response, indent=2))"
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "ListResourceGroupOptions listResourceGroupOptions = new ListResourceGroupOptions();\n",
                        "\n",
                        "Response<List<ResourceGroupResponse>> response = service.listResourceGroup(listResourceGroupOptions).execute();\n",
                        "List<ResourceGroupResponse> listResourceGroupResponse = response.getResult();\n",
                        "\n",
                        "System.out.println(listResourceGroupResponse);"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "/v2/actions": {
        "parameters": [
          {
            "description": "The IAM access token for your IBM Cloud account. To retrieve\nthe token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "get": {
          "tags": [
            "actions"
          ],
          "summary": "List actions",
          "description": "Retrieve a list of all Schematics actions that depends on the API endpoint that you have access. For example, if you use an API endpoint for a geography, such as North America, only actions that are created in `us-south` or `us-east` are retrieved.\n\n For more information, about supported API endpoints, see\n[API endpoints](/apidocs/schematics#api-endpoints).\n\n <h3>Authorization</h3>\n\n\n Schematics support generic authorization such as service access or platform\naccess to the action ID and the resource group. For more information, about\nSchematics access and permissions, see [Schematics service access roles and\nrequired permissions](/docs/schematics?topic=schematics-access#access-roles).",
          "x-ibm-events": {
            "summary": "Auditing",
            "events": [
              {
                "name": "schematics.action.list"
              }
            ]
          },
          "operationId": "list_actions",
          "parameters": [
            {
              "description": "The position of the actions in the list of actions, from which\nyou want to start listing your actions. For example, if you have three actions\nin your account, the first action is assigned position number 0, the second\naction is assigned position number 1, and so forth. If you have 6 actions\nand you want to list the details for actions 2-6, enter 1. To limit the\nnumber of actions that is returned, use the `limit` option in addition to\nthe `offset` option. Negative numbers are not supported and are ignored.",
              "name": "offset",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "description": "The maximum number of actions that you want to list. The number\nmust be a positive integer between 1 and 50. If no value is provided, 100\nis used by default. ",
              "name": "limit",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "description": "Use the character to delineate sub-resources and sub-fields\nFor example, \"owner.last_name\"). Prefix the field with \"+\" or \"-\",\nindicating \"ascending\" or \"descending\" (default is ascending) Ignore\nunrecognized or unsupported sort field. ",
              "name": "sort",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The level of details returned by the get method.",
              "name": "profile",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "ids",
                  "summary"
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully lists the actions that you have access to",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request.",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ActionList"
                  },
                  "examples": {
                    "response": {
                      "value": {
                        "total_count": "xx total number of records",
                        "limit": "xx records returned",
                        "offset": "0 record skipped",
                        "actions": [
                          {
                            "name": "Your action name",
                            "description": "The description of the action",
                            "id": "Your action ID",
                            "location": "user location",
                            "resource_group": "user resource group",
                            "namespace": "target namespace name",
                            "tags": [
                              "string"
                            ],
                            "user_state": {
                              "state": "live",
                              "set_by": "user@in.ibm.com",
                              "set_at": "2021-03-03T13:11:14.553280062Z"
                            },
                            "state": {
                              "status_code": "normal",
                              "status_message": "Action is ready for execution."
                            },
                            "sys_lock": {
                              "sys_locked_at": "0001-01-01T00:00:00Z"
                            },
                            "created_at": "2021-03-03T13:11:14.558330723Z",
                            "created_by": "user@in.ibm.com",
                            "updated_at": "0001-01-01T00:00:00Z"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid,\nexpired, or has no account. Check that the token value is correct or generate\na new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Viewer`,\n`Writer`, or `Manager` service access role in IAM for IBM Cloud Schematics. ",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable.\nWait a few minutes, then try again. If the error persists, contact IBM\nCloud support.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request to fetch all the actions.",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl --location --request GET https://schematics.cloud.ibm.com/v2/actions/actions --header \"Authorization:  <access_token>\""
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request to list the actions.",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "listActionsOptions := schematicsService.NewListActionsOptions()\n",
                        "\n",
                        "actionList, response, err := schematicsService.ListActions(listActionsOptions)\n",
                        "if err != nil {\n",
                        "panic(err)\n",
                        "}\n",
                        "b, _ := json.MarshalIndent(actionList, \"\", \"  \")\n",
                        "fmt.Println(string(b))\n"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request to list the actions.",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "action_list = schematics_service.list_actions().get_result()\n",
                        "print (json.dumps(action_list, indent=2))"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request to list the actions.",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "schematicsService.listActions({})\n",
                        ".then(res => {\n",
                        "console.log(JSON.stringify(res.result, null, 2));\n",
                        "})\n",
                        ".catch(err => {\n",
                        "console.warn(err)\n",
                        "});"
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request to list the actions.",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "ListActionsOptions listActionsOptions = new ListActionsOptions.Builder()\n",
                        ".build();\n",
                        "Response<ActionList> response = service.listActions(listActionsOptions).execute();\n",
                        "ActionList actionList = response.getResult();\n",
                        "System.out.println(actionList);"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        "post": {
          "tags": [
            "actions"
          ],
          "summary": "Create an action",
          "description": "Create an IBM Cloud Schematics action to run on a single target or groups of target hosts, roles, policies, or steps to deploy your resources in the target hosts. You can run the IBM Cloud resources the order in which you want to execute them. **Note** If your Git repository already contains a host file. Schematics does not overwrite the host file already present in your Git repository. For sample templates, see IBM Cloud Automation [templates](https://github.com/Cloud-Schematics).  \n\n For more information, about the Schematics create action, see [ibmcloud schematics action create](/docs/schematics?topic=schematics-schematics-cli-reference#schematics-create-action). \n **Note** you cannot update the location and region once an action is created. Also, make sure your IP addresses are in the [allowlist](/docs/schematics?topic=schematics-allowed-ipaddresses). \n\n <h3>Authorization</h3>\n\n\n Schematics support generic authorization such as service access or platform\naccess to an action ID and the resource group. For more information, about\nSchematics access and permissions, see [Schematics service access roles and\nrequired permissions](/docs/schematics?topic=schematics-access#action-permissions.",
          "x-ibm-events": {
            "summary": "Auditing",
            "events": [
              {
                "name": "schematics.action.create"
              }
            ]
          },
          "operationId": "create_action",
          "parameters": [
            {
              "description": "The personal access token to authenticate with your private GitHub\nor GitLab repository and access your Terraform template.",
              "name": "X-Github-token",
              "in": "header",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Action"
                }
              }
            },
            "description": "Input parameter to create the IBM Cloud Schematics action.",
            "required": true
          },
          "x-codegen-request-body-name": "action",
          "responses": {
            "200": {
              "description": "Successfully listed the actions that you have access to.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request.",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ActionList"
                  },
                  "examples": {
                    "response": {
                      "value": {
                        "offset": 0,
                        "limit": 1,
                        "count": 6,
                        "actions": [
                          {
                            "name": "Users action name",
                            "description": "The description of the action",
                            "location": "Users location",
                            "resource_group": "Users resource group",
                            "tags": [
                              "string"
                            ],
                            "user_state": {
                              "state": "live",
                              "set_by": "user@.ibm.com",
                              "set_at": "021-03-12T09:45:44.568286818Z"
                            },
                            "source": {
                              "source_type": "git",
                              "git": {
                                "git_repo_url": "https://github.com/Cloud-Schematics/repo_name"
                              },
                              "catalog": {},
                              "external_scm": {},
                              "cos_bucket": {}
                            },
                            "source_type": "GitHub",
                            "command_parameter": "user playbook name with the extension",
                            "bastion": {
                              "name": "bastionhost",
                              "type": "string",
                              "description": "string",
                              "resource_query": "53.46.14.52",
                              "credential_ref": "ssh_key",
                              "created_at": "0001-01-01T00:00:00Z",
                              "updated_at": "0001-01-01T00:00:00Z",
                              "sys_lock": {
                                "sys_locked_at": "0001-01-01T00:00:00Z"
                              }
                            },
                            "targets_ini": "[webserverhost] \n 132.00.00.0",
                            "credentials": [
                              {
                                "name": "ssh_key",
                                "value": "*******",
                                "metadata": {
                                  "type": "string",
                                  "secure": true
                                }
                              }
                            ],
                            "inputs": [
                              {
                                "name": "upassword",
                                "value": "*******",
                                "metadata": {
                                  "type": "string",
                                  "default_value": "user@123abc",
                                  "secure": true
                                }
                              },
                              {
                                "name": "dbname",
                                "value": "dbfoo",
                                "metadata": {
                                  "type": "string",
                                  "default_value": "foodb"
                                }
                              },
                              {
                                "name": "dbuser",
                                "value": "xxx",
                                "metadata": {
                                  "type": "string",
                                  "default_value": "xxx"
                                }
                              },
                              {
                                "name": "mysql_port",
                                "value": "xxxx",
                                "metadata": {
                                  "type": "string",
                                  "default_value": "xxxx"
                                }
                              },
                              {
                                "name": "httpd_port",
                                "value": "xx",
                                "metadata": {
                                  "type": "string",
                                  "default_value": "xx"
                                }
                              }
                            ],
                            "id": "Users action ID",
                            "crn": "crn:v1::lalalalalallalallala::",
                            "account": "0dlalalalalla",
                            "source_created_at": "0001-01-01T00:00:00Z",
                            "source_updated_at": "0001-01-01T00:00:00Z",
                            "created_at": "2021-02-08T12:29:55.214763283Z",
                            "created_by": "user@.ibm.com",
                            "updated_at": "0001-01-01T00:00:00Z",
                            "namespace": "Default",
                            "state": {
                              "status_code": "pending",
                              "status_message": "Create Action is in queue, Please wait till action complete"
                            },
                            "sys_lock": {
                              "sys_locked_at": "0001-01-01T00:00:00Z"
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad request. Verify that the information in your request body\nis complete and correctly formatted in JSON.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid,\nexpired, or has no account. Check that the token value is correct or generate\na new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Writer`\nor `Manager` service access role in IAM for IBM Cloud Schematics.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "404": {
              "description": "The action already exists. To find a list of actions,\nuse the `GET /actions` API.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "409": {
              "description": "The action is frozen and disabled for create. Unfreeze the\naction first before you try to create the action. Or the Schematics create,\npatch, delete action has not completed. Wait until the create, update,\ndelete, plan, apply, destroy or refresh action completes before you try\nagain. ",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "429": {
              "description": "Too many requests have been made within a time window. \"IBM\nCloud Schematics supports 50 API requests per minute, per host, and per\ncustomer. The host can be `us-east`, `us-south`, `eu-gb`, or `eu-de` region\".\nWait before calling the API again.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "IBM Cloud Schematics could not process the request, due to\na temporary overloading or maintenance. Try to reduce your request rate,\nor retry after a few minutes. If the error persists, contact [IBM Cloud\nsupport](/docs/schematics?topic=schematics-schematics-help).",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request to create an action with a link to a GitHub repository",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl --location --request POST https://schematics.cloud.ibm.com/v2/actions --header \"Authorization: <access_token> \" --header \"Content-Type: application/json\" --data-raw \"{\"name\": \"Example-12ab2\",   \"description\": \"action_description\", \"location\": \"location string\", \"resource_group\": \"resource_group\", \"source\": {\"source_type\": \"git\", \"git\": {\"git_repo_url\": \"https://github.com/Cloud-Schematics/ansible-is-instance-actions\"}}}"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request to create an action with a link to a GitHub repository",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "action_list = schematics_service.create_action(\n",
                        "name=\"mskpythonsamples-templates\",\n",
                        "description=\"<short description>\",\n",
                        "location=\"<location>\",\n",
                        "resource_group=\"<resource_group>\",\n",
                        "tags=[\"User environment,mytest\"]\n",
                        "source={\n",
                        "‘git’:\n",
                        "{\n",
                        "‘git_repo_url’:“https://github.com/Cloud-Schematics/cli-demo”\n",
                        "}\n",
                        "}\n",
                        ").get_result()\n",
                        "print (json.dumps(action_list, indent=2))"
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request to create an action with a link to a GitHub repository",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "CreateActionOptions createActionOptions = new CreateActionOptions.Builder()\n",
                        ".name(\"msksampletest-checkCreate\")\n",
                        " .build();\n",
                        "\n",
                        "Response<Action> response = service.createAction(createActionOptions).execute();\n",
                        "Action actionList = response.getResult();\n",
                        "\n",
                        "System.out.println(actionList);"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request to create an action with a link to a GitHub repository",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "const params = {\n",
                        "name:\"Users action name\",\n",
                        "description:\"short description\",\n",
                        "location:\"us\",\n",
                        "resource_group:\"Users resource group\",\n",
                        "tags:[\"env:prod\", \"mytest\"],\n",
                        "source:{\n",
                        "\"git\":\n",
                        "{\n",
                        "'git_repo_url':\"https://github.com/Cloud-Schematics/repo_name\"\n",
                        "}\n",
                        "}\n",
                        "\n",
                        "};\n",
                        "\n",
                        "schematicsService.createAction(params)\n",
                        ".then(res => {\n",
                        "console.log(JSON.stringify(res.result, null, 2));\n",
                        "})\n",
                        ".catch(err => {\n",
                        "console.warn(err)\n",
                        "});"
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request to create an action with a link to a GitHub repository",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "createActionOptions := schematicsService.NewCreateActionOptions()\n",
                        "createActionOptions.SetName(\"set your name\")\n",
                        "createActionOptions.SetDescription(\"short description\")\n",
                        "tags := []string{\"env:prod\", \"mytest1\"}\n",
                        "createActionOptions.Tags = tags\n",
                        "createActionOptions.SetLocation(\"set your location\")\n",
                        "createActionOptions.SetResourceGroup(\"set the resource group\")\n",
                        "source := schematicsv1.ExternalSource{\n",
                        "SourceType: core.StringPtr(\"git\"),\n",
                        "Git: &schematicsv1.ExternalSourceGit{\n",
                        "GitRepoURL: core.StringPtr(\"set your Git repository URL\"),\n",
                        "},\n",
                        "}\n",
                        "createActionOptions.SetSource(&source)\n",
                        "actionList, response, err := schematicsService.CreateAction(createActionOptions)\n",
                        "if err != nil {\n",
                        "panic(err)\n",
                        "}"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "/v2/actions/{action_id}": {
        "parameters": [
          {
            "description": "Use GET method to fetch the action details by using the action IDs in your IBM\nCloud account. ",
            "name": "action_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The IAM access token for your IBM Cloud account. To retrieve\nthe token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "get": {
          "tags": [
            "actions"
          ],
          "summary": "Get action details",
          "description": "Retrieve the detailed information of an actions from your IBM Cloud account. This API returns a URL to the log file that you can retrieve by using the  `GET /v2/actions/{action_id}/logs` API. \n\n <h3>Authorization</h3> \n\n Schematics support generic authorization\nsuch as service access or platform access to the action ID and the resource\ngroup. For more information, about Schematics access and permissions, see\n[Schematics service access roles and required permissions](/docs/schematics?topic=schematics-access#access-roles). ",
          "x-ibm-events": {
            "summary": "Auditing",
            "events": [
              {
                "name": "schematics.action.read"
              }
            ]
          },
          "operationId": "get_action",
          "parameters": [
            {
              "description": "Level of details retrieved by the GET method. ",
              "name": "profile",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "summary",
                  "detailed"
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully retrieved details about your action.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Action"
                  },
                  "examples": {
                    "response": {
                      "value": {
                        "name": "Users action name",
                        "description": "The description of the action",
                        "id": "Users action ID",
                        "location": "Users location",
                        "tags": [
                          "environment details, for example env:test",
                          "mytest"
                        ],
                        "user_state": {
                          "state": "live",
                          "set_by": "user@in.ibm.com",
                          "set_at": "2021-03-12T09:45:44.568286818Z"
                        },
                        "state": {
                          "status_code": "normal",
                          "status_message": "Action is ready for execution."
                        },
                        "sys_lock": {
                          "sys_locked_at": "0001-01-01T00:00:00Z"
                        },
                        "created_at": "2021-03-12T09:45:44.571913075Z",
                        "created_by": "user@in.ibm.com",
                        "updated_at": "0001-01-01T00:00:00Z"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid,\nexpired, or has no account. Check that the token value is correct or generate\na new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Viewer`,\n`Writer`, or `Manager` service access role in IAM for IBM Cloud Schematics.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "404": {
              "description": "Not found. The specified action could not be found. Verify\nthat the action ID is correct. To list actions in your IBM Cloud account,\nuse the `GET /v2/actions` API.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable.\nWait a few minutes, then try again. If the error persists, contact IBM\nCloud support.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request to fetch the action details of the specific action ID",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl --location --request GET https://schematics.cloud.ibm.com/v2/actions/{action_id} --header \"Authorization:  <access_token> \""
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request to fetch the action details of the specific action ID",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "GetActionOptions getActionOptions = new GetActionOptions.Builder()\n",
                        ".actionId(\"set your action ID.\")\n",
                        ".build();\n",
                        "Response<Action> response = service.getAction(getActionOptions).execute();\n",
                        "Action action = response.getResult();\n",
                        "\n",
                        "System.out.println(action);"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request to fetch the action details of the specific action ID",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "action = schematics_service.get_action(action_id=\"Users action ID\").get_result()\n",
                        "print (json.dumps(action, indent=2))"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request to fetch the action details of the specific action ID",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "const params = {\n",
                        "actionId: \"Users action ID\",\n",
                        "};\n",
                        "\n",
                        "schematicsService.getAction(params)\n",
                        ".then(res => {\n",
                        "console.log(JSON.stringify(res.result, null, 2));\n",
                        "})\n",
                        ".catch(err => {\n",
                        "console.warn(err)\n",
                        "});"
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request to fetch the action details of the specific action ID",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "getActionOptions := schematicsService.NewGetActionOptions(\"testString\",)\n",
                        "getActionOptions.SetActionID(\"set your action ID\")\n",
                        "\n",
                        "action, response, err := schematicsService.GetAction(getActionOptions)\n",
                        "if err != nil {\n",
                        "panic(err)\n",
                        "}\n",
                        "b, _ := json.MarshalIndent(action, \"\", \"  \")\n",
                        "fmt.Println(string(b))"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        "patch": {
          "tags": [
            "actions"
          ],
          "summary": "Update an action",
          "description": "Update or replace an action to change the action state from the critical state to normal state, or pending state to the normal state for a successful execution. \nFor more information, about the Schematics action state, see [Schematics action state diagram](/docs/schematics?topic=schematics-action-setup#action-state-diagram). \n **Note** you cannot update the location and region once an action is created. Also, make sure your IP addresses are in the [allowlist](/docs/schematics?topic=schematics-allowed-ipaddresses]. \n\n <h3>Authorization</h3> \n\n Schematics support generic authorization\nsuch as service access or platform access to the action ID and the resource\ngroup. For more information, about Schematics access and permissions, see\n[Schematics service access roles and required permissions](/docs/schematics?topic=schematics-access#access-roles).",
          "x-ibm-events": {
            "summary": "Auditing",
            "events": [
              {
                "name": "schematics.action.update"
              }
            ]
          },
          "operationId": "update_action",
          "parameters": [
            {
              "description": "The github token associated with the Git repository. Required\nfor cloning the repositories. To find the ID, use the `GET /v2/actions`\nAPI.",
              "name": "X-Github-token",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Action"
                }
              }
            },
            "description": "Action",
            "required": true
          },
          "x-codegen-request-body-name": "actions",
          "responses": {
            "200": {
              "description": "Successfully updated an action.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Action"
                  },
                  "examples": {
                    "response": {
                      "value": {
                        "name": "Users action name",
                        "description": "Updated short description",
                        "location": "us",
                        "tags": [
                          "env:prod",
                          "mytest"
                        ],
                        "user_state": {
                          "state": "live",
                          "set_by": "user@in.ibm.com",
                          "set_at": "2021-03-12T09:45:44.568286818Z"
                        },
                        "source": {
                          "source_type": "",
                          "git": {
                            "git_repo_url": "https://github.com/Cloud-Schematics/repo_name"
                          },
                          "catalog": {},
                          "external_scm": {},
                          "cos_bucket": {}
                        },
                        "bastion": {
                          "created_at": "0001-01-01T00:00:00Z",
                          "updated_at": "0001-01-01T00:00:00Z",
                          "sys_lock": {
                            "sys_locked_at": "0001-01-01T00:00:00Z"
                          }
                        },
                        "id": "Users action ID",
                        "crn": "crn:v1:lalalal.ACTION.actionname.97888799a",
                        "account": "69999991919199191f",
                        "source_created_at": "0001-01-01T00:00:00Z",
                        "source_updated_at": "0001-01-01T00:00:00Z",
                        "created_at": "2021-03-12T09:45:44.571913075Z",
                        "created_by": "user@in.ibm.com",
                        "updated_at": "2021-03-12T09:52:48.649631464Z",
                        "state": {
                          "status_code": "pending",
                          "status_job_id": "Users job ID",
                          "status_message": "Action is in queue. Wait until the action completes update."
                        },
                        "playbook_names": [
                          "xx.yml",
                          "errxx.yml"
                        ],
                        "sys_lock": {
                          "sys_locked_at": "0001-01-01T00:00:00Z"
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid,\nexpired, or has no account. Check that the token value is correct or generate\na new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Writer`\nor `Manager` service access role in IAM for IBM Cloud Schematics.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "404": {
              "description": "The specified action could not be found. Verify that you\nentered the correct action ID. To find the ID of a action, use the\n`GET /v1/actions` API.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "409": {
              "description": "Could not update the action information. The action\nis frozen and disabled for updates. Unfreeze the action first, before\nyou try again. Or the Schematics create, update, delete action has not\ncompleted. Wait until the create, update, delete, plan, apply, destroy\nor refresh action completes before you try again.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "429": {
              "description": "Too many requests have been made within a time window. IBM\nCloud Schematics supports 50 API requests per minute, per host, and per\ncustomer. The host can be `us-east`, `us-south`, `eu-gb`, or `eu-de` region.\nWait before calling the API again.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable.\nWait a few minutes, then try again. If the error persists, contact [IBM\nCloud support](/docs/schematics?topic=schematics-schematics-help).",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "503": {
              "description": "IBM Cloud Schematics could not process the request, due to\na temporary overloading or maintenance. Try to reduce your request rate,\nor retry after a few minutes. If the error persists, contact [IBM Cloud\nsupport](/docs/schematics?topic=schematics-schematics-help).",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request to update an action",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl --location --request PATCH https://schematics.cloud.ibm.com/v2/actions/{action_id} --header \"Authorization: <access_token>\" --header \"Content-Type: application/json\" --data-raw \"{\"name\": \"<action_name>\", \"description\": \"<action_description>\", \"location\": \"<action_location>\", \"resource_group\": \"<resource_group>\", \"source\": {\"source_type\": \"git\", \"git\": {\"git_repo_url\": \"https://github.com/Cloud-Schematics/lamp-simple\"}}, \"command_parameter\": \"<YAML_or_YML file>\", \"tags\": [\"string\"], \"credentials\": [{ \"name\": \"ssh_key\", \"value\": \"<ssh_key>\" \n,\"metadata\": { \"string\"}}], \"bastion\": {\"name\": \"bastionhost\", \"type\": \"string\", \"description\": \"string\", \"resource_query\": \"<IP_address\", \"credential_ref\": \"ssh_key\" }, \"inputs\": [{ \"name\": \"string\", \"value\": \"string\", \"metadata\": {\"type\": \"string\", \"secure\": <true_or_false>, \"default_value\": \"string\" }}, {\"name\": \"string\", \"value\": \"string\", \"metadata\": { \"type\": \"string\", \"default_value\": \"string\" }}, { \"name\": \"dbuser\", \"value\": \"string\", \"metadata\": {  \"type\": \"string\", \"default_value\": \"string\" }}, { \"name\": \"mysql_port\", \"value\": \"string\", \"metadata\": { \"type\": \"string\", \"default_value\": \"string\" }}, { \"name\": \"httpd_port\", \"value\": \"string\", \"metadata\": { \"type\": \"string\", \"secure\": <false_or_true>, \"default_value\": \"string\" } }], \"source_type\": \"GitHub\",   \"targets_ini\": \"[hostgroupname] \n \"IP address\" \n host2 \n [hostgroupname] \n \"IP address\" \"}"
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request to update an action",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "updateActionOptions := schematicsService.NewUpdateActionOptions(\"teststring\",)\n",
                        "updateActionOptions.SetActionID(\"us.ACTION.sundeepKumar-patchpart.44875f1b\")\n",
                        "updateActionOptions.SetName(\"set your name\")\n",
                        "updateActionOptions.SetDescription(\"short description\")\n",
                        "tags := []string{\"env:prod\", \"mytest1\"}\n",
                        "updateActionOptions.Tags = tags\n",
                        "updateActionOptions.SetLocation(\"set your location\")\n",
                        "updateActionOptions.SetResourceGroup(\"set your resource group name\")\n",
                        "source := schematicsv1.ExternalSource{\n",
                        "SourceType: core.StringPtr(\"git\"),\n",
                        "Git: &schematicsv1.ExternalSourceGit{\n",
                        "GitRepoURL: core.StringPtr(\"set your Git repository URL\"),\n",
                        "},\n",
                        "}\n",
                        "updateActionOptions.SetSource(&source)\n",
                        "actionList, response, err := schematicsService.UpdateAction(updateActionOptions)\n",
                        "if err != nil {\n",
                        "panic(err)\n",
                        "}\n",
                        "b, _ := json.MarshalIndent(actionList, \"\", \"v2/actions\")\n",
                        "fmt.Println(string(b))"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request to update an action",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "action = schematics_service.update_action(\n",
                        "action_id=\"Users action ID\").get_result()\n",
                        "print (json.dumps(action, indent=2))"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request to update an action",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "const params = {\n",
                        "actionId: \"Users action ID\",\n",
                        "xGithubToken: \"Users Github token\",\n",
                        "description:\"Updated short description\"\n",
                        "};\n",
                        "\n",
                        "schematicsService.updateAction(params)\n",
                        ".then(res => {\n",
                        "console.log(JSON.stringify(res.result, null, 2));\n",
                        "})\n",
                        ".catch(err => {\n",
                        "console.warn(err)\n",
                        "});"
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request to update an action",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "UpdateActionOptions updateActionOptions = new UpdateActionOptions.Builder()\n",
                        ".actionId(\"action ID\")\n",
                        ".xGithubToken(\"testString\")\n",
                        ".build();\n",
                        "\n",
                        "Response<Action> response = service.updateAction(updateActionOptions).execute();\n",
                        "Action action = response.getResult();\n",
                        "\n",
                        "System.out.println(action);"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        "delete": {
          "tags": [
            "actions"
          ],
          "summary": "Delete an action",
          "description": "Delete a Schematics action and specify the Ansible playbook that you want to run against your IBM Cloud resources. **Note** you cannot delete or stop the job activity from an ongoing execution of an action defined in the playbook. You can repeat the execution of same job, whenever you patch the actions.\nFor more information, about the Schematics action state, see [Schematics action state diagram](/docs/schematics?topic=schematics-action-setup#action-state-diagram).\n\n <h3>Authorization</h3> \n\n Schematics\nsupport generic authorization such as service access or platform access to\nthe action ID and the resource group. For more information, about Schematics\naccess and permissions, see [Schematics service access roles and required\npermissions](/docs/schematics?topic=schematics-access#access-roles).",
          "x-ibm-events": {
            "summary": "Auditing",
            "events": [
              {
                "name": "schematics.action.delete"
              }
            ]
          },
          "operationId": "delete_action",
          "parameters": [
            {
              "description": "Equivalent to \"-force\" options in the CLI.",
              "name": "force",
              "in": "header",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "description": "Auto propagates the change or deletion to the dependent resources.",
              "name": "propagate",
              "in": "header",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Successfully initiated stopping of the job, and deleted the job record",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid,\nexpired, or has no account. Check that the token value is correct or generate\na new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Manager`\nservice access role  for IBM Cloud Schematics.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "409": {
              "description": "Could not delete an action template information. The action\nis frozen and disabled for updates. Unfreeze the action first, before\nyou try again. Or the Schematics create, patch, delete action has not\ncompleted. Wait until the create, update, delete, plan, apply, destroy\nor refresh action completes before you try again.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "429": {
              "description": "Too many requests have been made within a time window. IBM\nCloud Schematics supports 50 API requests per minute, per host, and per\ncustomer. The host can be `us-east`, `us-south`, `eu-gb`, or `eu-de` region.\nWait before calling the API again.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable.\nWait a few minutes, then try again. If the error persists, contact [IBM\nCloud support](/docs/schematics?topic=schematics-schematics-help).",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "503": {
              "description": "IBM Cloud Schematics could not process the request, due to\na temporary overloading or maintenance. Try to reduce your request rate,\nor retry after a few minutes. If the error persists, contact [IBM Cloud\nsupport](/docs/schematics?topic=schematics-schematics-help).",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request to delete an action",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl --location --request DELETE https://schematics.cloud.ibm.com/v2/actions/{action_id} --header \"Authorization:  <access_token> \""
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request to delete an action",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "deleteActionOptions := schematicsService.NewDeleteActionOptions(\"set your deletion action options\",)\n",
                        "deleteActionOptions.SetActionID(\"set your Action ID\")\n",
                        "\n",
                        "response, err := schematicsService.DeleteAction(deleteActionOptions)\n",
                        "if err != nil {\n",
                        "panic(err)\n",
                        "}"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request to delete an action.",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "response = schematics_service.delete_action(\n",
                        "action_id=\"Set your action ID\"\n",
                        ").get_result()\n",
                        "\n",
                        "print(json.dumps(response, indent=2))"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request to delete an action.",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "const params = {\n",
                        "actionId: \"Users action ID\",\n",
                        "};\n",
                        "\n",
                        "schematicsService.deleteAction(params)\n",
                        ".then(res => {\n",
                        "console.log(JSON.stringify(res.result, null, 2));\n",
                        "})\n",
                        ".catch(err => {\n",
                        "console.warn(err)\n",
                        "});"
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request to delete an action",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "DeleteActionOptions deleteActionOptions = new DeleteActionOptions.Builder()\n",
                        ".actionId(\"Users action ID\")\n",
                        ".build();\n",
                        "\n",
                        "service.deleteAction(deleteActionOptions).execute();"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "/v2/actions/{action_id}/template_repo_upload": {
        "parameters": [
          {
            "description": "Action ID.  Use GET /actions API to see the Action IDs in your IBM Cloud account. ",
            "name": "action_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The IAM access token for your IBM Cloud account. To retrieve\nthe token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "put": {
          "tags": [
            "actions"
          ],
          "summary": "Upload a TAR file to an action",
          "description": " Update your template by uploading tape archive file (.tar) file from your local machine. Before you use this API, you must create an action without a link to a GitHub or GitLab repository with the POST /v2/actions API. \n\n <h3>Authorization</h3>\n\n\n Schematics support generic authorization such as service access or platform\naccess to the action ID and the resource group. For more information, about\nSchematics access and permissions, see [Schematics service access roles and\nrequired permissions](/docs/schematics?topic=schematics-access#access-roles).",
          "x-ibm-events": {
            "summary": "Auditing",
            "events": [
              {
                "name": "schematics.action.update"
              }
            ]
          },
          "operationId": "upload_template_tar_action",
          "requestBody": {
            "description": "Upload template tar file",
            "required": true,
            "x-codegen-request-body-name": "actions",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateTarRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successfully received the Git repository as input TAR file for the template.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TemplateRepoTarUploadResponse"
                  }
                }
              },
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for the request",
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "The authorization token for the request is `missing`, `invalid`, or `expired`. Check that the token value is correct or generate and use a new token.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              },
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access.  Check that you have the correct access credentials and permissions.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              },
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "404": {
              "description": "The requested action cannot be located. Check that you have the correct action in your request.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              },
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. The Schematics service is currently unavailable. Please wait a few minutes and try again. If you still encounter this problem, contact IBM Cloud support.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              },
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/v2/inventories": {
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The IAM access token associated with the IBM Cloud account.  To generate the token, you can run `ic iam oauth-tokens` in  the IBM Cloud CLI."
          }
        ],
        "post": {
          "tags": [
            "inventories"
          ],
          "summary": "Create an inventory",
          "operationId": "create_inventory",
          "description": "Create an IBM Cloud Schematics inventory as a single IBM Cloud resource where you want to run Ansible playbook by using Schematics actions. For more information, about inventory host groups, refer to [creating static and dynamic inventory for Schematics actions](/docs/schematics?topic=schematics-inventories-setup).\n **Note** you cannot update the location and region, resource group once an action is created. Also, make sure your IP addresses are in the [allowlist](/docs/schematics?topic=schematics-allowed-ipaddresses). If your Git repository already contains a host file. Schematics does not overwrite the host file already present in your Git repository.\n\n <h3>Authorization</h3>\n\n\n Schematics support generic authorization such as service access or platform\naccess to an action ID and the resource group. For more information, about\nSchematics access and permissions, see [Schematics service access roles and\nrequired permissions](/docs/schematics?topic=schematics-access#action-permissions).",
          "requestBody": {
            "description": "Create a resource inventory definition",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryResourceDefinition"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successfully created resource inventory definition",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/InventoryResourceRecord"
                  },
                  "examples": {
                    "response": {
                      "value": {
                        "name": "dev-inventory538",
                        "id": "us-south.INVENTORY.dev-inventory538.1ba768aa",
                        "description": "My dev env inventory",
                        "location": "us-south",
                        "resource_group": "Default",
                        "created_at": "2021-03-26T07:08:00.264006656Z",
                        "created_by": "schematics@ibm.com",
                        "updated_at": "0001-01-01T00:00:00Z",
                        "resource_queries": [
                          "default.RESOURCEQUERY.string.df3d8a47"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad request. Verify that the information in your request body\nis complete and correctly formatted in JSON.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request.",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid,\nexpired, or has no account. Check that the token value is correct or generate\na new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Writer`\nor `Manager` service access role in IAM for IBM Cloud Schematics.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "409": {
              "description": "The action is frozen and disabled for create. Unfreeze the\naction first before you try to create the action. Or the Schematics create,\nupdate, delete action has not completed. Wait until the create, update,\ndelete, plan, apply, destroy or refresh action completes before you try\nagain. ",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable.\nWait a few minutes, then try again. If the error persists, contact [IBM\nCloud support](/docs/schematics?topic=schematics-schematics-help).",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request to create a resource inventory",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl --location --request POST https://schematics.cloud.ibm.com/v2/inventories --header \"Authorization: <access_token> \" --header \"Content-Type: application/json\" --data-raw \"{\"name\": \"dev-inventory538\",\"description\": \"My dev env inventory\",\"location\": \"us-east\",\"resource_group\": \"Default\",\"resource_queries\": [\"default.RESOURCEQUERY.string.df3d8a47\"]}"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request to create a resource inventory",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "inventory_resource_record = schematics_service.create_inventory(\n",
                        "name= \"dev-inventory542\",\n",
                        "description= \"My dev env inventory\",\n",
                        "location= \"us-east\",\n",
                        "resource_group= \"Default\",\n",
                        "resource_queries= [\"default.RESOURCEQUERY.string.df3d8a47\"]\n",
                        ").get_result()\n",
                        "print(json.dumps(inventory_resource_record, indent=2))\n"
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request to create a resource inventory",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "CreateInventoryOptions createInventoryOptions = new CreateInventoryOptions.Builder()\n",
                        ".name(\"dev-inventory506\")\n",
                        ".description(\"My dev env inventory\")\n",
                        ".location(\"us-east\")\n",
                        ".build();\n",
                        "Response<InventoryResourceRecord> response = service.createInventory(createInventoryOptions).execute();\n",
                        "InventoryResourceRecord inventoryResourceRecord = response.getResult();\n",
                        "System.out.println(inventoryResourceRecord);\n"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request to create a resource inventory",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "const params = {\n",
                        "name: \"dev-inventory506\",\n",
                        "description: \"My dev env inventory\",\n",
                        "location: \"us-east\",\n",
                        "resource_group: \"Default\",\n",
                        "resource_queries: [\"default.RESOURCEQUERY.string.df3d8a47\"]};\n",
                        "schematicsService.createInventory(params)\n",
                        ".then(res => {console.log(JSON.stringify(res.result, null, 2));})\n",
                        ".catch(err => {\n",
                        "console.warn(err)\n",
                        "});\n"
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request to create a resource inventory",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "createInventoryOptions := schematicsService.NewCreateInventoryOptions()\n",
                        "createInventoryOptions.SetName(\"dev-inventory542\")\n",
                        "createInventoryOptions.SetDescription(\"My dev env inventory\")\n",
                        "createInventoryOptions.SetLocation(\"us-east\")\n",
                        "inventoryResourceRecord, response, err := schematicsService.CreateInventory(createInventoryOptions)\n",
                        "if err != nil {\n",
                        "panic(err)\n",
                        "}\n",
                        "fmt.Println(response)\n",
                        "b, _ := json.MarshalIndent(inventoryResourceRecord, \"\", \"\")\n",
                        "fmt.Println(string(b))\n"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        "get": {
          "tags": [
            "inventories"
          ],
          "summary": "List inventories",
          "operationId": "list_inventories",
          "description": "Retrieve a list of all Schematics inventories that depends on the API endpoint that you have access. For example, if you use an API endpoint for a geography, such as North America, only inventories that are created in `us-south` or `us-east` are retrieved. For more information, about supported API endpoints, see [API endpoints](/apidocs/schematics#api-endpoints).\n\n <h3>Authorization</h3>\n\n\n Schematics support generic authorization such as service access or platform\naccess to an action ID and the resource group. For more information, about\nSchematics access and permissions, see [Schematics service access roles and\nrequired permissions](/docs/schematics?topic=schematics-access#action-permissions).",
          "parameters": [
            {
              "description": "The number of items to skip before starting to collect the result set",
              "name": "offset",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "minimum": 0
              }
            },
            {
              "description": "The numbers of items to return.",
              "name": "limit",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "minimum": 1,
                "maximum": 2000,
                "default": 100
              }
            },
            {
              "description": "Use the character to delineate sub-resources and sub-fields\nFor example, \"owner.last_name\"). Prefix the field with \"+\" or \"-\",\nindicating \"ascending\" or \"descending\" (default is ascending) Ignore\nunrecognized or unsupported sort field. ",
              "in": "query",
              "name": "sort",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Level of details returned by the get method",
              "in": "query",
              "name": "profile",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "ids",
                  "summary"
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful listed all resource inventory definitions",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/InventoryResourceRecordList"
                  },
                  "examples": {
                    "response": {
                      "value": {
                        "total_count": 24,
                        "limit": 100,
                        "offset": 0,
                        "inventories": [
                          {
                            "name": "resourcename",
                            "id": ".INVENTORY.resourcename.218b1903",
                            "created_at": "2021-03-13T16:34:34.709988453Z",
                            "created_by": "schematics@ibm.com",
                            "updated_at": "0001-01-01T00:00:00Z"
                          },
                          {
                            "name": "resourcename1",
                            "id": ".INVENTORY.resourcename.a5857cd4",
                            "created_at": "2021-03-15T10:17:35.244325142Z",
                            "created_by": "schematics@ibm.com",
                            "updated_at": "0001-01-01T00:00:00Z"
                          },
                          {
                            "name": "abcdinv11",
                            "id": "us-south.INVENTORY.abcdinv11.57fe6b53",
                            "description": "My description",
                            "location": "us-east",
                            "resource_group": "Default",
                            "created_at": "2021-03-26T04:13:55.591652477Z",
                            "created_by": "schematics@ibm.com",
                            "updated_at": "0001-01-01T00:00:00Z"
                          },
                          {
                            "name": "abcdinv13",
                            "id": "us-south.INVENTORY.abcdinv11.72794f6d",
                            "description": "My description",
                            "location": "us-east",
                            "resource_group": "Default",
                            "created_at": "2021-03-25T11:29:03.692369367Z",
                            "created_by": "schematics@ibm.com",
                            "updated_at": "2021-03-25T12:25:29.81518941Z",
                            "updated_by": "schematics@ibm.com"
                          },
                          {
                            "name": "abcdinv4",
                            "id": "us-south.INVENTORY.abcdinv4.d0b2201d",
                            "description": "My description",
                            "location": "us-south",
                            "resource_group": "Default",
                            "created_at": "2021-03-25T04:28:08.360433941Z",
                            "created_by": "schematics@ibm.com",
                            "updated_at": "0001-01-01T00:00:00Z"
                          },
                          {
                            "name": "abcdinv5",
                            "id": "us-east.INVENTORY.abcdinv5.ae1247ee",
                            "description": "My description",
                            "location": "us-south",
                            "resource_group": "Default",
                            "created_at": "2021-03-25T04:28:31.944210658Z",
                            "created_by": "schematics@ibm.com",
                            "updated_at": "0001-01-01T00:00:00Z"
                          },
                          {
                            "name": "abcdinv6",
                            "id": "us-east.INVENTORY.abcdinv6.b7646b3f",
                            "description": "My description",
                            "location": "us-east",
                            "resource_group": "Default",
                            "created_at": "2021-03-25T04:30:31.619446477Z",
                            "created_by": "schematics@ibm.com",
                            "updated_at": "0001-01-01T00:00:00Z"
                          },
                          {
                            "name": "abcdinv7",
                            "id": "us-east.INVENTORY.abcdinv7.588385ed",
                            "description": "My description",
                            "location": "us-east",
                            "resource_group": "Default",
                            "created_at": "2021-03-25T04:30:58.130718895Z",
                            "created_by": "schematics@ibm.com",
                            "updated_at": "0001-01-01T00:00:00Z"
                          },
                          {
                            "name": "abcdinv8",
                            "id": "us-east.INVENTORY.abcdinv8.3608dd80",
                            "description": "My description",
                            "location": "us-east",
                            "resource_group": "Default",
                            "created_at": "2021-03-25T04:32:25.431638004Z",
                            "created_by": "schematics@ibm.com",
                            "updated_at": "0001-01-01T00:00:00Z"
                          },
                          {
                            "name": "abcdinv9",
                            "id": "us-east.INVENTORY.abcdinv9.54ef1de5",
                            "description": "My description",
                            "location": "us-east",
                            "resource_group": "Default",
                            "created_at": "2021-03-25T04:33:09.77479562Z",
                            "created_by": "schematics@ibm.com",
                            "updated_at": "0001-01-01T00:00:00Z"
                          },
                          {
                            "name": "dev-inventory527",
                            "id": "us-east.INVENTORY.dev-inventory527.35cefc61",
                            "description": "My dev env inventory",
                            "location": "us-east",
                            "resource_group": "Default",
                            "created_at": "2021-03-22T09:28:09.172660128Z",
                            "created_by": "schematics@ibm.com",
                            "updated_at": "0001-01-01T00:00:00Z"
                          },
                          {
                            "name": "dev-inventory5279",
                            "id": "us-east.INVENTORY.dev-inventory5279.5024cb04",
                            "description": "My dev env inventory",
                            "location": "us-east",
                            "resource_group": "Default",
                            "created_at": "2021-03-24T10:06:54.248751996Z",
                            "created_by": "schematics@ibm.com",
                            "updated_at": "0001-01-01T00:00:00Z"
                          },
                          {
                            "name": "dev-inventory52d7",
                            "id": "us-east.INVENTORY.dev-inventory52d7.c401d447",
                            "description": "My dev env inventory",
                            "location": "us-east",
                            "resource_group": "Default",
                            "created_at": "2021-03-22T09:37:38.070873251Z",
                            "created_by": "schematics@ibm.com",
                            "updated_at": "0001-01-01T00:00:00Z"
                          },
                          {
                            "name": "dev-inventory52d7p",
                            "id": "us-east.INVENTORY.dev-inventory52d7p.972abfb3",
                            "description": "My dev env inventory",
                            "location": "us-east",
                            "resource_group": "Default",
                            "created_at": "2021-03-22T10:07:47.985128872Z",
                            "created_by": "schematics@ibm.com",
                            "updated_at": "0001-01-01T00:00:00Z"
                          },
                          {
                            "name": "dev-inventory531",
                            "id": "us-east.INVENTORY.dev-inventory531.1f67f6da",
                            "description": "My dev env inventory",
                            "location": "us-east",
                            "resource_group": "Default",
                            "created_at": "2021-03-25T04:21:09.116751032Z",
                            "created_by": "schematics@ibm.com",
                            "updated_at": "0001-01-01T00:00:00Z"
                          },
                          {
                            "name": "dev-inventory532",
                            "id": "us-east.INVENTORY.dev-inventory532.3625125f",
                            "description": "My dev env inventory",
                            "location": "us-east",
                            "resource_group": "Default",
                            "created_at": "2021-03-25T04:21:31.918450417Z",
                            "created_by": "schematics@ibm.com",
                            "updated_at": "0001-01-01T00:00:00Z"
                          },
                          {
                            "name": "dev-inventory538",
                            "id": "us-east.INVENTORY.dev-inventory538.1ba768aa",
                            "description": "My dev env inventory",
                            "location": "us-east",
                            "resource_group": "Default",
                            "created_at": "2021-03-26T07:08:00.264008441Z",
                            "created_by": "schematics@ibm.com",
                            "updated_at": "0001-01-01T00:00:00Z"
                          },
                          {
                            "name": "dev-inventory5d28d7p",
                            "id": "us-east.INVENTORY.dev-inventory5d28d7p.1e90678d",
                            "description": "My dev env inventory",
                            "location": "us-east",
                            "resource_group": "Default",
                            "created_at": "2021-03-22T11:10:12.608762853Z",
                            "created_by": "schematics@ibm.com",
                            "updated_at": "0001-01-01T00:00:00Z"
                          },
                          {
                            "name": "dev-inventory5d2d7p",
                            "id": "us-east.INVENTORY.dev-inventory5d2d7p.38815610",
                            "description": "My dev env inventory",
                            "location": "us-east",
                            "resource_group": "Default",
                            "created_at": "2021-03-22T10:15:46.185912518Z",
                            "created_by": "schematics@ibm.com",
                            "updated_at": "0001-01-01T00:00:00Z"
                          },
                          {
                            "name": "dev-inventory",
                            "id": "us-east.INVENTORY.dev-inventory.160c6d33",
                            "description": "My dev env inventory",
                            "location": "us-east",
                            "resource_group": "Default",
                            "created_at": "2021-03-11T10:49:31.707067866Z",
                            "created_by": "schematics@ibm.com",
                            "updated_at": "0001-01-01T00:00:00Z"
                          },
                          {
                            "name": "dev-inventory1",
                            "id": "us-east.INVENTORY.dev-inventory1.5e8f5354",
                            "description": "My dev env inventory",
                            "location": "us-east",
                            "resource_group": "Default",
                            "created_at": "2021-03-15T10:56:10.415818711Z",
                            "created_by": "schematics@ibm.com",
                            "updated_at": "0001-01-01T00:00:00Z"
                          },
                          {
                            "name": "string",
                            "id": "us-east.INVENTORY.string.9476a5b3",
                            "description": "string",
                            "location": "us-east",
                            "resource_group": "string",
                            "created_at": "2021-03-09T04:07:56.153474027Z",
                            "created_by": "schematics@ibm.com",
                            "updated_at": "0001-01-01T00:00:00Z"
                          },
                          {
                            "name": "string",
                            "id": "us-east.INVENTORY.string.de4b951c",
                            "description": "string",
                            "location": "us-east",
                            "resource_group": "string",
                            "created_at": "2021-03-10T17:29:24.274559186Z",
                            "created_by": "schematics@ibm.com",
                            "updated_at": "0001-01-01T00:00:00Z"
                          },
                          {
                            "name": "string",
                            "id": "us-east.INVENTORY.string.f1ef1a24",
                            "description": "string",
                            "location": "us-east",
                            "resource_group": "string",
                            "created_at": "2021-03-09T06:19:30.865119938Z",
                            "created_by": "schematics@ibm.com",
                            "updated_at": "0001-01-01T00:00:00Z"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad request. Verify that the information in your request body\nis complete and correctly formatted in JSON.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request.",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid,\nexpired, or has no account. Check that the token value is correct or generate\na new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Writer`\nor `Manager` service access role in IAM for IBM Cloud Schematics.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable.\nWait a few minutes, then try again. If the error persists, contact [IBM\nCloud support](/docs/schematics?topic=schematics-schematics-help).",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request to Get all resource inventory",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl --location --request GET https://schematics.cloud.ibm.com/v2/inventories --header \"Content-Type: application/json\" --header \"Authorization: <access_token> \" --data-raw \"{\"name\": \"dev-inventory538\",\"description\": \"My dev env inventory\",\"location\": \"us-east\",\"resource_group\": \"Default\",\"resource_queries\": [\"default.RESOURCEQUERY.string.df3d8a47\"]}"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request to Get all resource inventory",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "inventory_resource_record_list = schematics_service.list_inventories().get_result()\n",
                        "print(json.dumps(inventory_resource_record_list, indent=2))\n"
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request to Get all resource inventory",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "ListInventoriesOptions listInventoriesOptions = new ListInventoriesOptions.Builder()\n",
                        ".build();\n",
                        "Response<InventoryResourceRecordList> response = service.listInventories(listInventoriesOptions).execute();\n",
                        "InventoryResourceRecordList inventoryResourceRecordList = response.getResult();\n",
                        "System.out.println(inventoryResourceRecordList);\n"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request to Get all resource inventory",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "schematicsService.listInventories({})\n",
                        ".then(res => {\n",
                        "console.log(JSON.stringify(res.result, null, 2));\n",
                        "})\n",
                        ".catch(err => {\n",
                        "console.warn(err)\n",
                        "});\n"
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request to Get all resource inventory",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "listInventoriesOptions := schematicsService.NewListInventoriesOptions()\n",
                        "inventoryResourceRecordList, response, err := schematicsService.ListInventories(listInventoriesOptions)\n",
                        "if err != nil {\n",
                        "panic(err)\n",
                        "}\n",
                        "b, _ := json.MarshalIndent(inventoryResourceRecordList, \"\", \"  \")\n",
                        "fmt.Println(string(b))\n",
                        "fmt.Println(response)\n"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "/v2/inventories/{inventory_id}": {
        "parameters": [
          {
            "description": "The IAM access token associated with the IBM Cloud account. To generate the token, you can run ic iam oauth-tokens in the IBM Cloud CLI.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Resource Inventory ID. Use GET /inventories API to look up the Resource Inventory definition Ids in your IBM Cloud account.",
            "in": "path",
            "name": "inventory_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "put": {
          "tags": [
            "inventories"
          ],
          "summary": "Update an inventory",
          "operationId": "replace_inventory",
          "description": "Use this API to update the resource inventory definition used to target an action. For more information, about inventory update, refer to [ibmcloud schematics inventory update](/docs/schematics?topic=schematics-schematics-cli-reference#schematics-update-inv).\n **Note** you cannot update the location and region, resource group once an action is created. Also, make sure your IP addresses are in the [allowlist](/docs/schematics?topic=schematics-allowed-ipaddresses). \n\n <h3>Authorization</h3>\n\n\n Schematics support generic authorization such as service access or platform\naccess to an action ID and the resource group. For more information, about\nSchematics access and permissions, see [Schematics service access roles and\nrequired permissions](/docs/schematics?topic=schematics-access#action-permissions).",
          "requestBody": {
            "description": "Replace the resource inventory definition",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryResourceDefinition"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successfully updated the resource inventory definition",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/InventoryResourceRecord"
                  },
                  "examples": {
                    "response": {
                      "value": {
                        "name": "MainFrame-dev-inve",
                        "id": "us-east.INVENTORY.dev-inventory538.1ba768aa",
                        "description": "My dev env inventory",
                        "location": "us-east",
                        "resource_group": "Default",
                        "created_at": "2021-03-26T07:08:00.264006656Z",
                        "created_by": "schematics@ibm.com",
                        "updated_at": "2021-03-26T07:56:34.475981416Z",
                        "updated_by": "schematics@ibm.com",
                        "resource_queries": [
                          "default.RESOURCEQUERY.string.df3d8a47"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad request. Verify that the information in your request body\nis complete and correctly formatted in JSON.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid,\nexpired, or has no account. Check that the token value is correct or generate\na new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Writer`\nor `Manager` service access role in IAM for IBM Cloud Schematics.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "404": {
              "description": "The inventory already exists. To find a list of inventory,\nuse the `GET /inventory` API.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "409": {
              "description": "The inventory is frozen or disabled to create. Unfreeze the\ninventory first before you try to create the action. Or the Schematics create,\npatch, delete action has not completed. Wait until the create, update,\ndelete, plan, apply, destroy or refresh action completes before you try\nagain. ",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable.\nWait a few minutes, then try again. If the error persists, contact [IBM\nCloud support](/docs/schematics?topic=schematics-schematics-help).",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request to Replace the resource inventory",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl --location --request PUT https://schematics.cloud.ibm.com/v2/inventories/us-east.INVENTORY.dev-inventory538.1ba768aa/ --header \"Content-Type: application/json\" --header \"Authorization: <access_token> \" --data-raw \"{\"name\": \"MainFrame-dev-inve\",\"description\": \"My dev env inventory\",\"location\": \"us-east\",\"resource_group\": \"Default\",\"resource_queries\": [\"default.RESOURCEQUERY.string.df3d8a47\"]}"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request to Replace the resource inventory",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "inventory_resource_record = schematics_service.replace_inventory(\n",
                        "inventory_id='us-east.INVENTORY.dev-inventory542.475e3f27',\n",
                        "name=\"dev-inventory542\",\n",
                        "description=\"My dev env inventory text is replaced\",\n",
                        "location=\"us-east\",\n",
                        "resource_group= \"Default\",\n",
                        "resource_queries= [\"default.RESOURCEQUERY.string.df3d8a47\"]\n",
                        ").get_result()\n",
                        "print(json.dumps(inventory_resource_record, indent=2))\n"
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request to Replace the resource inventory",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "ReplaceInventoryOptions replaceInventoryOptions = new ReplaceInventoryOptions.Builder()\n",
                        ".inventoryId(\"set an inventory Id\")\n",
                        ".name(\"dev-inventory516\")\n",
                        ".description(\"My dev env inventory is Java updated\")\n",
                        ".location(\"us-east\")\n",
                        ".build();\n",
                        "Response<InventoryResourceRecord> response = service.replaceInventory(replaceInventoryOptions).execute();\n",
                        "InventoryResourceRecord inventoryResourceRecord = response.getResult();\n",
                        "System.out.println(inventoryResourceRecord);\n"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request to Replace the resource inventory",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "const params = {\n",
                        "inventoryId: 'set an inventory ID',\n",
                        "name:\"dev-inventory\",\n",
                        "description: \"My dev env inventory New Example\",\n",
                        "location: \"us-east\",\n",
                        "resource_group: \"Default\",\n",
                        "resource_queries: [\"default.RESOURCEQUERY.string.df3d8a47\"]\n",
                        "};\n",
                        "schematicsService.replaceInventory(params)\n",
                        ".then(res => {\n",
                        "console.log(JSON.stringify(res.result, null, 2));\n",
                        "})\n",
                        ".catch(err => {\n",
                        "console.warn(err)\n",
                        "});\n"
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request to Replace the resource inventory",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "replaceInventoryOptions := schematicsService.NewReplaceInventoryOptions(\n",
                        "testString",
                        ")\n",
                        "replaceInventoryOptions.SetInventoryID(\"set your inventory ID\")\n",
                        "replaceInventoryOptions.SetName(\"dev-inventory548\")\n",
                        "replaceInventoryOptions.SetDescription(\"My dev env inventory is correct\")\n",
                        "replaceInventoryOptions.SetLocation(\"us-east\")\n",
                        "inventoryResourceRecord, response, err := schematicsService.ReplaceInventory(replaceInventoryOptions)\n",
                        "if err != nil {\n",
                        "panic(err)\n",
                        "}\n",
                        "b, _ := json.MarshalIndent(inventoryResourceRecord, \"\", \"  \")\n",
                        "fmt.Println(string(b))\n",
                        "fmt.Println(response)\n"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        "delete": {
          "tags": [
            "inventories"
          ],
          "summary": "Delete inventory",
          "operationId": "delete_inventory",
          "description": "Use this API to delete the resource inventory definition by using the inventory ID that you want to run against. For more information, about inventory delete, refer to [ibmcloud schematics inventory delete](/docs/schematics?topic=schematics-schematics-cli-reference#schematics-delete-inventory).\n **Note** you cannot delete the location and region, resource group from where your inventory is created.  Also, make sure your IP addresses are in the [allowlist](/docs/schematics?topic=schematics-allowed-ipaddresses). \n\n <h3>Authorization</h3>\n\n\n Schematics support generic authorization such as service access or platform\naccess to an action ID and the resource group. For more information, about\nSchematics access and permissions, see [Schematics service access roles and\nrequired permissions](/docs/schematics?topic=schematics-access#action-permissions).",
          "parameters": [
            {
              "description": "Equivalent to `-force` options in the command line",
              "name": "force",
              "in": "header",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "description": "Auto propagate the change or deletion to the dependent resources",
              "name": "propagate",
              "in": "header",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Successfully deleted the resource inventory definition",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid,\nexpired, or has no account. Check that the token value is correct or generate\na new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Writer`\nor `Manager` service access role in IAM for IBM Cloud Schematics.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "404": {
              "description": "The action already exists. To find a list of actions,\nuse the `GET /actions` API.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "409": {
              "description": "The inventory is frozen and disabled to create. Unfreeze the\ninventory first before you try to create an inventory. Or the Schematics create,\npatch, delete action has not completed. Wait until the create, update,\ndelete, plan, apply, destroy or refresh action completes before you try\nagain. ",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable.\nWait a few minutes, then try again. If the error persists, contact [IBM\nCloud support](/docs/schematics?topic=schematics-schematics-help).",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request to delete an inventory.",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl --location --request DELETE https://schematics.cloud.ibm.com/v2/inventories/us-east.INVENTORY.dev-inventory523.244223cf/  --header \"Content-Type: application/json\" --header \"Authorization: <access_token> \" --data-raw \"{\"name\": \"dev-inventory538\",\"description\": \"My dev env inventory\",\"location\": \"us-east\",\"resource_group\": \"Default\",\"resource_queries\": [\"default.RESOURCEQUERY.string.df3d8a47\"]}"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request to delete an inventory.",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "response = schematics_service.delete_inventory(\n",
                        "inventory_id='us-east.INVENTORY.dev-inventory502.e383dcbb'\n",
                        ").get_result()\n",
                        "print(json.dumps(response, indent=2))\n"
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request to delete an inventory.",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "DeleteInventoryOptions deleteInventoryOptions = new DeleteInventoryOptions.Builder()\n",
                        ".inventoryId(\"set an inventory Id\")\n",
                        ".build();\n",
                        "service.deleteInventory(deleteInventoryOptions).execute();\n"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request to delete an inventory.",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "const params = {\n",
                        "inventoryId: 'set an inventory ID',\n",
                        "};\n",
                        "schematicsService.deleteInventory(params)\n",
                        ".then(res => {\n",
                        "console.log(JSON.stringify(res.result, null, 2));\n",
                        "})\n",
                        ".catch(err => {\n",
                        "console.warn(err)\n",
                        "});\n"
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request to delete an inventory.",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "deleteInventoryOptions := schematicsService.NewDeleteInventoryOptions(\n",
                        "testString",
                        ")\n",
                        "deleteInventoryOptions.SetInventoryID(\"set inventory Id\")\n",
                        "response, err := schematicsService.DeleteInventory(deleteInventoryOptions)\n",
                        "if err != nil {\n",
                        "panic(err)\n",
                        "}\n",
                        "fmt.Println(response)\n"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        "get": {
          "tags": [
            "inventories"
          ],
          "summary": "Get inventory",
          "operationId": "get_inventory",
          "description": "Use this API to retrieve the detailed information for a resource inventory definition used to target an action in your IBM Cloud account. For more information, about inventory get, refer to [ibmcloud schematics inventory get](/docs/schematics?topic=schematics-schematics-cli-reference#schematics-get-inv).\n **Note** you can fetch only the location and region, resource group from where your inventory is created.  Also, make sure your IP addresses are in the [allowlist](/docs/schematics?topic=schematics-allowed-ipaddresses). \n\n <h3>Authorization</h3>\n\n\n Schematics support generic authorization such as service access or platform\naccess to an action ID and the resource group. For more information, about\nSchematics access and permissions, see [Schematics service access roles and\nrequired permissions](/docs/schematics?topic=schematics-access#action-permissions).",
          "responses": {
            "200": {
              "description": "Successfully retrieved the resource inventory definition",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/InventoryResourceRecord"
                  },
                  "examples": {
                    "response": {
                      "value": {
                        "type": "workspace_resource",
                        "name": "hello",
                        "id": "default.RESOURCEQUERY.hello.2123123",
                        "created_at": "2021-04-09T10:20:06.572503322Z",
                        "created_by": "user@ibm.com",
                        "updated_at": "0001-01-01T00:00:00Z",
                        "queries": [
                          {
                            "query_type": "workspaces",
                            "query_condition": [
                              {
                                "name": "workspace-id",
                                "value": "us-east.ACTION.kubectlWorkshop.12312",
                                "description": "string"
                              },
                              {
                                "name": "resource-name",
                                "value": "t12312-pubpriv-frontend-vsi",
                                "description": "string"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad request. Verify that the information in your request body\nis complete and correctly formatted in JSON.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request.",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid,\nexpired, or has no account. Check that the token value is correct or generate\na new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Writer`\nor `Manager` service access role in IAM for IBM Cloud Schematics.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "404": {
              "description": "The inventory not found. To find a list of inventory,\nuse the `GET /inventories` API.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable.\nWait a few minutes, then try again. If the error persists, contact [IBM\nCloud support](/docs/schematics?topic=schematics-schematics-help).",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request to get a inventory details",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl --location --request GET https://schematics.cloud.ibm.com/v2/inventories/{inventory_id} —header \"Authorization:  <access_token> \" —header \"Content-Type: application/json \""
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request to replace the resource query.",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "inventory_resource_record = schematics_service.get_inventory(\n",
                        "inventory_id='set an inventory ID'\n",
                        ").get_result()\n",
                        "print(json.dumps(inventory_resource_record, indent=2))\n"
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request to replace the resource query.",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "GetInventoryOptions getInventoryOptions = new GetInventoryOptions.Builder()\n",
                        ".inventoryId(\"set an inventory Id\")\n",
                        ".build();\n",
                        "Response<InventoryResourceRecord> response = service.getInventory(getInventoryOptions).execute();\n",
                        "InventoryResourceRecord inventoryResourceRecord = response.getResult();\n",
                        "System.out.println(inventoryResourceRecord);\n"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request to replace the resource query.",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "const params = {inventoryId: 'set an inventory ID',};\n",
                        "schematicsService.getInventory(params)\n",
                        ".then(res => {\n",
                        "console.log(JSON.stringify(res.result, null, 2));\n",
                        "})\n",
                        ".catch(err => {\n",
                        "console.warn(err)\n",
                        "});\n"
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request to replace the resource query.",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "getInventoryOptions := schematicsService.NewGetInventoryOptions(\n",
                        "testString",
                        ")\n",
                        "getInventoryOptions.SetInventoryID(\"set an inventory ID\")\n",
                        "inventoryResourceRecord, response, err := schematicsService.GetInventory(getInventoryOptions)\n",
                        "if err != nil {\n",
                        "panic(err)\n",
                        "}\n",
                        "b, _ := json.MarshalIndent(inventoryResourceRecord, \"\", \"  \")\n",
                        "fmt.Println(string(b))\n",
                        "fmt.Println(response)\n"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "/v2/jobs": {
        "parameters": [
          {
            "description": "The IAM access token for your IBM Cloud account. To retrieve\nthe token, you need to create the access token for your IBM Cloud Account.\nFor more information, about creating IAM access token, refer, [Get token\npassword](/apidocs/iam-identity-token-api#gettoken-password). ",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Resource Inventory ID.  Use GET /inventories API to look up the resource inventory definition IDs in your IBM Cloud account.",
            "name": "inventory_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "get": {
          "tags": [
            "jobs"
          ],
          "summary": "List jobs",
          "description": "Retrieve a list of all Schematics jobs that ran against a target hosts through Schematics action. The job displays a list of jobs with the status as `in_progess`, `success`, or `failed`. Jobs are generated when you use the `POST /v2/jobs`, `PUT /v2/jobs/{job_id}`, or `DELETE /v2/jobs/{job_id}`.\n\n <h3>Authorization</h3>\n\n\n Schematics support generic authorization such as service access or platform\naccess to the job ID and the resource group. For more information, about\nSchematics access and permissions, see [Schematics service access roles and\nrequired permissions](/docs/schematics?topic=schematics-access#access-roles).",
          "x-ibm-events": {
            "summary": "Auditing",
            "events": [
              {
                "name": "schematics.job.list"
              }
            ]
          },
          "operationId": "list_jobs",
          "parameters": [
            {
              "description": "The position of the jobs in the list of jobs, from which\nyou want to start listing your jobs. For example, if you have three jobs\nin your account, the first job is assigned position number 0, the second\njob is assigned position number 1, and so forth. If you have 6 jobs\nand you want to list the details for jobs 2-6, enter 1. To limit the\nnumber of jobs that is returned, use the `limit` option in addition to\nthe `offset` option. Negative numbers are not supported and are ignored.",
              "name": "offset",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "description": "The maximum number of jobs that you want to list. The number\nmust be a positive integer between 1 and 50. If no value is provided, 100\nis used by default. ",
              "name": "limit",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "description": "Use the character to delineate sub-resources and sub-fields\nFor example, \"owner.last_name\"). Prefix the field with \"+\" or \"-\",\nindicating \"ascending\" or \"descending\" (default is ascending) Ignore\nunrecognized or unsupported sort field ",
              "name": "sort",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The level of details returned by the get method.",
              "name": "profile",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "ids",
                  "summary"
                ]
              }
            },
            {
              "description": "Name of the resource. Supported value is actions.",
              "name": "resource",
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "actions"
                ]
              }
            },
            {
              "description": "Name of the action ID.",
              "name": "action_id",
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "List the jobs.",
              "name": "list",
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "all"
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully listed the jobs that you have access to.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request.",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/JobList"
                  },
                  "examples": {
                    "response": {
                      "value": {
                        "total_count": 2,
                        "limit": 100,
                        "offset": 0,
                        "jobs": [
                          {
                            "id": "Users job ID",
                            "name": "Users job name",
                            "description": "Short description",
                            "command_object": "Users resource action, for example, **action**",
                            "command_object_id": "Users object ID",
                            "command_name": "Users job command name, for example, **ansible_playbook_check**",
                            "location": "Users location",
                            "resource_group": "Users resource group name",
                            "submitted_at": "2021-02-10T11:33:23.37852757Z",
                            "duration": "57.243452S",
                            "start_at": "2021-02-10T11:33:29.708025157Z",
                            "end_at": "2021-02-10T11:34:26.951477114Z",
                            "status": {
                              "workspace_job_status": {
                                "flow_status": {
                                  "updated_at": "0001-01-01T00:00:00Z"
                                },
                                "updated_at": "0001-01-01T00:00:00Z"
                              },
                              "action_job_status": {
                                "action_name": "Users action name, for example, **00aaaa2222**",
                                "status_code": "Job status ocde",
                                "status_message": "Job status message",
                                "updated_at": "0001-01-01T00:00:00Z"
                              }
                            },
                            "log_summary": {
                              "log_start_at": "0001-01-01T00:00:00Z",
                              "log_analyzed_till": "0001-01-01T00:00:00Z",
                              "repo_download_job": {},
                              "workspace_job": {},
                              "flow_job": {},
                              "action_job": {
                                "task_count": 3,
                                "play_count": 1,
                                "recap": {
                                  "unreachable": 1
                                }
                              }
                            },
                            "updated_at": "0001-01-01T00:00:00Z"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid,\nexpired, or has no account. Check that the token value is correct or generate\na new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Viewer`,\n`Writer`, or `Manager` service access role in IAM for IBM Cloud Schematics. ",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable.\nWait a few minutes, then try again. If the error persists, contact IBM\nCloud support.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request to list a job",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl --location --request GET https://schematics.cloud.ibm.com/v2/jobs?resource=actions&action_id=us-east.ACTION.Example-12a1b212.3287dc42  --header \"Authorization: <access_token> \" --header \"Cookie: \""
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request to list a job",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "GetJobOptions getJobOptions = new GetJobOptions.Builder()\n",
                        ".jobId(\"job ID\")\n",
                        ".build();\n",
                        "\n",
                        "Response<Job> response = service.getJob(getJobOptions).execute();\n",
                        "Job job = response.getResult();\n",
                        "\n",
                        "System.out.println(job);"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request to list a job",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "job_list = schematics_service.list_jobs().get_result()\n",
                        "print(json.dumps(job_list, indent=2))"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request to list a job",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "const params = {\n",
                        "resource:\"resource group name\",\n",
                        "actionId: \"Users action ID\"\n",
                        "};\n",
                        "\n",
                        "schematicsService.listJobs(params)\n",
                        ".then(res => {\n",
                        "console.log(JSON.stringify(res.result, null, 2));\n",
                        "})\n",
                        ".catch(err => {\n",
                        "console.warn(err)\n",
                        "});"
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request to list a job",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "listJobsOptions := schematicsService.NewListJobsOptions()\n",
                        "listJobsOptions.SetResource(\"set the action details\")\n",
                        "listJobsOptions.SetActionID(\"set the action ID\")\n",
                        "listJobsOptions.SetList(\"all\")\n",
                        "jobList, response, err := schematicsService.ListJobs(listJobsOptions)\n",
                        "if err != nil {\n",
                        "panic(err)\n",
                        "}\n",
                        "b, _ := json.MarshalIndent(jobList, \"\", \"/v2/jobs/\")\n",
                        "fmt.Println(string(b))"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        "post": {
          "tags": [
            "jobs"
          ],
          "summary": "Create a job",
          "description": "Create the IBM Cloud Schematics job to launch an Ansible playbook against a target hosts. The job displays a list of jobs with the status as `in_progess`, `success`, or `failed`.",
          "x-ibm-events": {
            "summary": "Auditing",
            "events": [
              {
                "name": "schematics.job.create"
              }
            ]
          },
          "operationId": "create_job",
          "parameters": [
            {
              "description": "Create a job record and launch the job.",
              "name": "X-Github-token",
              "in": "header",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The IAM access token for your IBM Cloud account. To retrieve\nthe token, you need to create the IAM access token for your IBM Cloud Account.\nFor more information, about creating IAM access token, refer, [Get token\npassword](/apidocs/iam-identity-token-api#gettoken-password).",
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Job"
                }
              }
            },
            "description": "Input parameter to create the IBM Cloud Schematics job.",
            "required": true
          },
          "x-codegen-request-body-name": "job",
          "responses": {
            "201": {
              "description": "Successfully created the job in IBM Cloud Schematics. Your\nresources are not provisioned until you use the `POST /actions/{id}/apply`\nAPI.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Job"
                  },
                  "examples": {
                    "response": {
                      "value": {
                        "command_object": "Users resource action, for example, **action**",
                        "command_object_id": "Users job ID",
                        "command_name": "Users job command name, for example, **ansible_playbook_check**",
                        "command_parameter": "Users playbook name",
                        "id": "Users job ID",
                        "name": "Users job name",
                        "description": "This Action Run Lamp on multiple host xxxx",
                        "location": "Users location",
                        "resource_group": "Users resource group name",
                        "submitted_at": "2021-02-09T05:38:52.933700022Z",
                        "submitted_by": "schematics@ibm.com",
                        "start_at": "2021-02-09T05:38:52.933698161Z",
                        "end_at": "0001-01-01T00:00:00Z",
                        "status": {
                          "workspace_job_status": {
                            "flow_status": {
                              "updated_at": "0001-01-01T00:00:00Z"
                            },
                            "updated_at": "0001-01-01T00:00:00Z"
                          },
                          "action_job_status": {
                            "action_name": "Example-12ab2",
                            "status_code": "job_pending",
                            "status_message": "Job created and pending to start",
                            "updated_at": "2021-02-09T05:38:52.933701533Z"
                          }
                        },
                        "data": {
                          "job_type": "",
                          "workspace_job_data": {
                            "updated_at": "0001-01-01T00:00:00Z"
                          },
                          "action_job_data": {
                            "inputs": [
                              {
                                "name": "upassword",
                                "value": "Abc@123xxx",
                                "metadata": {
                                  "type": "string",
                                  "default_value": "Abc@123xxx",
                                  "secure": true
                                }
                              },
                              {
                                "name": "dbname",
                                "value": "Users DB name",
                                "metadata": {
                                  "type": "string",
                                  "default_value": "xxxx"
                                }
                              },
                              {
                                "name": "dbuser",
                                "value": "Users DB user value",
                                "metadata": {
                                  "type": "string",
                                  "default_value": "root"
                                }
                              },
                              {
                                "name": "mysql_port",
                                "value": "Users MySQL port number",
                                "metadata": {
                                  "type": "string",
                                  "default_value": "3306"
                                }
                              },
                              {
                                "name": "httpd_port",
                                "value": "Users HTTP port number",
                                "metadata": {
                                  "type": "string",
                                  "default_value": "80"
                                }
                              }
                            ],
                            "updated_at": "0001-01-01T00:00:00Z"
                          }
                        },
                        "bastion": {
                          "name": "bastionhost",
                          "type": "string",
                          "description": "string",
                          "resource_query": "100.100.100.100",
                          "credential_ref": "ssh_key",
                          "created_at": "0001-01-01T00:00:00Z",
                          "updated_at": "0001-01-01T00:00:00Z",
                          "sys_lock": {
                            "sys_locked_at": "0001-01-01T00:00:00Z"
                          }
                        },
                        "log_summary": {
                          "log_start_at": "0001-01-01T00:00:00Z",
                          "log_analyzed_till": "0001-01-01T00:00:00Z",
                          "repo_download_job": {},
                          "workspace_job": {},
                          "flow_job": {},
                          "action_job": {
                            "recap": {}
                          }
                        },
                        "updated_at": "0001-01-01T00:00:00Z"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad request. Verify that the information in your request body\nis complete and correctly formatted in JSON.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request.",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid,\nexpired, or has no account. Check that the token value is correct or generate\na new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Writer`\nor `Manager` service access role in IAM for IBM Cloud Schematics.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "404": {
              "description": "The action already exists. To find a list of actions,\nuse the `GET /actions` API.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "409": {
              "description": "The action is frozen and disabled for create. Unfreeze the\naction first before you try to create the action. Or the Schematics create,\nupdate, delete action has not completed. Wait until the create, update,\ndelete, plan, apply, destroy or refresh action completes before you try\nagain. ",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "429": {
              "description": "Too many requests have been made within a time window. \"IBM\nCloud Schematics supports 50 API requests per minute, per host, and per\ncustomer. The host can be `us-east`, `us-south`, `eu-gb`, or `eu-de` region\".\nWait before calling the API again.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable.\nWait a few minutes, then try again. If the error persists, contact [IBM\nCloud support](/docs/schematics?topic=schematics-schematics-help).",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "503": {
              "description": "IBM Cloud Schematics could not process the request, due to\na temporary overloading or maintenance. Try to reduce your request rate,\nor retry after a few minutes. If the error persists, contact [IBM Cloud\nsupport](/docs/schematics?topic=schematics-schematics-help).",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request to create a job",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl --location --request POST https://schematics.cloud.ibm.com/v2/jobs --header \"Authorization: <access_token> \"--header \"Content-Type: application/json\"--data-raw \"{\"command_object\": \"action\",\"command_object_id\": \"us-east\",\"command_name\": \"ansible_playbook_check\",\"command_parameter\": \"site.yml\"}\""
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request to create a job",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "CreateJobOptions createJobOptions = new CreateJobOptions.Builder()\n",
                        ".refreshToken(\"testString\")\n",
                        ".commandObject(\"action\")\n",
                        ".commandObjectId(\"set your action ID.\")\n",
                        ".commandName(\"set command name\")\n",
                        ".commandParameter(\"aj.yml\")\n",
                        ".build();\n",
                        "Response<Job> response = service.createJob(createJobOptions).execute();\n",
                        "Job job = response.getResult();\n",
                        "System.out.println(job);"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request to create a job",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "job = schematics_service.create_job().get_result()\n",
                        "object=\"action\",\n",
                        "object_id=\"Users action ID\",\n",
                        "name=\"ansible_playbook_run\", parameter=\"test.yml\"\n",
                        ").get_result()\n",
                        "print(json.dumps(job, indent=2))"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request to create a job",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "const params = {\"refreshToken\":\"testString\",\n",
                        "\"commandObject\":\"set your command object, [workspace or action]\",\n",
                        "\"commandObjectId\":\"set your action ID\",\n",
                        "\"commandName\":\"set your command, [ansible_playbook_run or ansible_playbook_check]\",\n",
                        "\"commandParameter\":\"set playbook name with the extension, [test.yml]\"\n",
                        "};\n",
                        "schematicsService.createJob(params)\n",
                        ".then(res => {\n",
                        "console.log(JSON.stringify(res.result, null, 2));\n",
                        "})\n",
                        ".catch(err => {\n",
                        "console.warn(err)\n",
                        "});"
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request to create a job",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "CreateJobOptions := schematicsService.NewCreateJobOptions(\"set your job options\",)\n",
                        "\n",
                        "CreateJobOptions.SetCommandObject(\"set your command object, [workspace or action]\")\n",
                        "CreateJobOptions.SetCommandObjectID(\"set your action ID\")\n",
                        "CreateJobOptions.SetCommandName(\"set your command name\")\n",
                        "CreateJobOptions.SetCommandParameter(\"set your yml file as command parameter\")\n",
                        "\n",
                        "job, response, err := schematicsService.CreateJob(CreateJobOptions)\n",
                        "if err != nil {\n",
                        "panic(err)\n",
                        "}\n",
                        "b, _ := json.MarshalIndent(job, \"\", \"/v2/jobs\")\n",
                        "fmt.Println(string(b))"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "/v2/jobs/{job_id}": {
        "parameters": [
          {
            "description": "The IAM access token for your IBM Cloud account. To retrieve\nthe token, you need to create the IAM access token for your IBM Cloud Account.\nFor more information, about creating IAM access token, refer, [Get token\npassword](/apidocs/iam-identity-token-api#gettoken-password). ",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use GET jobs API to look up the Job IDs in your IBM Cloud account.",
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "get": {
          "tags": [
            "jobs"
          ],
          "summary": "Get a job",
          "description": "Retrieve the detailed information of all the tasks and events for that playbook run.\n\n <h3>Authorization</h3> \n\n Schematics support generic authorization\nsuch as service access or platform access to the job ID and the resource\ngroup. For more information, about Schematics access and permissions, see\n[Schematics service access roles and required permissions](/docs/schematics?topic=schematics-access#access-roles).",
          "x-ibm-events": {
            "summary": "Auditing",
            "events": [
              {
                "name": "schematics.job.read"
              }
            ]
          },
          "operationId": "get_job",
          "parameters": [
            {
              "description": "Level of details retrieved by the GET method. ",
              "name": "profile",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "summary",
                  "detailed"
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully retrieved details about your job record.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Job"
                  },
                  "examples": {
                    "response": {
                      "value": {
                        "id": "Users job ID",
                        "name": "Users Job name",
                        "description": "Short description",
                        "command_object": "Users resource action, for example, **action**",
                        "command_object_id": "Users object ID",
                        "command_name": "Users job command name, for example, **ansible_playbook_check**",
                        "location": "Users location",
                        "resource_group": "Users resource group",
                        "submitted_at": "2021-02-09T05:38:52.933700022Z",
                        "submitted_by": "users@test.com",
                        "duration": "45.702379S",
                        "start_at": "2021-02-09T05:38:58.338739558Z",
                        "end_at": "2021-02-09T05:39:44.041118719Z",
                        "status": {
                          "workspace_job_status": {
                            "flow_status": {
                              "updated_at": "0001-01-01T00:00:00Z"
                            },
                            "updated_at": "0001-01-01T00:00:00Z"
                          },
                          "action_job_status": {
                            "action_name": "Users action name",
                            "status_code": "Users job status code",
                            "status_message": "Users job execution status",
                            "updated_at": "0001-01-01T00:00:00Z"
                          }
                        },
                        "log_summary": {
                          "log_start_at": "0001-01-01T00:00:00Z",
                          "log_analyzed_till": "0001-01-01T00:00:00Z",
                          "repo_download_job": {},
                          "workspace_job": {},
                          "flow_job": {},
                          "action_job": {
                            "task_count": 6,
                            "play_count": 1,
                            "recap": {
                              "ok": 4,
                              "failed": 1,
                              "skipped": 1
                            }
                          }
                        },
                        "updated_at": "0001-01-01T00:00:00Z"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid,\nexpired, or has no account. Check that the token value is correct or generate\na new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Viewer`,\n`Writer`, or `Manager` service access role in IAM for IBM Cloud Schematics.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "404": {
              "description": "Not found. The specified action could not be found. Verify\nthat the action ID is correct. To list actions in your IBM Cloud account,\nuse the `GET /v2/actions` API.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable.\nWait a few minutes, then try again. If the error persists, contact IBM\nCloud support.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request to get a job details",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl --location --request GET https://schematics.cloud.ibm.com/v2/jobs/jobid --header \"Authorization:  <access_token> \""
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request to get a job details",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "GetJobOptions getJobOptions = new GetJobOptions.Builder()\n",
                        ".jobId(\"set your job ID\")\n",
                        ".build();\n",
                        "\n",
                        "Response<Job> response = service.getJob(getJobOptions).execute();\n",
                        "Job job = response.getResult();\n",
                        "\n",
                        "System.out.println(job);"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request to get a job details",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "job = schematics_service.get_job(job_id=\"us.JOB.keratinsample.08e45f87\").get_result()\n",
                        "print (json.dumps(job, indent=2))"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request to get a job details",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "const params = {jobId: \"Users job ID\"};\n",
                        "\n",
                        "schematicsService.getJob(params)\n",
                        ".then(res => {\n",
                        "console.log(JSON.stringify(res.result, null, 2));\n",
                        "})\n",
                        ".catch(err => {\n",
                        "console.warn(err)\n",
                        "});"
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request to get a job details",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "getJobOptions := schematicsService.NewGetJobOptions(\"set job options\",)\n",
                        "getJobOptions.SetJobID(\"set your job ID\")\n",
                        "\n",
                        "job, response, err := schematicsService.GetJob(getJobOptions)\n",
                        "if err != nil {\n",
                        "panic(err)\n",
                        "}\n",
                        "b, _ := json.MarshalIndent(job, \"\", \"\")\n",
                        "fmt.Println(string(b))"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        "put": {
          "tags": [
            "jobs"
          ],
          "summary": "Update a job",
          "description": "Update or replace a job creates a copy of the job and relaunches an existing job by updating the information of an existing Schematics job. \n\n <h3>Authorization</h3> \n\n Schematics support generic authorization\nsuch as service access or platform access to the job ID and the resource\ngroup. For more information, about Schematics access and permissions, see\n[Schematics service access roles and required permissions](/docs/schematics?topic=schematics-access#access-roles).",
          "x-ibm-events": {
            "summary": "Auditing",
            "events": [
              {
                "name": "schematics.job.update"
              }
            ]
          },
          "operationId": "update_job",
          "parameters": [
            {
              "description": "You can clone the job record, and relaunch the job.",
              "name": "refresh_token",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The IAM access token for your IBM Cloud account. To retrieve\nthe token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Use GET jobs API to look up the Job IDs in your IBM Cloud account.",
              "name": "job_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Job"
                }
              }
            },
            "description": "Job",
            "required": true
          },
          "x-codegen-request-body-name": "jobs",
          "responses": {
            "200": {
              "description": "Successfully updated the job.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Job"
                  },
                  "examples": {
                    "response": {
                      "value": {
                        "command_object": "Users resource action, for example, **action**",
                        "command_object_id": "Users object ID",
                        "command_name": "Users job command name, for example, **ansible_playbook_check**",
                        "command_parameter": "Users playbook name",
                        "id": "Users job ID",
                        "name": "Users job name",
                        "description": "Short description for the update",
                        "location": "Users location",
                        "resource_group": "Users resource group name",
                        "submitted_at": "2021-02-10T11:33:23.37852757Z",
                        "start_at": "2021-02-10T11:33:23.378525569Z",
                        "end_at": "2021-02-09T05:39:44.041118719Z",
                        "duration": "45.702379S",
                        "status": {
                          "workspace_job_status": {
                            "flow_status": {
                              "updated_at": "0001-01-01T00:00:00Z"
                            },
                            "updated_at": "0001-01-01T00:00:00Z"
                          },
                          "action_job_status": {
                            "action_name": "Users action name, for example, **12ab2**",
                            "status_code": "job_pending",
                            "status_message": "Job created and pending to start",
                            "updated_at": "2021-02-10T11:33:23.378529139Z"
                          }
                        },
                        "data": {
                          "job_type": "",
                          "workspace_job_data": {
                            "updated_at": "0001-01-01T00:00:00Z"
                          },
                          "action_job_data": {
                            "updated_at": "0001-01-01T00:00:00Z"
                          }
                        },
                        "bastion": {
                          "name": "bastionhost",
                          "type": "string",
                          "description": "string",
                          "resource_query": "100.100.100.100",
                          "credential_ref": "ssh_key",
                          "created_at": "0001-01-01T00:00:00Z",
                          "updated_at": "0001-01-01T00:00:00Z",
                          "sys_lock": {
                            "sys_locked_at": "0001-01-01T00:00:00Z"
                          }
                        },
                        "log_summary": {
                          "log_start_at": "0001-01-01T00:00:00Z",
                          "log_analyzed_till": "0001-01-01T00:00:00Z",
                          "repo_download_job": {},
                          "workspace_job": {},
                          "flow_job": {},
                          "action_job": {
                            "recap": {}
                          }
                        },
                        "updated_at": "0001-01-01T00:00:00Z"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid,\nexpired, or has no account. Check that the token value is correct or generate\na new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Writer`\nor `Manager` service access role in IAM for IBM Cloud Schematics.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "404": {
              "description": "The specified action could not be found. Verify that you\nentered the correct action ID. To find the ID of a action, use the\n`GET /v2/actions` API.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "409": {
              "description": "Could not update the action template information. The action\nis frozen and disabled for updates. Unfreeze the action first, before\nyou try again. Or the Schematics create, update, delete action has not\ncompleted. Wait until the create, update, delete, plan, apply, destroy\nor refresh action completes before you try again.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "429": {
              "description": "Too many requests have been made within a time window. IBM\nCloud Schematics supports 50 API requests per minute, per host, and per\ncustomer. The host can be `us-east`, `us-south`, `eu-gb`, or `eu-de` region.\nWait before calling the API again.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable.\nWait a few minutes, then try again. If the error persists, contact [IBM\nCloud support](/docs/schematics?topic=schematics-schematics-help).",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "503": {
              "description": "IBM Cloud Schematics could not process the request, due to\na temporary overloading or maintenance. Try to reduce your request rate,\nor retry after a few minutes. If the error persists, contact [IBM Cloud\nsupport](/docs/schematics?topic=schematics-schematics-help).",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request to update a job details",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl --location --request PUT https://schematics.cloud.ibm.com/v2/jobs/us-east.JOB.Example-12a1b212.6f314758 --header \"Authorization: <access_token> \"--header \"Content-Type: application/json \"--header \"Cookie: \"--data-raw \"{ \"command_object\": \"action\",  \"command_object_id\": \"us-east.ACTION.Example-12a1b212.3287dc42\",  \"command_name\": \"ansible_playbook_run\",  \"command_parameter\": \"site.yml\"}\""
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request to update a job details",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "ReplaceJobOptions replaceJobOptions = new ReplaceJobOptions.Builder()\n",
                        ".refreshToken(\"testString\")\n",
                        ".jobId(\"set your job ID\")\n",
                        ".build();\n",
                        "\n",
                        "Response<Job> response = service.replaceJob(replaceJobOptions).execute();\n",
                        "Job job = response.getResult();\n",
                        "\n",
                        "System.out.println(job);"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request to update a job details",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "job = schematics_service.replace_job(refresh_token='testString',\n",
                        "job_id=\"set your job ID\"\n",
                        ").get_result()\n",
                        "print (json.dumps(job, indent=2))"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request to update a job details",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "const params = {\n",
                        "refreshToken: 'testString',\n",
                        "jobId: \"Users job ID\",\n",
                        "description: \"Very Huge short description\",\n",
                        "};\n",
                        "\n",
                        "schematicsService.replaceJob(params)\n",
                        ".then(res => {\n",
                        "console.log(JSON.stringify(res.result, null, 2));\n",
                        "})\n",
                        ".catch(err => {\n",
                        "console.warn(err)\n",
                        "});"
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request to update a job details",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "UpdatejobOptions := schematicsService.NewReplaceJobOptions(\"teststring\",\"teststring\",)\n",
                        "UpdatejobOptions.SetJobID(\"set the job ID\")\n",
                        "UpdatejobOptions.SetCommandObject(\"set your command object, [workspace or action] \")\n",
                        "UpdatejobOptions.SetCommandObjectID(\"set your action ID\")\n",
                        "UpdatejobOptions.SetCommandName(\"set the command name\")\n",
                        "UpdatejobOptions.SetCommandParameter(\"set your yaml file for the command parameter\")\n",
                        "\n",
                        "job, response, err := schematicsService.ReplaceJob(UpdatejobOptions)\n",
                        "if err != nil {\n",
                        "panic(err)\n",
                        "}\n",
                        "b, _ := json.MarshalIndent(job, \"\", \"\")\n",
                        "fmt.Println(string(b))"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        "delete": {
          "tags": [
            "jobs"
          ],
          "summary": "Delete a job",
          "description": "Delete a job to run against your IBM Cloud resources. **Note** You cannot delete or stop the job activity from an ongoing execution of an action defined in the playbook. You can repeat the execution of same job, whenever you patch or update an action.\n <h3>Authorization</h3> \n\n Schematics\nsupport generic authorization such as service access or platform access to\nthe action ID and the resource group. For more information, about Schematics\naccess and permissions, see [Schematics service access roles and required\npermissions](/docs/schematics?topic=schematics-access#access-roles).",
          "x-ibm-events": {
            "summary": "Auditing",
            "events": [
              {
                "name": "schematics.job.delete"
              }
            ]
          },
          "operationId": "delete_job",
          "parameters": [
            {
              "description": "You can delete a specific job.  \n\n **Limitation**: \n * If the token is expired, you can use `refresh token` to get a new IAM access token. \n * The `refresh_token` parameter cannot be used to retrieve a new IAM access token. \n * When the IAM access token is about to expire, use the API key to create a new access token.",
              "name": "refresh_token",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Equivalent to \"-force\" options in the CLI.",
              "name": "force",
              "in": "header",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "description": "Auto propagates the change or deletion to the dependent resources. To find a job\nID, use the `GET /v2/jobs` API.",
              "name": "propagate",
              "in": "header",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Successfully initiated stopping of the job, and deleted the job record.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid,\nexpired, or has no account. Check that the token value is correct or generate\na new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Manager`\nservice access role in IAM for IBM Cloud Schematics.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "409": {
              "description": "Could not delete an action template information. The action\nis frozen and disabled for updates. Unfreeze the action first, before\nyou try again. Or the Schematics create, update, delete action has not\ncompleted. Wait until the create, update, delete, plan, apply, destroy\nor refresh action completes before you try again.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "429": {
              "description": "Too many requests have been made within a time window. IBM\nCloud Schematics supports 50 API requests per minute, per host, and per\ncustomer. The host can be `us-east`, `us-south`, `eu-gb`, or `eu-de` region.\nWait before calling the API again.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable.\nWait a few minutes, then try again. If the error persists, contact [IBM\nCloud support](/docs/schematics?topic=schematics-schematics-help).",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "503": {
              "description": "IBM Cloud Schematics could not process the request, due to\na temporary overloading or maintenance. Try to reduce your request rate,\nor retry after a few minutes. If the error persists, contact [IBM Cloud\nsupport](/docs/schematics?topic=schematics-schematics-help).",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request to delete a job",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl --location --request DELETE https://schematics.cloud.ibm.com/v2/jobs/{jobid} --header \"Authorization: <access_token> \""
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request to delete a job",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "DeleteJobOptions deleteJobOptions = new DeleteJobOptions.Builder()\n",
                        ".jobId(\"Set your job ID\")\n",
                        ".refreshToken(\"<refresh token>\")\n",
                        ".build();\n",
                        "\n",
                        "service.deleteJob(deleteJobOptions).execute();"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request to delete a job",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "response = schematics_service.delete_job(\n",
                        "job_id=\"Set your job ID\",\n",
                        "refresh_token=\"<refresh token>\"\n",
                        ").get_result()\n",
                        "\n",
                        "print(json.dumps(response, indent=2))"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request to delete a job",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "const params = {\n",
                        "refreshToken: \"Users refresh token\",\n",
                        "jobId: \"Users job ID\"\n",
                        "};\n",
                        "schematicsService.deleteJob(params)\n",
                        ".then(res => {\n",
                        "console.log(JSON.stringify(res.result, null, 2));\n",
                        "})\n",
                        ".catch(err => {\n",
                        "console.warn(err)\n",
                        "});"
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request to delete a job",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "deleteJobOptions := schematicsService.NewDeleteJobOptions(\"testString\",\"testString\",)\n",
                        "deleteJobOptions.SetJobID(\"set the job ID\")\n",
                        "response, err := schematicsService.DeleteJob(deleteJobOptions)\n",
                        "if err != nil {\n",
                        "panic(err)\n",
                        "}"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "/v2/jobs/{job_id}/logs": {
        "parameters": [
          {
            "description": "The IAM access token for your IBM Cloud account. To retrieve\nthe token, you need to create the IAM access token for your IBM Cloud Account.\nFor more information, about creating IAM access token, refer, [Get token\npassword](/apidocs/iam-identity-token-api#gettoken-password). ",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Use GET jobs API to look up the Job IDs in your IBM Cloud account.",
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "get": {
          "tags": [
            "jobs"
          ],
          "summary": "Get job logs",
          "description": "Retrieve the detailed information of all the job records and events of the playbook run from your IBM Cloud account. For example, if you use an API endpoint for a geography,\nsuch as North America, only jobs that are created in `us-south` or `us-east`\nare returned. \n\n <h3>Authorization</h3>\n\n\n Schematics support generic authorization such as service access or platform\naccess to the action ID and the resource group. For more information, about\nSchematics access and permissions, see [Schematics service access roles and\nrequired permissions](/docs/schematics?topic=schematics-access#access-roles).",
          "operationId": "list_job_logs",
          "responses": {
            "200": {
              "description": "Successfully lists the jobs logs that you have access to.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request.",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/JobLog"
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid,\nexpired, or has no account. Check that the token value is correct or generate\na new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Viewer`,\n`Writer`, or `Manager` service access role in IAM for IBM Cloud Schematics. ",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable.\nWait a few minutes, then try again. If the error persists, contact IBM\nCloud support.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request to fetch the detailed job logs",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl --location --request GET https://schematics.cloud.ibm.com/v2/jobs/{job_id}/logs --header \"Authorization: <access_token>\""
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request to fetch the detailed job logs",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "ListJobLogsOptions listJobLogsOptions = new ListJobLogsOptions.Builder()\n",
                        ".jobId(\"job ID\")\n",
                        ".build();\n",
                        "\n",
                        "Response<JobLog> response = service.listJobLogs(listJobLogsOptions).execute();\n",
                        "JobLog jobLog = response.getResult();\n",
                        "\n",
                        "System.out.println(jobLog);"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request to fetch the detailed job logs",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "job_log = schematics_service.list_job_logs(\n",
                        "job_id=\"Set your job ID\"\n",
                        ").get_result()\n",
                        "\n",
                        "print (job_log)"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request to fetch the detailed job logs",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "const params = {\n",
                        "jobId: \"Users job ID\"\n",
                        "};\n",
                        "\n",
                        "schematicsService.listJobLogs(params)\n",
                        ".then(res => {\n",
                        "console.log(JSON.stringify(res.result, null, 2));\n",
                        "})\n",
                        ".catch(err => {\n",
                        "console.warn(err)\n",
                        "});"
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request to fetch the detailed job logs",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "listJobLogsOptions := schematicsService.NewListJobLogsOptions(\"testString\",)\n",
                        "listJobLogsOptions.SetJobID(\"set the job ID\")\n",
                        "jobLog, response, err := schematicsService.ListJobLogs(listJobLogsOptions)\n",
                        "if err != nil {\n",
                        "panic(err)\n",
                        "}\n",
                        "b, _ := json.MarshalIndent(jobLog, \"\", \"\")\n",
                        "fmt.Println(string(b))"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "/v2/resources_query": {
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The IAM access token associated with the IBM Cloud account.  To generate the token, you can run `ic iam oauth-tokens` in  the IBM Cloud CLI."
          }
        ],
        "post": {
          "tags": [
            "resource query"
          ],
          "summary": "Create resource query",
          "operationId": "create_resource_query",
          "description": "Use this API to create a resource query definition in a single IBM Cloud resource or a group of resources where you want to run Ansible playbook by using Schematics actions. For more information, about resource query commands, refer to [ibmcloud schematics resource query create](/docs/schematics?topic=schematics-schematics-cli-reference#schematics-create-rq). \n **Note** you cannot update the location and region, resource group once an action is created. Also, make sure your IP addresses are in the [allowlist](/docs/schematics?topic=schematics-allowed-ipaddresses). If your Git repository already contains a host file. Schematics does not overwrite the host file already present in your Git repository.\n\n <h3>Authorization</h3>\n\n\n Schematics support generic authorization such as service access or platform\naccess to an action ID and the resource group. For more information, about\nSchematics access and permissions, see [Schematics service access roles and\nrequired permissions](/docs/schematics?topic=schematics-access#action-permissions).",
          "requestBody": {
            "description": "Create a resource query definition",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceQueryDefinition"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successfully created resource query definition",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ResourceQueryRecord"
                  },
                  "examples": {
                    "response": {
                      "value": {
                        "type": "workspace_resource",
                        "name": "hello",
                        "id": "your resource query ID.",
                        "created_at": "2021-04-09T10:20:06.572501285Z",
                        "created_by": "usera@ibm.com",
                        "updated_at": "0001-01-01T00:00:00Z",
                        "queries": [
                          {
                            "query_type": "workspaces",
                            "query_condition": [
                              {
                                "name": "workspace-id",
                                "value": "us-east.ACTION.kubectlWorkshop.1010101",
                                "description": "string"
                              },
                              {
                                "name": "resource-name",
                                "value": "t123vpc-pubpriv-frontend-vsi",
                                "description": "string"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad request. Verify that the information in your request body\nis complete and correctly formatted in JSON.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request.",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid,\nexpired, or has no account. Check that the token value is correct or generate\na new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Writer`\nor `Manager` service access role in IAM for IBM Cloud Schematics.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "409": {
              "description": "The action is frozen and disabled for create. Unfreeze the\naction first before you try to create the action. Or the Schematics create,\nupdate, delete action has not completed. Wait until the create, update,\ndelete, plan, apply, destroy or refresh action completes before you try\nagain. ",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable.\nWait a few minutes, then try again. If the error persists, contact [IBM\nCloud support](/docs/schematics?topic=schematics-schematics-help).",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request to create a resource query",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl --location --request POST https://schematics.cloud.ibm.com/v2/resources_query/ --header \"Authorization: <access_token> \"  --header \"Content-Type: application/json\"  --header \"Cookie:\" --data-raw \"{\"type\": \"workspace_resource\",\"name\": \"hello\",\"queries\": [{\"query_type\": \"workspaces\",\"query_condition\": [{\"name\": \"workspace-id\", \"value\": \"us-east.ACTION.kubectlWorkshop.41901417\",\"description\": \"string\"},{\"name\": \"resource-name\",\"value\": \"tf00vpc-pubpriv-frontend-vsi\",\"description\": \"string\"}]}]}'"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request to create a resource query",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "resource_query_record = schematics_service.create_resource_query(\n",
                        "type=\"workspace_resource\",\n",
                        "name=\"hello my world\",\n",
                        "queries=[{\n",
                        "query_type:\"workspaces\",\n",
                        "query_condition: [{\n",
                        "name:\"workspace-id\",\n",
                        "value:\"us-east.ACTION.kubectlWorkshop.41901417\",\n",
                        "description:\"string\"},{\n",
                        "name:\"resource-name\",\n",
                        "value:\"tf00vpc-pubpriv-frontend-vsi\",\n",
                        "description:\"string\"}\n",
                        "]\n",
                        "}\n",
                        "]\n",
                        ").get_result()\n",
                        "print(json.dumps(resource_query_record, indent=2))"
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request to create a resource query",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "CreateResourceQueryOptions createResourceQueryOptions = new CreateResourceQueryOptions.Builder()\n",
                        ".type(\"workspace_resource\")\n",
                        ".name(\"hello my world\")\n",
                        ".build();\n",
                        "Response<ResourceQueryRecord> response = service.createResourceQuery(createResourceQueryOptions).execute();\n",
                        "ResourceQueryRecord resourceQueryRecord = response.getResult();\n",
                        "System.out.println(resourceQueryRecord);\n"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request to create a resource query",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "const params = {\n",
                        "type: \"workspace_resource\",\n",
                        "name: \"hello my world\",\n",
                        "queries: [\n",
                        "{\n",
                        "query_type: \"workspaces\",\n",
                        "query_condition: [\n",
                        "{name: \"workspace-id\",value: \"us-east.ACTION.kubectlWorkshop.41901417\",description: \"string\"},\n",
                        "{name: \"resource-name\",value: \"tf00vpc-pubpriv-frontend-vsi\",description: \"string\"}\n",
                        "]}]};\n",
                        "schematicsService.createResourceQuery(params)\n",
                        ".then(res => {console.log(JSON.stringify(res.result, null, 2));})\n",
                        ".catch(err => {console.warn(err)});\n"
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request to create a resource query",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "createResourceQueryOptions := schematicsService.NewCreateResourceQueryOptions()\n",
                        "createResourceQueryOptions.SetType(\"workspace_resource\")\n",
                        "createResourceQueryOptions.SetName(\"hello\")\n",
                        "resourceQueryRecord, response, err := schematicsService.CreateResourceQuery(createResourceQueryOptions)\n",
                        "if err != nil {\n",
                        "panic(err)\n",
                        "}\n",
                        "b, _ := json.MarshalIndent(resourceQueryRecord, \"\", \"  \")\n",
                        "fmt.Println(string(b))\n",
                        "fmt.Println(response)\n"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        "get": {
          "tags": [
            "resource query"
          ],
          "summary": "List resource queries",
          "operationId": "list_resource_query",
          "description": "Retrieve a list of resource inventories from your IBM Cloud account that you have access to. The list of resource queries that is returned depends on the API endpoint that you use. For example, if you use an API endpoint for a geography, such as North America, only resource inventories that are created in `us-south` or `us-east` are retrieved. For more information, about supported API endpoints, see [API endpoints](/apidocs/schematics#api-endpoints).\n\n <h3>Authorization</h3>\n\n\n Schematics support generic authorization such as service access or platform\naccess to an action ID and the resource group. For more information, about\nSchematics access and permissions, see [Schematics service access roles and\nrequired permissions](/docs/schematics?topic=schematics-access#action-permissions).",
          "parameters": [
            {
              "description": "The number of items to skip before starting to collect the result set",
              "name": "offset",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "minimum": 0
              }
            },
            {
              "description": "The numbers of items to return.",
              "name": "limit",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "minimum": 1,
                "maximum": 2000,
                "default": 100
              }
            },
            {
              "description": "Use the character to delineate sub-resources and sub-fields\nFor example, \"owner.last_name\"). Prefix the field with \"+\" or \"-\",\nindicating \"ascending\" or \"descending\" (default is ascending) Ignore\nunrecognized or unsupported sort field. ",
              "in": "query",
              "name": "sort",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Level of details returned by the get method",
              "in": "query",
              "name": "profile",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "ids",
                  "summary"
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful lists the resource queries",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ResourceQueryRecordList"
                  },
                  "examples": {
                    "response": {
                      "value": {
                        "total_count": 4,
                        "limit": 100,
                        "offset": 0,
                        "ResourceQueries": [
                          {
                            "id": "default.RESOURCEQUERY.a12344",
                            "created_at": "2021-04-09T10:05:33.073223242Z",
                            "created_by": "user@in.ibm.com",
                            "updated_at": "0001-01-01T00:00:00Z"
                          },
                          {
                            "type": "vsi",
                            "name": "demorqcli",
                            "id": "default.RESOURCEQUERY.demorqcli.79f53cb8",
                            "created_at": "2021-03-31T06:25:27.675614966Z",
                            "created_by": "user@ibm.com",
                            "updated_at": "0001-01-01T00:00:00Z",
                            "queries": [
                              {
                                "query_type": "workspaces",
                                "query_condition": [
                                  {
                                    "name": "workspace-id",
                                    "value": "us-east.workspace.sundeepKfreporttest.22e234125",
                                    "description": "string"
                                  },
                                  {
                                    "name": "resource-name",
                                    "value": "tf44234vpc-pubpriv-frontend-vsi",
                                    "description": "string"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "workspace_resource",
                            "name": "hello",
                            "id": "default.RESOURCEQUERY.hello.2f12312",
                            "created_at": "2021-04-09T10:20:06.572503322Z",
                            "created_by": "user@ibm.com",
                            "updated_at": "0001-01-01T00:00:00Z",
                            "queries": [
                              {
                                "query_type": "workspaces",
                                "query_condition": [
                                  {
                                    "name": "workspace-id",
                                    "value": "us-east.ACTION.kubectlWorkshop.1010101",
                                    "description": "string"
                                  },
                                  {
                                    "name": "resource-name",
                                    "value": "123vpc-pubpriv-frontend-vsi",
                                    "description": "string"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "workspaces",
                            "name": "samplequerytest",
                            "id": "t12312121vpc-pubpriv-frontend-vsi",
                            "created_at": "2021-03-31T06:32:54.065908533Z",
                            "created_by": "user@ibm.com",
                            "updated_at": "0001-01-01T00:00:00Z"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad request. Verify that the information in your request body\nis complete and correctly formatted in JSON.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request.",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid,\nexpired, or has no account. Check that the token value is correct or generate\na new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Writer`\nor `Manager` service access role in IAM for IBM Cloud Schematics.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable.\nWait a few minutes, then try again. If the error persists, contact [IBM\nCloud support](/docs/schematics?topic=schematics-schematics-help).",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request to list the resource queries",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl --location --request GET https://schematics.cloud.ibm.com/v2/resources_query/ --header \"Authorization: <access_token>\" --header \"Content-Type: application/json\" --header \"Cookie: \" --data-raw \""
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request to list the resource queries",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "resource_query_record_list = schematics_service.list_resource_query().get_result()\n",
                        "print(json.dumps(resource_query_record_list, indent=2))\n"
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request to list the resource queries",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "ListResourceQueryOptions listResourceQueryOptions = new ListResourceQueryOptions.Builder()\n",
                        ".build();\n",
                        "Response<ResourceQueryRecordList> response = service.listResourceQuery(listResourceQueryOptions).execute();\n",
                        "ResourceQueryRecordList resourceQueryRecordList = response.getResult();\n",
                        "System.out.println(resourceQueryRecordList);\n"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request to list the resource queries",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "schematicsService.listResourceQuery({})\n",
                        ".then(res => {\n",
                        "console.log(JSON.stringify(res.result, null, 2));\n",
                        "})\n",
                        ".catch(err => {\n",
                        "console.warn(err)\n",
                        "});\n"
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request to list the resource queries",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "listResourceQueryOptions := schematicsService.NewListResourceQueryOptions()\n",
                        "resourceQueryRecordList, response, err := schematicsService.ListResourceQuery(listResourceQueryOptions)\n",
                        "if err != nil {\n",
                        "panic(err)\n",
                        "}\n",
                        "b, _ := json.MarshalIndent(resourceQueryRecordList, \"\", \"  \")\n",
                        "fmt.Println(string(b))\n",
                        "fmt.Println(response)\n"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "/v2/resources_query/{query_id}": {
        "parameters": [
          {
            "description": "The IAM access token associated with the IBM Cloud account. To generate the token, you can run ic iam oauth-tokens in the IBM Cloud CLI.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Resource query ID. Use GET /resource_query API to look up the resource query definition IDs in your IBM Cloud account.",
            "in": "path",
            "name": "query_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "put": {
          "tags": [
            "resource query"
          ],
          "summary": "Update resources query",
          "operationId": "replace_resources_query",
          "description": "Use this API to update the resource query definition used to target an action. For more information, about resource query commands, refer to [ibmcloud schematics resource query update](/docs/schematics?topic=schematics-schematics-cli-reference#schematics-update-rq). \n **Note** you cannot update the location and region, resource group once a resource query is created. Also, make sure your IP addresses are in the [allowlist](/docs/schematics?topic=schematics-allowed-ipaddresses). \n\n <h3>Authorization</h3>\n\n\n Schematics support generic authorization such as service access or platform\naccess to an action ID and the resource group. For more information, about\nSchematics access and permissions, see [Schematics service access roles and\nrequired permissions](/docs/schematics?topic=schematics-access#action-permissions).",
          "requestBody": {
            "description": "Replace a resources query definition.",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceQueryDefinition"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successfully updated the resources query definition.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request.",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ResourceQueryRecord"
                  },
                  "examples": {
                    "response": {
                      "value": {
                        "type": "workspace_resource",
                        "name": "hello my world",
                        "id": "default.RESOURCEQUERY.hello.10101",
                        "created_at": "2021-04-09T10:20:06.572501285Z",
                        "created_by": "user@ibm.com",
                        "updated_at": "2021-04-09T10:34:39.243133239Z",
                        "updated_by": "user@ibm.com",
                        "queries": [
                          {
                            "query_type": "workspaces",
                            "query_condition": [
                              {
                                "name": "workspace-id",
                                "value": "us-east.ACTION.kubectlWorkshop.12317",
                                "description": "string"
                              },
                              {
                                "name": "resource-name",
                                "value": "tf12312vpc-pubpriv-frontend-vsi",
                                "description": "string"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad request. Verify that the information in your request body\nis complete and correctly formatted in JSON.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid,\nexpired, or has no account. Check that the token value is correct or generate\na new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Writer`\nor `Manager` service access role in IAM for IBM Cloud Schematics.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "404": {
              "description": "The resource query already exists. To find a list of resource query,\nuse the `GET /resource_query` API.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "409": {
              "description": "The resource query is frozen or disabled to create. Unfreeze the\nresource query first before you try to create the action. Or the Schematics create,\nput, delete action has not completed. Wait until the create, update,\ndelete, plan, apply, destroy or refresh action completes before you try\nagain. ",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable.\nWait a few minutes, then try again. If the error persists, contact [IBM\nCloud support](/docs/schematics?topic=schematics-schematics-help).",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request to replace a resource query.",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl --location --request PUT https://schematics.cloud.ibm.comv2/resources_query/default.RESOURCEQUERY.hello.2fdda8ce --header \"Authorization:<access_token> \" --header \"Content-Type: application/json\" --header \"Cookie: \" --data-raw \"{ \"type\": \"workspace_resource\",\"name\": \"hello my world\",\"queries\": [{\"query_type\": \"workspaces\",\"query_condition\": [{\"name\": \"workspace-id\",\"value\": \"us-east.ACTION.kubectlWorkshop.41901417\",\"description\": \"string\"},{\"name\": \"resource-name\",\"value\": \"tf00vpc-pubpriv-frontend-vsi\",\"description\": \"string\"}]}]}"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request to replace the resource query.",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "resource_query_record = schematics_service.replace_resources_query(\n",
                        "query_id= \"set a query Id\",\n",
                        "type= \"workspace_resource\",\n",
                        "name= \"hello my world\",\n",
                        "queries= [\n",
                        "{\n",
                        "query_type: \"workspaces\",\n",
                        "query_condition: [\n",
                        "{\n",
                        "name: \"workspace-id\",\n",
                        "value: \"us-east.ACTION.kubectlWorkshop.41901417\",\n",
                        "description: \"string\"\n",
                        "},\n",
                        "{\n",
                        "name: \"resource-name\",\n",
                        "value: \"tf00vpc-pubpriv-frontend-vsi\",\n",
                        "description: \"string\"\n",
                        "}\n",
                        "]}]\n",
                        ").get_result()\n",
                        "print(json.dumps(resource_query_record, indent=2))\n",
                        "]}]}\n"
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request to replace the resource query.",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "ReplaceResourcesQueryOptions replaceResourcesQueryOptions = new ReplaceResourcesQueryOptions.Builder()\n",
                        ".queryId(\"set a query Id\")\n",
                        ".type(\"workspace_resource\")\n",
                        ".name(\"hello my world this is resource_query\")\n",
                        ".build();\n",
                        "Response<ResourceQueryRecord> response = service.replaceResourcesQuery(replaceResourcesQueryOptions).execute();\n",
                        "ResourceQueryRecord resourceQueryRecord = response.getResult();\n",
                        "System.out.println(resourceQueryRecord);\n"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request to replace the resource query.",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "const params = {\n",
                        "queryId: 'set query Id',\n",
                        "type: \"workspace_resource\",\n",
                        "name: \"hello my world updated changes\",\n",
                        "};\n",
                        "schematicsService.replaceResourcesQuery(params)\n",
                        ".then(res => {\n",
                        "console.log(JSON.stringify(res.result, null, 2));\n",
                        "})\n",
                        ".catch(err => {\n",
                        "console.warn(err)\n",
                        "});\n"
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request to replace the resource query.",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "replaceResourcesQueryOptions := schematicsService.NewReplaceResourcesQueryOptions(\n",
                        "testString",
                        ")\n",
                        "replaceResourcesQueryOptions.SetQueryID(\"default.RESOURCEQUERY.demorqcli.79f53cb8\")\n",
                        "replaceResourcesQueryOptions.SetType(\"workspace_resource\")",
                        "replaceResourcesQueryOptions.SetName(\"hello my world short description\")\n",
                        "resourceQueryRecord, response, err := schematicsService.ReplaceResourcesQuery(replaceResourcesQueryOptions)\n",
                        "if err != nil {\n",
                        "panic(err)\n",
                        "}\n",
                        "b, _ := json.MarshalIndent(resourceQueryRecord, \"\", \"  \")\n",
                        "fmt.Println(string(b))\n",
                        "fmt.Println(response)\n"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        "delete": {
          "tags": [
            "resource query"
          ],
          "summary": "Delete resources query",
          "operationId": "delete_resources_query",
          "description": "Use this API to delete the resource query definition by using the resource query ID that you want to run against. For more information, about resource query commands, refer to [ibmcloud schematics resource query delete](/docs/schematics?topic=schematics-schematics-cli-reference#schematics-delete-resource-query). \n **Note** you can delete from the location and region, resource group where you created the resource query. Also, make sure your IP addresses are in the [allowlist](/docs/schematics?topic=schematics-allowed-ipaddresses). \n\n <h3>Authorization</h3>\n\n\n Schematics support generic authorization such as service access or platform\naccess to an action ID and the resource group. For more information, about\nSchematics access and permissions, see [Schematics service access roles and\nrequired permissions](/docs/schematics?topic=schematics-access#action-permissions).",
          "parameters": [
            {
              "description": "Equivalent to `-force` options in the command line",
              "name": "force",
              "in": "header",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "description": "Auto propagate the change or deletion to the dependent resources",
              "name": "propagate",
              "in": "header",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Successfully deletes a resources query definition.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid,\nexpired, or has no account. Check that the token value is correct or generate\na new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Writer`\nor `Manager` service access role in IAM for IBM Cloud Schematics.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "404": {
              "description": "The action already exists. To find a list of actions,\nuse the `GET /actions` API.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "409": {
              "description": "The resource query is frozen and disabled to create. Unfreeze the\nresource query first before you try to create an resource query. Or the Schematics create,\npatch, delete action has not completed. Wait until the create, update,\ndelete, plan, apply, destroy or refresh action completes before you try\nagain. ",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable.\nWait a few minutes, then try again. If the error persists, contact [IBM\nCloud support](/docs/schematics?topic=schematics-schematics-help).",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example to delete a resource query",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl --location --request DELETE https://schematics.cloud.ibm.com/v2/resources_query/default.RESOURCEQUERY.samplequerytest.699fd513 --header 'Authorization: ' --header \"Content-Type: application/json\" --header \"Cookie: \" --data-raw \""
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request to delete the resource query.",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "response = schematics_service.delete_resources_query(\n",
                        "query_id='set query id'\n",
                        ").get_result()\n",
                        "print(json.dumps(response, indent=2))\n"
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request to delete the resource query.",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "DeleteResourcesQueryOptions deleteResourcesQueryOptions = new DeleteResourcesQueryOptions.Builder()\n",
                        ".queryId(\"set a query Id\")\n",
                        ".build();\n",
                        "service.deleteResourcesQuery(deleteResourcesQueryOptions).execute();\n"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request to delete the resource query.",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "const params = {\n",
                        "queryId: 'set query id',\n",
                        "};\n",
                        "schematicsService.deleteResourcesQuery(params)\n",
                        ".then(res => {\n",
                        "console.log(JSON.stringify(res.result, null, 2));\n",
                        "})\n",
                        ".catch(err => {\n",
                        "console.warn(err)\n",
                        "});\n"
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request to delete the resource query.",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "deleteResourcesQueryOptions := schematicsService.NewDeleteResourcesQueryOptions(\n",
                        "testString",
                        ")\n",
                        "deleteResourcesQueryOptions.SetQueryID(\"set query id\")\n",
                        "response, err := schematicsService.DeleteResourcesQuery(deleteResourcesQueryOptions)\n",
                        "if err != nil {\n",
                        "panic(err)\n",
                        "}\n",
                        "fmt.Println(response)\n"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        "get": {
          "tags": [
            "resource query"
          ],
          "summary": "Get resources query",
          "operationId": "get_resources_query",
          "description": "Use this API to retrieve the information of an existing IBM Cloud Schematics resource query by using a resource query ID. For more information, about resource query commands, refer to [ibmcloud schematics resource query get](/docs/schematics?topic=schematics-schematics-cli-reference#schematics-get-rq). \n **Note** you can delete from the location and region, resource group where you created the resource query. Also, make sure your IP addresses are in the [allowlist](/docs/schematics?topic=schematics-allowed-ipaddresses). \n\n <h3>Authorization</h3>\n\n\n Schematics support generic authorization such as service access or platform\naccess to an action ID and the resource group. For more information, about\nSchematics access and permissions, see [Schematics service access roles and\nrequired permissions](/docs/schematics?topic=schematics-access#action-permissions).",
          "responses": {
            "200": {
              "description": "Successfully fetches a resources query definition.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ResourceQueryRecord"
                  },
                  "examples": {
                    "response": {
                      "value": {
                        "type": "workspace_resource",
                        "name": "hello",
                        "id": "default.RESOURCEQUERY.hello.101010",
                        "created_at": "2021-04-09T10:20:06.572503322Z",
                        "created_by": "user@ibm.com",
                        "updated_at": "0001-01-01T00:00:00Z",
                        "queries": [
                          {
                            "query_type": "workspaces",
                            "query_condition": [
                              {
                                "name": "workspace-id",
                                "value": "us-east.ACTION.kubectlWorkshop.101010",
                                "description": "string"
                              },
                              {
                                "name": "resource-name",
                                "value": "tf1234vpc-pubpriv-frontend-vsi",
                                "description": "string"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad request. Verify that the information in your request body\nis complete and correctly formatted in JSON.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request.",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid,\nexpired, or has no account. Check that the token value is correct or generate\na new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Writer`\nor `Manager` service access role in IAM for IBM Cloud Schematics.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "404": {
              "description": "The resource query not found. To find a list of resource query,\nuse the `GET /resource_query` API.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable.\nWait a few minutes, then try again. If the error persists, contact [IBM\nCloud support](/docs/schematics?topic=schematics-schematics-help).",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request to get a resource query details",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl --location --request GET https://schematics.cloud.ibm.com/v2/resources_query/default.RESOURCEQUERY.hello.2fdda8ce --header \"Authorization: <access_token>\"  --header \"Content-Type: application/json\" --header \"Cookie: \" --data-raw \""
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request to get a resource query",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "GetResourcesQueryOptions getResourcesQueryOptions = new GetResourcesQueryOptions.Builder()\n",
                        ".queryId(\"set a query Id\")\n",
                        ".build();\n",
                        "Response<ResourceQueryRecord> response = service.getResourcesQuery(getResourcesQueryOptions).execute();\n",
                        "ResourceQueryRecord resourceQueryRecord = response.getResult();\n",
                        "System.out.println(resourceQueryRecord);\n"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request to get a resource query",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "resource_query_record = schematics_service.get_resources_query(\n",
                        "query_id='default.RESOURCEQUERY.hello-my-world.c1789bc1'\n",
                        ").get_result()\n",
                        "print(json.dumps(resource_query_record, indent=2))\n"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request to get a resource query",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "const params = {\n",
                        "queryId: 'set a resource-query Id',\n",
                        "};\n",
                        "schematicsService.getResourcesQuery(params)\n",
                        ".then(res => {\n",
                        "console.log(JSON.stringify(res.result, null, 2));\n",
                        "})\n",
                        ".catch(err => {\n",
                        "console.warn(err)\n",
                        "});\n"
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request to get a resource query",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "getResourcesQueryOptions := schematicsService.NewGetResourcesQueryOptions(\n",
                        "testString",
                        ")\n",
                        "getResourcesQueryOptions.SetQueryID(\"set a resource-query Id\")\n",
                        "resourceQueryRecord, response, err := schematicsService.GetResourcesQuery(getResourcesQueryOptions)\n",
                        "if err != nil {\n",
                        "panic(err)\n",
                        "}\n",
                        "b, _ := json.MarshalIndent(resourceQueryRecord, \"\", \"  \")\n",
                        "fmt.Println(string(b))\n",
                        "fmt.Println(response)\n"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "/v2/settings/kms_instances": {
        "parameters": [
          {
            "description": "The IAM access token for your IBM Cloud account. To retrieve\nthe token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The location of the resource",
            "name": "location",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "get": {
          "tags": [
            "kms"
          ],
          "summary": "List kms",
          "description": "Lists the KMS instances of your IBM Cloud account to find your Key Protect or Hyper Protect Crypto Services by using the location and encrypted scheme such as KYOK or BYOK. \n\n <h3>Authorization</h3>\n\n\n Schematics support generic authorization such as service access or platform\naccess to the action ID and the resource group. For more information, about\nSchematics access and permissions, see [Schematics service access roles and\nrequired permissions](/docs/schematics?topic=schematics-access#access-roles).",
          "x-ibm-events": {
            "summary": "Auditing",
            "events": [
              {
                "name": "schematics.kms_instances.read"
              }
            ]
          },
          "operationId": "list_kms",
          "parameters": [
            {
              "description": "The encryption scheme to be used",
              "name": "encryption_scheme",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The location of the resource",
              "name": "location",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The resource group, by default fetches from all resource groups",
              "name": "resource_group",
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The numbers of items to return",
              "name": "limit",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "minimum": 1,
                "maximum": 2000,
                "default": 100
              }
            },
            {
              "description": "Name of the field to sort.  Use the `.` character to describes the sub-resources and sub-fields. For example, `owner.last_name`. Prepend the field with `+` or `-`, indicating 'ascending' or 'descending' by default it is ascending. Ignore  the unrecognised or unsupported sort field.",
              "name": "sort",
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully discovered the KMS instance from the customer account",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request.",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/KMSDiscovery"
                  },
                  "examples": {
                    "response": {
                      "value": {
                        "location": "US",
                        "limit": "10",
                        "encryption_scheme": "byok",
                        "resource_group": "Default",
                        "kms_instances": [
                          {
                            "kms_crn": "crn:v1:public:kms:us-south:a/010101010:key:3a14ceaf-c679-455d-10101010",
                            "kms_name": "Key Protect-xxx",
                            "keys": [
                              {
                                "name": "rootk123",
                                "crn": "crn:v1::public:kms:us-south:alalalallala1231231la"
                              }
                            ],
                            "public_endpoint": "https://kms.cloud.ibm.com",
                            "private_endpoint": "https://kms.cloud.ibm.com"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad request. Verify that the information in your request body\nis complete and correctly formatted in JSON.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Reader`, `Writer` or `Manager` service access role in IAM for IBM Cloud Schematics. ",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact IBM Cloud support.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request to get the KMS instance details",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl --location --request GET  http://schematics.cloud.ibm.com/v2/settings/kms_instances/?location=US&encryption_scheme=byok --header \"Authorization: <access_token> \"—header \"Content-Type: <content-type> \""
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "/v2/settings/kms": {
        "parameters": [
          {
            "description": "The IAM access token for your IBM Cloud account. To retrieve\nthe token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The location of the resource",
            "name": "location",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "get": {
          "tags": [
            "kms"
          ],
          "summary": "Get a kms",
          "description": "Retrieve the KMS on the API endpoint that you have access. For example, if you use an API endpoint for a geography, such as North America, only Schematics resource that are created in `us-south` or `us-east` are retrieved. \n\n <h3>Authorization</h3>\n\n\n Schematics support generic authorization such as service access or platform\naccess to the action ID and the resource group. For more information, about\nSchematics access and permissions, see [Schematics service access roles and\nrequired permissions](/docs/schematics?topic=schematics-access#access-roles).",
          "x-ibm-events": {
            "summary": "Auditing",
            "events": [
              {
                "name": "schematics.kms_settings.read"
              }
            ]
          },
          "operationId": "get_kms_settings",
          "parameters": [
            {
              "description": "The location of the resource",
              "name": "location",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully retrieved the KMS settings",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request.",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/KMSSettings"
                  },
                  "examples": {
                    "response": {
                      "value": {
                        "location": "US",
                        "encryption_scheme": "byok",
                        "resource_group": "Default",
                        "primary_crk": {
                          "kms_name": "Key Protect-xxx",
                          "key_crn": "crn:v1:public:kms:us-south:a/010101010:key:3a14ceaf-c679-455d-10101010",
                          "kms_private_endpoint": "your private end point",
                          "key_name": "rootk123"
                        },
                        "secondary_crk": null
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Reader`, `Writer` or `Manager` service access role in IAM for IBM Cloud Schematics. ",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "404": {
              "description": "Bad Request.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact IBM Cloud support.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example to get the KMS.",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl --location --request GET  http://us-south.schematics.test.cloud.ibm.com/v2/settings/kms?location=US --header \"Authorization: <access_token> \"—header “Content-Type: application/json \""
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example to update the KMS.",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        ""
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example to update the KMS.",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        ""
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example to update the KMS.",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        ""
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example to update the KMS.",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        ""
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        "put": {
          "tags": [
            "kms"
          ],
          "summary": "Update a kms",
          "description": "Update the KMS setting for your location, by using your private endpoint, `CRN`, primary `CRK`, and secondary `CRK`. **Note** you can update the KMS settings only once. For example, if you use an API endpoint for a geography, such as North America, only Schematics resource that are created in `us-south` or `us-east` are retrieved. \n\n <h3>Authorization</h3>\n\n\n Schematics support generic authorization such as service access or platform\naccess to the action ID and the resource group. For more information, about\nSchematics access and permissions, see [Schematics service access roles and\nrequired permissions](/docs/schematics?topic=schematics-access#access-roles).",
          "x-ibm-events": {
            "summary": "Auditing",
            "events": [
              {
                "name": "schematics.kms_settings.update"
              }
            ]
          },
          "operationId": "update_kms_settings",
          "requestBody": {
            "description": "Options to be provided with updating kms settings.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KMSSettings"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successfully retrieved the KMS settings",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request.",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/KMSSettings"
                  },
                  "examples": {
                    "response": {
                      "value": {
                        "location": "US",
                        "encryption_scheme": "byok",
                        "resource_group": "Default",
                        "primary_crk": {
                          "kms_name": "Key Protect-xxx",
                          "key_crn": "crn:v1:public:kms:us-south:a/010101010:key:3a14ceaf-c679-455d-10101010",
                          "kms_private_endpoint": "your private end point URL",
                          "key_name": "rootk1"
                        },
                        "secondary_crk": null
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Reader`, `Writer` or `Manager` service access role in IAM for IBM Cloud Schematics. ",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "404": {
              "description": "Bad Request.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact IBM Cloud support.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example to update the KMS settings.",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl --location --request PUT https://schematics.cloud.ibm.com/v2/settings/kms?location=US --header \"Authorization: <access_token> \"—header “Content-Type: application/json \"  --data-raw \"{\"location\": \"your-location\", \"encryption_scheme\": \"byok or kyok\", \"resource_group\": \"Default\", \"primary_crk\": {\"kms_name\": \"Key Protect-xxx\",\"key_crn\": \"crn:v1:public:kms:us-south:a/010101010:key:3a14ceaf-c679-455d-10101010,\",\"kms_private_endpoint\": \"<your_private_endpoint_url>\"}}\""
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example to update the KMS settings.",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        ""
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example to update the KMS settings.",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        ""
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example to update the KMS settings.",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        ""
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example to update the KMS settings.",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        ""
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "/v1/workspaces": {
        "get": {
          "tags": [
            "workspaces"
          ],
          "summary": "List workspaces",
          "description": "Retrieve a list of Schematics workspaces from your IBM Cloud account that you have access to. The list of workspaces that is returned depends on the API endpoint that you use. For example, if you use an API endpoint for a geography, such as North America, only workspaces that are created in `us-south` or `us-east` are returned. \n\n For more information about supported API endpoints, see [API endpoints](/apidocs/schematics#api-endpoints).\n\n <h3>Authorization</h3> \n\n Schematics support generic authorization such as service access or platform access to the workspace ID and the resource group. For more information, about Schematics access and permissions, see [Schematics service access roles and required permissions](/docs/schematics?topic=schematics-access#access-roles).",
          "x-ibm-events": {
            "summary": "Auditing",
            "events": [
              {
                "name": "schematics.workspace.list"
              }
            ]
          },
          "operationId": "list_workspaces",
          "parameters": [
            {
              "description": "The position of the workspace in the list of workspaces, from which you want to start listing your workspaces. For example, if you have three workspaces in your account, the first workspace is assigned position number 0, the second workspace is assigned position number 1, and so forth. If you have 6 workspaces and you want to list the details for workspaces 2-6, enter 1. To limit the number of workspaces that is returned, use the `limit` option in addition to the `offset` option. Negative numbers are not supported and are ignored.",
              "name": "offset",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "description": "The maximum number of workspaces that you want to list. The number must be a positive integer between 1 and 2000. If no value is provided, 100 is used by default. ",
              "name": "limit",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully listed the workspaces that you have access to.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request.",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/WorkspaceResponseList"
                  },
                  "examples": {
                    "response": {
                      "value": {
                        "offset": 0,
                        "limit": 1,
                        "count": 6,
                        "workspaces": [
                          {
                            "id": "myworkspace-123456",
                            "name": "myworkspace",
                            "type": [
                              "terraform_v0.12"
                            ],
                            "description": "",
                            "tags": [],
                            "created_at": "2019-08-21T14:07:21.400337433Z",
                            "created_by": "user@ibm.com",
                            "status": "INACTIVE",
                            "workspace_status_msg": {
                              "status_code": "",
                              "status_msg": ""
                            },
                            "workspace_status": {
                              "frozen": false,
                              "locked": false
                            },
                            "template_repo": {
                              "url": "https://github.com/myorg/myrepo"
                            },
                            "template_data": [
                              {
                                "id": "f4b7ad74-a24c-4a",
                                "folder": ".",
                                "type": "terraform_v0.12",
                                "values_url": "<values_url>",
                                "values": "",
                                "values_metadata": [
                                  {
                                    "name": "variable",
                                    "type": "string"
                                  }
                                ],
                                "variablestore": [
                                  {
                                    "name": "variable",
                                    "secure": false,
                                    "value": "value",
                                    "type": "",
                                    "description": ""
                                  }
                                ]
                              }
                            ],
                            "runtime_data": [
                              {
                                "id": "f4b7ad74-a24c-4a",
                                "engine_name": "terraform",
                                "engine_version": "terraformv0.12.24",
                                "state_store_url": "<state_store_url>",
                                "log_store_url": "<log_store_url>"
                              }
                            ],
                            "shared_data": {
                              "resource_group_id": ""
                            },
                            "updated_at": "0001-01-01T00:00:00Z",
                            "last_health_check_at": "0001-01-01T00:00:00Z"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Viewer`, `Writer`, or `Manager` service access role in IAM for IBM Cloud Schematics. ",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact IBM Cloud support.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl -X GET https://schematics.cloud.ibm.com/v1/workspaces -H \"Authorization: <iam_token>\""
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "listWorkspacesOptions := schematicsService.NewListWorkspacesOptions()\n",
                        "\n",
                        "workspaceList, detailedResponse, err := schematicsService.ListWorkspaces(listWorkspacesOptions)\n",
                        "\n",
                        "if err != nil {\n",
                        "    panic(err)\n",
                        "}\n",
                        "\n",
                        "w, err := json.MarshalIndent(workspaceList, \"\", \"  \")\n",
                        "fmt.Println(string(w))"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "schematicsService.listWorkspaces({})\n",
                        "  .then(res => {\n",
                        "    console.log(JSON.stringify(res.result, null, 2));\n",
                        "  })\n",
                        "  .catch(err => {\n",
                        "    console.warn(err)\n",
                        "  });"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "workspace_response_list = schematics_service.list_workspaces().get_result()\n",
                        "\n",
                        "print(json.dumps(workspace_response_list, indent=2))"
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "ListWorkspacesOptions listWorkspacesOptions = new ListWorkspacesOptions.Builder()\n",
                        ".build();\n",
                        "\n",
                        "Response<WorkspaceResponseList> response = service.listWorkspaces(listWorkspacesOptions).execute();\n",
                        "WorkspaceResponseList workspaceResponseList = response.getResult();\n",
                        "\n",
                        "System.out.println(workspaceResponseList);"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        "post": {
          "tags": [
            "workspaces"
          ],
          "summary": "Create a workspace",
          "description": "Create an IBM Cloud Schematics workspace that points to the source repository where your Terraform template or the IBM Cloud software template is stored. You can decide to create your workspace without connecting it to a GitHub or GitLab repository. Your workspace is then created with a **Draft** state. To later connect your workspace to a GitHub or GitLab repository, you must use the `PUT /v1/workspaces/{id}` API to update the workspace or use the `/v1/workspaces/{id}/templates/{template_id}/template_repo_upload` API to upload a TAR file instead. \n\n **Getting API endpoint**: \n\n * The Schematics API endpoint that you use to create the workspace determines where your Schematics actions run and your data is stored. See [API endpoints](/apidocs/schematics#api-endpoints) for more information. \n * If you use the API endpoint for a geography and not a specific location, such as North America, you can specify the location in your API request body. \n * If you do not specify the location in the request body, Schematics determines your workspace location based on availability. \n * If you use an API endpoint for a specific location, such as Frankfurt, the location that you enter in your API request body must match your API endpoint. \n * You also have the option to not specify a location in your API request body if you use a location-specific API endpoint. \n\n **Getting IAM access token**: \n * Before you create Schematics workspace, you need to create the IAM access token for your IBM Cloud Account. \n * To create IAM access token, use `export IBMCLOUD_API_KEY=<ibmcloud_api_key>` and execute `curl -X POST \"https://iam.cloud.ibm.com/identity/token\" -H \"Content-Type: application/x-www-form-urlencoded\" -d \"grant_type=urn:ibm:params:oauth:grant-type:apikey&apikey=$IBMCLOUD_API_KEY\" -u bx:bx`. For more information, about creating IAM access token and API Docs, see [IAM access token](/apidocs/iam-identity-token-api#gettoken-password) and [Create API key](/apidocs/iam-identity-token-api#create-api-key). \n * You can set the environment values  `export ACCESS_TOKEN=<access_token>` and `export REFRESH_TOKEN=<refresh_token>`. \n * You can use the obtained IAM access token in create workspace `curl` command. \n\n <h3>Authorization</h3> \n\n Schematics support generic authorization such as service access or platform access to the workspace ID and the resource group. For more information, about Schematics access and permissions, see [Schematics service access roles and required permissions](/docs/schematics?topic=schematics-access#access-roles).",
          "x-ibm-events": {
            "summary": "Auditing",
            "events": [
              {
                "name": "schematics.workspace.create"
              }
            ]
          },
          "operationId": "create_workspace",
          "parameters": [
            {
              "description": "The IAM access token for your IBM Cloud account. To retrieve the token, you need to create the IAM access token for your IBM Cloud Account. For more information, about creating IAM access token, refer, [Get token password](/apidocs/iam-identity-token-api#gettoken-password).",
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The personal access token to authenticate with your private GitHub or GitLab repository and access your Terraform template.",
              "name": "X-Github-token",
              "in": "header",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceCreateRequest"
                }
              }
            },
            "description": "Input parameter to create the IBM Cloud Schematics workspace.",
            "required": true
          },
          "x-codegen-request-body-name": "workspace",
          "responses": {
            "201": {
              "description": "Successfully created the workspace in IBM Cloud Schematics. Your resources are not provisioned until you use the `POST /workspaces/{id}/apply` API.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/WorkspaceResponse"
                  },
                  "examples": {
                    "response": {
                      "value": {
                        "id": "us-east.workspace.testbranchReso.27ba56e9",
                        "name": "testbranchReso",
                        "crn": "crn:v1:staging:public:schematics:us-south:a/0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0:00000000-0000-0000-0000-00000000000:workspace:us-east.workspace.testbranchReso.27ba56e9",
                        "type": [
                          "terraform_v0.12"
                        ],
                        "description": "terraform workspace",
                        "resource_group": "",
                        "location": "us-east",
                        "tags": [
                          "test:bbbranch"
                        ],
                        "created_at": "2021-05-26T11:04:49.064163237Z",
                        "created_by": "schematics@ibm.com",
                        "status": "DRAFT",
                        "failure_reason": "",
                        "workspace_status_msg": {
                          "status_code": "",
                          "status_msg": ""
                        },
                        "workspace_status": {
                          "frozen": false,
                          "locked": false
                        },
                        "template_repo": {
                          "url": "https://github.com/IBM-Cloud/terraform-provider-ibm",
                          "branch": "master",
                          "full_url": "https://github.com/IBM-Cloud/terraform-provider-ibm/tree/master/examples/ibm-vsi",
                          "has_uploadedgitrepotar": false
                        },
                        "template_data": [
                          {
                            "id": "examples-99f04c50-71aa-40",
                            "folder": "examples/ibm-vsi",
                            "type": "terraform_v0.12",
                            "values_url": "https://schematics.cloud.ibm.com/v1/workspaces/us-east.workspace.testbranchReso.27ba56e9/template_data/examples-99f04c50-71aa-40/values",
                            "values": "",
                            "variablestore": [
                              {
                                "name": "ibmcloud_api_key",
                                "secure": true,
                                "value": "HNgCisusxaMEB8N-Ncs5iVM_96QQ2Ot5XOcEUQ_k0QpB",
                                "type": "string",
                                "description": ""
                              }
                            ],
                            "has_githubtoken": false
                          }
                        ],
                        "runtime_data": [
                          {
                            "id": "examples-99f04c50-71aa-40",
                            "engine_name": "terraform",
                            "engine_version": "v0.12.31",
                            "state_store_url": "https://schematics.cloud.ibm.com/v1/workspaces/us-east.workspace.testbranchReso.27ba56e9/runtime_data/examples-99f04c50-71aa-40/state_store",
                            "log_store_url": "https://schematics.cloud.ibm.com/v1/workspaces/us-east.workspace.testbranchReso.27ba56e9/runtime_data/examples-99f04c50-71aa-40/log_store"
                          }
                        ],
                        "shared_data": {
                          "resource_group_id": ""
                        },
                        "applied_shareddata_ids": null,
                        "updated_at": "0001-01-01T00:00:00Z",
                        "last_health_check_at": "0001-01-01T00:00:00Z",
                        "cart_id": ""
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad request. Verify that the information in your request body is complete and correctly formatted in JSON.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request.",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Writer` or `Manager` service access role in IAM for IBM Cloud Schematics.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "404": {
              "description": "The workspace already exists. To find a list of workspaces, use the `GET /workspaces` API.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "409": {
              "description": "The workspace is frozen and disabled for create. Unfreeze the workspace first before you try to create the workspace. Or the Schematics create, update, delete action has not completed. Wait until the create, update, delete, plan, apply, destroy or refresh action completes before you try again. ",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "429": {
              "description": "Too many requests have been made within a time window. \"IBM Cloud Schematics supports 50 API requests per minute, per host, and per customer. The host can be `us-east`, `us-south`, `eu-gb`, or `eu-de` region\". Wait before calling the API again.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "503": {
              "description": "IBM Cloud Schematics could not process the request, due to a temporary overloading or maintenance. Try to reduce your request rate, or retry after a few minutes. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request to create a workspace with a link to a GitHub repository",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl --request POST --url https://schematics.cloud.ibm.com/v1/workspaces -H \"Authorization: Bearer <access_token>\" -d '{\"name\": \"<workspace_name>\",\"type\": [\"terraform_v0.12\"],\"location\": \"<location>\",\"description\": \"terraform workspace\",\"tags\": [\"test:bbbranch\"],\"template_repo\": {\"url\": \"<source_repo_url>\"},\"template_data\": [{\"folder\": \".\",\"type\": \"terraform_v0.12\",\"variablestore\": [{\"value\": \"variable_value1\",\"name\": \"ibmcloud_api_key\",\"type\": \"string\",\"secure\": true}],\"env_values\":[{\"TF_LOG\":\"debug\"}]}]}'"
                      ]
                    }
                  ]
                },
                {
                  "name": "Example request to create a workspace without a GitHub repository URL to upload a TAR file later",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl --request POST --url https://schematics.cloud.ibm.com/v1/workspaces -H \"Authorization: Bearer <access_token>\" -d '{\"name\":\"<workspace_name>\",\"type\": [\"terraform_v0.12\"],\"location\": \"<location>\",\"description\": \"<workspace_description>\",\"resource_group\": \"<resource_group_ID>\",\"tags\": [],\"template_repo\": {\"url\": \"\"},\"template_data\": [{\"folder\": \".\",\"type\": \"terraform_v0.12\",\"variablestore\": [{\"name\": \"variable_name1\",\"value\": \"variable_value1\"},{\"name\": \"variable_name2\",\"value\": \"variable_value2\"}]}]}'"
                      ]
                    }
                  ]
                },
                {
                  "name": "Example request to create a workspace with an environment variables",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl --request POST --url https://schematics.cloud.ibm.com/v1/workspaces -H \"Authorization: Bearer <access_token>\" -d '{\"name\":\"<workspace_name>\",\"type\": [\"terraform_v0.12\"],\"description\": \"<workspace_description>\",\"tags\": [],\"template_repo\": {\"url\": \"<source_repo_url>\"},\"template_data\": [{\"folder\": \".\",\"type\": \"terraform_v0.12\",\"env_values\":[{\"GIT_PASSWORD\":\"<yourtoken>\"},{\"GIT_ASKPASS\":\"<your_script_to_execute>\"}]}]}'"
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "templateSourceDataRequestModel := &schematicsv1.TemplateSourceDataRequest{\n",
                        "    Folder: core.StringPtr(\".\"),\n",
                        "    Type:   core.StringPtr(\"terraform_v0.12.20\"),\n",
                        "    Variablestore: []schematicsv1.WorkspaceVariableRequest{\n",
                        "        {\n",
                        "            Name:  core.StringPtr(\"<variable_name1>\"),\n",
                        "            Value: core.StringPtr(\"<variable_value1>\"),\n",
                        "        },\n",
                        "        {\n",
                        "            Name:  core.StringPtr(\"<variable_name2>\"),\n",
                        "            Value: core.StringPtr(\"<variable_value2>\"),\n",
                        "        },\n",
                        "    },\n",
                        "}\n",
                        "\n",
                        "templateRepoRequestModel := &schematicsv1.TemplateRepoRequest{\n",
                        "    URL: core.StringPtr(\"<source_repo_url>\"),\n",
                        "}\n",
                        "\n",
                        "createWorkspaceOptions := &schematicsv1.CreateWorkspaceOptions{\n",
                        "    Description:   core.StringPtr(\"<description>\"),\n",
                        "    Name:          core.StringPtr(\"<workspace_name>\"),\n",
                        "    TemplateData:  []schematicsv1.TemplateSourceDataRequest{*templateSourceDataRequestModel},\n",
                        "    TemplateRepo:  templateRepoRequestModel,\n",
                        "    Type:          []string{\"terraform_v0.12.20\"},\n",
                        "    Location:      core.StringPtr(\"<location>\"),\n",
                        "    ResourceGroup: core.StringPtr(\"<resource_group>\"),\n",
                        "    Tags:          []string{\"<tags>\"},\n",
                        "}\n",
                        "\n",
                        "workspaceResponse, detailedResponse, err := schematicsService.CreateWorkspace(createWorkspaceOptions)\n",
                        "\n",
                        "if err != nil {\n",
                        "    panic(err)\n",
                        "}\n",
                        "\n",
                        "w, err := json.MarshalIndent(workspaceResponse, \"\", \"  \")\n",
                        "fmt.Println(string(w))\n",
                        ""
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "const templateSourceDataRequestModel = {\n",
                        "  folder: '.',\n",
                        "  type: 'terraform_v0.12.20',\n",
                        "  variablestore: [\n",
                        "    {\n",
                        "      name: '<variable_name1>',\n",
                        "      value: '<variable_value1>',\n",
                        "    },\n",
                        "    {\n",
                        "      name: '<variable_name2>',\n",
                        "      value: '<variable_value2>',\n",
                        "    }\n",
                        "  ]\n",
                        "};\n",
                        "\n",
                        "const templateRepoRequestModel = {\n",
                        "  url: '<source_repo_url>,\n",
                        "};\n",
                        "\n",
                        "const params = {\n",
                        "  description: '<description>',\n",
                        "  name: '<workspace_name>',\n",
                        "  templateData: [templateSourceDataRequestModel],\n",
                        "  templateRepo: templateRepoRequestModel,\n",
                        "  type: ['terraform_v0.12.20'],\n",
                        "  location: '<location>',\n",
                        "  resourceGroup: '<resource_group>'\n",
                        "  tags: ['<tags>'],\n",
                        "};\n",
                        "\n",
                        "schematicsService.createWorkspace(params)\n",
                        "  .then(res => {\n",
                        "    console.log(JSON.stringify(res.result, null, 2));\n",
                        "  })\n",
                        "  .catch(err => {\n",
                        "    console.warn(err)\n",
                        "  });"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "workspace_variable_request_model = {}\n",
                        "workspace_variable_request_model['name'] = 'variable_name1'\n",
                        "workspace_variable_request_model['value'] = 'variable_value1'\n",
                        "\n",
                        "template_source_data_request_model = {}\n",
                        "template_source_data_request_model['env_values'] = [{ 'foo': 'bar' }]\n",
                        "template_source_data_request_model['folder'] = 'testString'\n",
                        "template_source_data_request_model['type'] = 'testString'\n",
                        "template_source_data_request_model['variablestore'] = [workspace_variable_request_model]\n",
                        "\n",
                        "template_repo_request_model = {}\n",
                        "template_repo_request_model['url'] = '<source_repo_url>'\n",
                        "\n",
                        "\n",
                        "workspace_response = schematics_service.create_workspace(\n",
                        "    description=\"<description>\", \n",
                        "    name=\"<workspace_name>\",\n",
                        "    template_data=[template_source_data_request_model],\n",
                        "    template_repo=template_repo_request_model,\n",
                        "    type=['terraform_v0.12.20'],\n",
                        "    location=\"<location>\",\n",
                        "    resource_group=\"<resource_group>\",\n",
                        "    tags=['<tags>'],\n",
                        ").get_result()\n",
                        "\n",
                        "print(json.dumps(workspace_response, indent = 2))"
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "// Construct an instance of the WorkspaceVariableRequest model\n",
                        "WorkspaceVariableRequest workspaceVariableRequestModel = new WorkspaceVariableRequest.Builder()\n",
                        ".name(\"variable_name1\")\n",
                        ".value(\"variable_value1\")\n",
                        ".build();\n",
                        "\n",
                        "// Construct an instance of the TemplateSourceDataRequest model\n",
                        "TemplateSourceDataRequest templateSourceDataRequestModel = new TemplateSourceDataRequest.Builder()\n",
                        ".folder(\".\")\n",
                        ".type(\"terraform_v0.12.20\")\n",
                        ".variablestore(new java.util.ArrayList<WorkspaceVariableRequest>(java.util.Arrays.asList(workspaceVariableRequestModel)))\n",
                        ".build();\n",
                        "\n",
                        "// Construct an instance of the TemplateRepoRequest model\n",
                        "TemplateRepoRequest templateRepoRequestModel = new TemplateRepoRequest.Builder()\n",
                        ".url(\"<source_repo_url>\")\n",
                        ".build();\n",
                        "\n",
                        "CreateWorkspaceOptions createWorkspaceOptions = new CreateWorkspaceOptions.Builder()\n",
                        ".description(\"<description>\")\n",
                        ".name(\"<workspace_name>\")\n",
                        ".templateData(new java.util.ArrayList<TemplateSourceDataRequest>(java.util.Arrays.asList(templateSourceDataRequestModel)))\n",
                        ".templateRepo(templateRepoRequestModel)\n",
                        ".type(new java.util.ArrayList<String>(java.util.Arrays.asList(\"terraform_v0.12.20\")))\n",
                        ".location(\"<location>\")\n",
                        ".resourceGroup(\"<resource_group>\")\n",
                        ".tags(new java.util.ArrayList<String>(java.util.Arrays.asList(\"<tags>\")))\n",
                        ".build();\n",
                        "\n",
                        "Response<WorkspaceResponse> response = service.createWorkspace(createWorkspaceOptions).execute();\n",
                        "WorkspaceResponse workspaceResponse = response.getResult();\n",
                        "\n",
                        "System.out.println(workspaceResponse);"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "/v1/workspaces/{w_id}": {
        "get": {
          "tags": [
            "workspaces"
          ],
          "summary": "Get workspace details",
          "description": " Retrieve detailed information for a workspace in your IBM Cloud account. \n\n <h3>Authorization</h3> \n\n Schematics support generic authorization such as service access or platform access to the workspace ID and the resource group. For more information, about Schematics access and permissions, see [Schematics service access roles and required permissions](/docs/schematics?topic=schematics-access#access-roles). ",
          "x-ibm-events": {
            "summary": "Auditing",
            "events": [
              {
                "name": "schematics.workspace.read"
              }
            ]
          },
          "operationId": "get_workspace",
          "parameters": [
            {
              "description": "The ID of the workspace for which you want to retrieve detailed information. To find the workspace ID, use the `GET /v1/workspaces` API. ",
              "name": "w_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully retrieved details about your workspace.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/WorkspaceResponse"
                  },
                  "examples": {
                    "response": {
                      "value": {
                        "id": "us-east.workspace.testbranchReso.27ba56e9",
                        "name": "testbranchReso",
                        "crn": "crn:v1:staging:public:schematics:us-south:a/0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0:00000000-0000-0000-0000-00000000000:workspace:us-east.workspace.testbranchReso.27ba56e9",
                        "type": [
                          "terraform_v0.12"
                        ],
                        "description": "terraform workspace",
                        "resource_group": "",
                        "location": "us-east",
                        "tags": [
                          "test:bbbranch"
                        ],
                        "created_at": "2021-05-26T11:04:49.064163237Z",
                        "created_by": "schematics@ibm.com",
                        "status": "INACTIVE",
                        "failure_reason": "",
                        "workspace_status_msg": {
                          "status_code": "200",
                          "status_msg": ""
                        },
                        "workspace_status": {
                          "frozen": false,
                          "locked": false
                        },
                        "template_repo": {
                          "url": "https://github.com/IBM-Cloud/terraform-provider-ibm",
                          "branch": "master",
                          "full_url": "https://github.com/IBM-Cloud/terraform-provider-ibm/tree/master/examples/ibm-vsi",
                          "has_uploadedgitrepotar": false
                        },
                        "template_data": [
                          {
                            "id": "examples-99f04c50-71aa-40",
                            "folder": "examples/ibm-vsi",
                            "type": "terraform_v0.12",
                            "values_url": "https://schematics.cloud.ibm.com/v1/workspaces/us-east.workspace.testbranchReso.27ba56e9/template_data/examples-99f04c50-71aa-40/values",
                            "values": "",
                            "values_metadata": [
                              {
                                "description": "Enter your IBM Infrastructure (SoftLayer) full username, you can get this using: https://control.bluemix.net/account/user/profile",
                                "name": "softlayer_username",
                                "type": "string"
                              },
                              {
                                "description": "Enter your IBM Infrastructure (SoftLayer) API key, you can get this using: https://control.bluemix.net/account/user/profile",
                                "name": "softlayer_api_key",
                                "type": "string"
                              },
                              {
                                "description": "Enter your IBM Cloud API Key, you can get your IBM Cloud API key using: https://cloud.ibm.com/iam#/apikeys",
                                "name": "ibmcloud_api_key",
                                "type": "string"
                              }
                            ],
                            "variablestore": [
                              {
                                "name": "ibmcloud_api_key",
                                "secure": true,
                                "value": "$SCHEMATICSSECRET$01$.12345678901234567890123456789012.5e341b53f714cf1427ff8d2d.38f4aed4ecf63abaf3b60ba88d687322d70060e7c201129d4379e6e3e11240b05270f8eb8012de4cfef8930e8ea853ef0889286e270815d624752e8a",
                                "type": "string",
                                "description": ""
                              }
                            ],
                            "env_values": [
                              {
                                "name": "TF_LOG",
                                "value": "debug",
                                "secure": false,
                                "hidden": false
                              }
                            ],
                            "has_githubtoken": false
                          }
                        ],
                        "runtime_data": [
                          {
                            "id": "examples-99f04c50-71aa-40",
                            "engine_name": "terraform",
                            "engine_version": "v0.12.31",
                            "state_store_url": "https://schematics.cloud.ibm.com/v1/workspaces/us-east.workspace.testbranchReso.27ba56e9/runtime_data/examples-99f04c50-71aa-40/state_store",
                            "log_store_url": "https://schematics.cloud.ibm.com/v1/workspaces/us-east.workspace.testbranchReso.27ba56e9/runtime_data/examples-99f04c50-71aa-40/log_store"
                          }
                        ],
                        "shared_data": {
                          "resource_group_id": ""
                        },
                        "applied_shareddata_ids": null,
                        "updated_at": "0001-01-01T00:00:00Z",
                        "last_health_check_at": "0001-01-01T00:00:00Z",
                        "cart_id": ""
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Viewer`, `Writer`, or `Manager` service access role in IAM for IBM Cloud Schematics.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "404": {
              "description": "Not found. The specified workspace could not be found. Verify that the workspace ID is correct. To list workspaces in your IBM Cloud account, use the `GET /v1/workspace` API.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact IBM Cloud support.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl -X GET https://schematics.cloud.ibm.com/v1/workspaces/{id} -H \"Authorization: Bearer <iam_token>\""
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "workspaceDetails, detailedResponse, err := schematicsService.GetWorkspace(&schematicsv1.GetWorkspaceOptions{\n",
                        "    WID: <workspace_id>,\n",
                        "})\n",
                        "\n",
                        "if err != nil {\n",
                        "    panic(err)\n",
                        "}\n",
                        "\n",
                        "w, err := json.MarshalIndent(workspaceDetails, \"\", \"  \")\n",
                        "fmt.Println(string(w))"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "const params = {\n",
                        "  wId: '<workspace_id>',\n",
                        "};\n",
                        "\n",
                        "schematicsService.getWorkspace(params)\n",
                        "  .then(res => {\n",
                        "    console.log(JSON.stringify(res.result, null, 2));\n",
                        "  })\n",
                        "  .catch(err => {\n",
                        "    console.warn(err)\n",
                        "  });"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "workspace_response = schematics_service.get_workspace(\n",
                        "    w_id='<workspace_id>'\n",
                        ").get_result()\n",
                        "\n",
                        "print(json.dumps(workspace_response, indent=2))"
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "GetWorkspaceOptions getWorkspaceOptions = new GetWorkspaceOptions.Builder()\n",
                        ".wId(\"<workspace_id>\")\n",
                        ".build();\n",
                        "\n",
                        "Response<WorkspaceResponse> response = service.getWorkspace(getWorkspaceOptions).execute();\n",
                        "WorkspaceResponse workspaceResponse = response.getResult();\n",
                        "\n",
                        "System.out.println(workspaceResponse);"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        "patch": {
          "tags": [
            "workspaces"
          ],
          "summary": "Update workspace metadata",
          "description": "Use this API to update the following workspace metadata: \n\n * Workspace name (`name`) - **Note**: Updating the workspace name does not update the ID of the workspace. \n * Workspace description (`description`) \n * Tags (`tags[]`) \n * Resource group (`resource_group`) \n * Workspace status (`workspace_status.frozen`) \n\n\n **Tip**: If you want to update information about the Terraform template or IBM Cloud catalog software template that your workspace points to, use the `PUT /v1/workspaces/{id}` API. To update workspace variables, use the `PUT /v1/workspaces/{id}/template_data/{template_id}/values` API.\n\n <h3>Authorization</h3> \n\n Schematics support generic authorization such as service access or platform access to the workspace ID and the resource group. For more information, about Schematics access and permissions, see [Schematics service access roles and required permissions](/docs/schematics?topic=schematics-access#access-roles).",
          "x-ibm-events": {
            "summary": "Auditing",
            "events": [
              {
                "name": "schematics.workspace.update"
              }
            ]
          },
          "operationId": "update_workspace",
          "parameters": [
            {
              "description": "The ID of the workspace that you want to update. To find the ID, use the `GET /v1/workspaces` API.",
              "name": "w_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceUpdateRequest"
                }
              }
            },
            "description": "Input parameters to update workspace metadata.",
            "required": true
          },
          "x-codegen-request-body-name": "workspace",
          "responses": {
            "200": {
              "description": "Successfully updated the workspace metadata.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/WorkspaceResponse"
                  },
                  "examples": {
                    "response": {
                      "value": {
                        "id": "myworkspace-123456",
                        "name": "myworkspace",
                        "type": [
                          "terraform_v0.12"
                        ],
                        "description": "This is a workspace created with the API",
                        "resource_group": "a1b23aa11bb22cc55",
                        "location": "eu-de",
                        "tags": [],
                        "created_at": "2019-11-06T16:19:32.352418401Z",
                        "created_by": "user@us.ibm.com",
                        "status": "INACTIVE",
                        "workspace_status_msg": {
                          "status_code": "",
                          "status_msg": ""
                        },
                        "workspace_status": {
                          "frozen": false,
                          "locked": false
                        },
                        "template_repo": {
                          "url": "https://github.com/myorg/myrepo"
                        },
                        "template_data": [
                          {
                            "id": "d1369548-1bc2-4d",
                            "folder": ".",
                            "type": "terraform_v0.12",
                            "values_url": "https://schematics.cloud.ibm.com/v1/workspaces/myworkspace-123456/template_data/a123456b/values",
                            "values": "",
                            "values_metadata": [
                              {
                                "name": "variable1",
                                "type": "value1"
                              },
                              {
                                "name": "variable2",
                                "type": "value2"
                              }
                            ],
                            "variablestore": [
                              {
                                "name": "variable1",
                                "secure": false,
                                "value": "value1",
                                "type": "",
                                "description": ""
                              },
                              {
                                "name": "variable2",
                                "secure": false,
                                "value": "value2",
                                "type": "",
                                "description": ""
                              }
                            ]
                          }
                        ],
                        "runtime_data": [
                          {
                            "id": "a123456b",
                            "engine_name": "terraform",
                            "engine_version": "v0.12.24",
                            "state_store_url": "https://schematics.cloud.ibm.com/v1/workspaces/myworkspace-123456/runtime_data/a123456b/state_store",
                            "log_store_url": "https://schematics.cloud.ibm.com/v1/workspaces/myworkspace-123456/runtime_data/a123456b/log_store"
                          }
                        ],
                        "shared_data": {
                          "resource_group_id": ""
                        },
                        "updated_at": "0001-01-01T00:00:00Z",
                        "last_health_check_at": "0001-01-01T00:00:00Z"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Writer` or `Manager` service access role in IAM for IBM Cloud Schematics.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "404": {
              "description": "The specified workspace could not be found. Verify that you entered the correct workspace ID. To find the ID of a workspace, use the `GET /v1/workspaces` API.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "409": {
              "description": "The workspace is frozen and disabled for update. Unfreeze the workspace first before you try to update the workspace. Or the Schematics create, update, delete action has not completed. Wait until the create, update, delete, plan, apply, destroy or refresh action completes before you try again.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "429": {
              "description": "Too many requests have been made within a time window. IBM Cloud Schematics supports 50 API requests per minute, per host, and per customer. The host can be `us-east`, `us-south`, `eu-gb`, or `eu-de` region. Wait before calling the API again.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "503": {
              "description": "IBM Cloud Schematics could not process the request, due to a temporary overloading or maintenance. Try to reduce your request rate, or retry after a few minutes. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl --request PATCH --url https://schematics.cloud.ibm.com/v1/workspaces/{id} -H \"Authorization: <iam_token>\" -d '{\"name\":\"<workspace_name>\",\"description\": \"<workspace_description>\",\"tags\": [\"<tag1>\", \"<tag2>\"], \"resource_group\": \"<resource_grou>\", \"workspace_status\": {\"frozen\": <true_or_false>}}'"
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "updateWorkspaceOptions := &schematicsv1.UpdateWorkspaceOptions{\n",
                        "    WID: <workspace_id>,\n",
                        "    Description:   core.StringPtr(\"<description>\"),\n",
                        "    Name:          core.StringPtr(\"<workspace_name>\"),\n",
                        "    ResourceGroup: core.StringPtr(\"<resource_group>\"),\n",
                        "    Tags:          []string{\"<tag1>\", \"<tag2>\"},\n",
                        "    WorkspaceStatus: &schematicsv1.WorkspaceStatusUpdateRequest {\n",
                        "        Frozen: core.BoolPtr(<true_or_false>),\n",
                        "    },\n",
                        "}\n",
                        "\n",
                        "workspaceUpdateResponse, detailedResponse, err := schematicsService.UpdateWorkspace(updateWorkspaceOptions)\n",
                        "\n",
                        "if err != nil {\n",
                        "    panic(err)\n",
                        "}\n",
                        "\n",
                        "w, err := json.MarshalIndent(workspaceUpdateResponse, \"\", \"  \")\n",
                        "fmt.Println(string(w))"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "const workspaceStatusUpdateRequestModel = {\n",
                        "  frozen : '<true or false>'\n",
                        "}\n",
                        "\n",
                        "const params = {\n",
                        "  wId: '<workspace_id>',\n",
                        "  description: '<description>',\n",
                        "  name: '<workspace_name>',\n",
                        "  type: ['terraform_v0.12.20'],\n",
                        "  resourceGroup: '<resource_group>',\n",
                        "  tags: ['<tags>'],\n",
                        "  workspaceStatus: workspaceStatusUpdateRequestModel\n",
                        "};\n",
                        "\n",
                        "schematicsService.updateWorkspace(params)\n",
                        "  .then(res => {\n",
                        "    console.log(JSON.stringify(res.result, null, 2));\n",
                        "  })\n",
                        "  .catch(err => {\n",
                        "    console.warn(err)\n",
                        "  });"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "workspace_status_update_request_model = {}\n",
                        "workspace_status_update_request_model['frozen'] = <True or False>\n",
                        "\n",
                        "workspace_response = schematics_service.update_workspace(\n",
                        "    w_id='<workspace_id>',\n",
                        "    description=\"<description>\", \n",
                        "    name=\"<workspace_name>\",\n",
                        "    resource_group=\"<resource_group>\",\n",
                        "    tags=['<tag1>', '<tag2>'],\n",
                        "    workspace_status=workspace_status_update_request_model\n",
                        ").get_result()\n",
                        "\n",
                        "print(json.dumps(workspace_response, indent=2))"
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "WorkspaceStatusUpdateRequest workspaceStatusUpdateRequestModel = new WorkspaceStatusUpdateRequest.Builder()\n",
                        ".frozen(<true_or_false>)\n",
                        ".build();\n",
                        "\n",
                        "UpdateWorkspaceOptions updateWorkspaceOptions = new UpdateWorkspaceOptions.Builder()\n",
                        ".wId(\"testString\")\n",
                        ".description(\"<description>\")\n",
                        ".name(\"<workspace_name>\")\n",
                        ".tags(new java.util.ArrayList<String>(java.util.Arrays.asList(\"<tag>\")))\n",
                        ".workspaceStatus(workspaceStatusUpdateRequestModel)\n",
                        ".build();\n",
                        "\n",
                        "Response<WorkspaceResponse> response = service.updateWorkspace(updateWorkspaceOptions).execute();\n",
                        "WorkspaceResponse workspaceResponse = response.getResult();\n",
                        "\n",
                        "System.out.println(workspaceResponse);"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        "put": {
          "tags": [
            "workspaces"
          ],
          "summary": "Update workspace",
          "description": "Use this API to update or replace the entire workspace, including the Terraform template (`template_repo`) or IBM Cloud catalog software template (`catalog_ref`) that your workspace points to.  \n\n\n **Tip**: If you want to update workspace metadata, use the `PATCH /v1/workspaces/{id}` API. To update workspace variables, use the `PUT /v1/workspaces/{id}/template_data/{template_id}/values` API. \n\n <h3>Authorization</h3> \n\n Schematics support generic authorization such as service access or platform access to the workspace ID and the resource group. For more information, about Schematics access and permissions, see [Schematics service access roles and required permissions](/docs/schematics?topic=schematics-access#access-roles).",
          "x-ibm-events": {
            "summary": "Auditing",
            "events": [
              {
                "name": "schematics.workspace.update"
              }
            ]
          },
          "operationId": "replace_workspace",
          "parameters": [
            {
              "description": "The ID of the workspace that you want to update. To find the ID, use the `GET /v1/workspaces` API.",
              "name": "w_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceUpdateRequest"
                }
              }
            },
            "description": "Workspace",
            "required": true
          },
          "x-codegen-request-body-name": "workspace",
          "responses": {
            "200": {
              "description": "Successfully updated the workspace metadata.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/WorkspaceResponse"
                  },
                  "examples": {
                    "response": {
                      "value": {
                        "id": "myworkspace-123456",
                        "name": "myworkspace",
                        "type": [
                          "terraform_v0.12"
                        ],
                        "description": "This is a workspace created with the API",
                        "resource_group": "a1b23aa11bb22cc55",
                        "location": "eu-de",
                        "tags": [],
                        "created_at": "2019-11-06T16:19:32.352418401Z",
                        "created_by": "user@us.ibm.com",
                        "status": "INACTIVE",
                        "workspace_status_msg": {
                          "status_code": "",
                          "status_msg": ""
                        },
                        "workspace_status": {
                          "frozen": false,
                          "locked": false
                        },
                        "template_repo": {
                          "url": "https://github.com/myorg/myrepo"
                        },
                        "template_data": [
                          {
                            "id": "d1369548-1bc2-4d",
                            "folder": ".",
                            "type": "terraform_v0.12",
                            "values_url": "https://schematics.cloud.ibm.com/v1/workspaces/myworkspace-123456/template_data/a123456b/values",
                            "values": "",
                            "values_metadata": [
                              {
                                "name": "variable1",
                                "type": "value1"
                              },
                              {
                                "name": "variable2",
                                "type": "value2"
                              }
                            ],
                            "variablestore": [
                              {
                                "name": "variable1",
                                "secure": false,
                                "value": "value1",
                                "type": "",
                                "description": ""
                              },
                              {
                                "name": "variable2",
                                "secure": false,
                                "value": "value2",
                                "type": "",
                                "description": ""
                              }
                            ]
                          }
                        ],
                        "runtime_data": [
                          {
                            "id": "a123456b",
                            "engine_name": "terraform",
                            "engine_version": "v0.12.24",
                            "state_store_url": "https://schematics.cloud.ibm.com/v1/workspaces/myworkspace-123456/runtime_data/a123456b/state_store",
                            "log_store_url": "https://schematics.cloud.ibm.com/v1/workspaces/myworkspace-123456/runtime_data/a123456b/log_store"
                          }
                        ],
                        "shared_data": {
                          "resource_group_id": ""
                        },
                        "updated_at": "0001-01-01T00:00:00Z",
                        "last_health_check_at": "0001-01-01T00:00:00Z"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Writer` or `Manager` service access role in IAM for IBM Cloud Schematics.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "404": {
              "description": "The specified workspace could not be found. Verify that you entered the correct workspace ID. To find the ID of a workspace, use the `GET /v1/workspaces` API.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "409": {
              "description": "Could not update the workspace template information. The workspace is frozen and disabled for updates. Unfreeze the workspace first, before you try again. Or the Schematics create, update, delete action has not completed. Wait until the create, update, delete, plan, apply, destroy or refresh action completes before you try again.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "429": {
              "description": "Too many requests have been made within a time window. IBM Cloud Schematics supports 50 API requests per minute, per host, and per customer. The host can be `us-east`, `us-south`, `eu-gb`, or `eu-de` region. Wait before calling the API again.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "503": {
              "description": "IBM Cloud Schematics could not process the request, due to a temporary overloading or maintenance. Try to reduce your request rate, or retry after a few minutes. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl --request PUT --url https://schematics.cloud.ibm.com/v1/workspaces/{id} -H \"Authorization: <iam_token>\" -d '{\"template_repo\": { \"url\": \"<source_repo_url>\", \"repo_url\": \"<catalog_repo_url>\"}, \"catalog_ref\": {\"item_id\": \"<item_ID>\", \"item_name\": \"<item_name>\", \"item_url\": \"<item_url>\", \"item_readme_url\": \"<item_readme_url>\", \"item_icon_url\": \"<item_icon_url>\", \"offering_version\": \"<offering_version>\", \"launch_url\": \"<launch_url>\"}}'"
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "templateRepoRequestUpdateModel := &schematicsv1.TemplateRepoUpdateRequest{\n",
                        "    URL: core.StringPtr(\"<source_repo_url>\"),\n",
                        "    RepoURL: core.StringPtr(\"<catalog_repo_url>\"),\n",
                        "}\n",
                        "\n",
                        "replaceWorkspaceOptions := &schematicsv1.ReplaceWorkspaceOptions{\n",
                        "    WID:          ws.ID,\n",
                        "    TemplateRepo: templateRepoRequestUpdateModel,\n",
                        "    CatalogRef: &schematicsv1.CatalogRef{\n",
                        "        ItemID:          core.StringPtr(\"<item_id>\"),\n",
                        "        ItemName:        core.StringPtr(\"<item_name>\"),\n",
                        "        ItemURL:         core.StringPtr(\"<item_url>\"),\n",
                        "        ItemReadmeURL:   core.StringPtr(\"<item_readme_url>\"),\n",
                        "        ItemIconURL:     core.StringPtr(\"<item_icon_url>\"),\n",
                        "        OfferingVersion: core.StringPtr(\"<offering_version>\"),\n",
                        "        LaunchURL:       core.StringPtr(\"<launch_url>\"),\n",
                        "    },\n",
                        "}\n",
                        "\n",
                        "replaceResponse, detailedResponse, err := schematicsService.ReplaceWorkspace(replaceWorkspaceOptions)\n",
                        "\n",
                        "if err != nil {\n",
                        "    panic(err)\n",
                        "}\n",
                        "\n",
                        "w, err := json.MarshalIndent(replaceResponse, \"\", \"  \")\n",
                        "fmt.Println(string(w))"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "const catalogRefModel = {\n",
                        "  item_icon_url: '<item_icon_url>',\n",
                        "  item_id: '<item_id>',\n",
                        "  item_name: '<item_name>',\n",
                        "  item_readme_url: '<item_readme_url>',\n",
                        "  item_url: '<item_url>',\n",
                        "  launch_url: '<launch_url>',\n",
                        "  offering_version: '<offering_version>',\n",
                        "};\n",
                        "\n",
                        "const templateRepoUpdateRequestModel = {\n",
                        "  repo_url: '<catalog_repo_url>',\n",
                        "  url: '<source_repo_url>',\n",
                        "};\n",
                        "\n",
                        "const params = {\n",
                        "  wId: '<workspace_id>',\n",
                        "  templateRepo: templateRepoUpdateRequestModel,\n",
                        "  catalogRef: catalogRefModel\n",
                        "};\n",
                        "\n",
                        "schematicsService.replaceWorkspace(params)\n",
                        "  .then(res => {\n",
                        "    console.log(JSON.stringify(res.result, null, 2));\n",
                        "  })\n",
                        "  .catch(err => {\n",
                        "    console.warn(err)\n",
                        "  });"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "catalog_ref_model = {}\n",
                        "catalog_ref_model['item_icon_url'] = '<item_icon_url>'\n",
                        "catalog_ref_model['item_id'] = '<item_id>'\n",
                        "catalog_ref_model['item_name'] = '<item_name>'\n",
                        "catalog_ref_model['item_readme_url'] = '<item_readme_url>'\n",
                        "catalog_ref_model['item_url'] = '<item_url>'\n",
                        "catalog_ref_model['launch_url'] = '<launch_url>'\n",
                        "catalog_ref_model['offering_version'] = '<offering_version>'\n",
                        "\n",
                        "workspace_variable_request_model = {}\n",
                        "workspace_variable_request_model['name'] = 'variable_name1'\n",
                        "workspace_variable_request_model['value'] = 'variable_value1'\n",
                        "\n",
                        "template_source_data_request_model = {}\n",
                        "template_source_data_request_model['variablestore'] = [workspace_variable_request_model]\n",
                        "\n",
                        "template_repo_request_model = {}\n",
                        "template_repo_request_model['url'] = '<source_repo_url>'\n",
                        "\n",
                        "workspace_response = schematics_service.replace_workspace(\n",
                        "    w_id='<workspace_id>',\n",
                        "    description=\"<description>\", \n",
                        "    name=\"<workspace_name>\",\n",
                        "    catalog_ref=catalog_ref_model,\n",
                        "    template_data=[template_source_data_request_model],\n",
                        "    template_repo=template_repo_request_model,\n",
                        "    type=['terraform_v0.12.20'],\n",
                        "    location=\"<location>\",\n",
                        "    resource_group=\"<resource_group>\",\n",
                        "    tags=['<tags>'],\n",
                        ").get_result()\n",
                        "\n",
                        "print(json.dumps(workspace_response, indent = 2))"
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "// Construct an instance of the CatalogRef model\n",
                        "CatalogRef catalogRefModel = new CatalogRef.Builder()\n",
                        ".itemIconUrl(\"<item_icon_url>\")\n",
                        ".itemId(\"<item_id>\")\n",
                        ".itemName(\"<item_name>\")\n",
                        ".itemReadmeUrl(\"<item_readme_url>\")\n",
                        ".itemUrl(\"<item_url>\")\n",
                        ".launchUrl(\"<launch_url>\")\n",
                        ".offeringVersion(\"<offering_version>\")\n",
                        ".build();\n",
                        "\n",
                        "// Construct an instance of the TemplateRepoUpdateRequest model\n",
                        "TemplateRepoUpdateRequest templateRepoUpdateRequestModel = new TemplateRepoUpdateRequest.Builder()\n",
                        ".repoUrl(\"<catalog_repo_url>\")\n",
                        ".url(\"<source_repo_url>\")\n",
                        ".build();\n",
                        "\n",
                        "ReplaceWorkspaceOptions replaceWorkspaceOptions = new ReplaceWorkspaceOptions.Builder()\n",
                        ".wId(\"<workspace_id>\")\n",
                        ".catalogRef(catalogRefModel)\n",
                        ".templateRepo(templateRepoUpdateRequestModel)\n",
                        ".build();\n",
                        "\n",
                        "Response<WorkspaceResponse> response = service.replaceWorkspace(replaceWorkspaceOptions).execute();\n",
                        "WorkspaceResponse workspaceResponse = response.getResult();"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        "delete": {
          "tags": [
            "workspaces"
          ],
          "summary": "Delete a workspace",
          "description": "Deletes a workspace from IBM Cloud Schematics. Deleting a workspace does not automatically remove the IBM Cloud resources that the workspace manages. To remove all resources that are associated with the workspace, use the `DELETE /v1/workspaces/{id}?destroyResources=true` API. \n\n **Note**: If you delete a workspace without deleting the resources, you must manage your resources with the resource dashboard or CLI afterwards. You cannot use IBM Cloud Schematics anymore to manage your resources. \n\n <h3>Authorization</h3> \n\n Schematics support generic authorization such as service access or platform access to the workspace ID and the resource group. For more information, about Schematics access and permissions, see [Schematics service access roles and required permissions](/docs/schematics?topic=schematics-access#access-roles).",
          "x-ibm-events": {
            "summary": "Auditing",
            "events": [
              {
                "name": "schematics.workspace.delete"
              }
            ]
          },
          "operationId": "delete_workspace",
          "parameters": [
            {
              "description": "The ID of the workspace that you want to delete. To find the workspace ID, use the `GET /v1/workspaces` API.",
              "name": "w_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "If set to `true`, refresh token header configuration is required to delete all the Terraform resources, and the Schematics workspace. If set to `false`, you can remove only the workspace. Your Terraform resources are still available and must be managed with the resource dashboard or CLI.",
              "name": "destroyResources",
              "in": "query",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "description": "The IAM refresh token is required only if you want to delete all the Terraform resources before deleting the Schematics workspace. If you want to delete the workspace only and keep all your Terraform resources, refresh token is not required. \n\n **Retrieving refresh token**: \n * Use `export IBMCLOUD_API_KEY=<ibmcloud_api_key>`, and execute `curl -X POST \"https://iam.cloud.ibm.com/identity/token\" -H \"Content-Type: application/x-www-form-urlencoded\" -d \"grant_type=urn:ibm:params:oauth:grant-type:apikey&apikey=$IBMCLOUD_API_KEY\" -u bx:bx`. \n * For more information, about creating IAM access token and API Docs, refer, [IAM access token](/apidocs/iam-identity-token-api#gettoken-password) and [Create API key](/apidocs/iam-identity-token-api#create-api-key).  \n\n **Limitation**: \n * If the token is expired, you can use `refresh token` to get a new IAM access token. \n * The `refresh_token` parameter cannot be used to retrieve a new IAM access token. \n * When the IAM access token is about to expire, use the API key to create a new access token.",
              "name": "refresh_token",
              "in": "header",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully deleted the workspace.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/WorkspaceDeleteResponse"
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Manager` service access role in IAM for IBM Cloud Schematics.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "409": {
              "description": "Could not delete the workspace template information. The workspace is frozen and disabled for updates. Unfreeze the workspace first, before you try again. Or the Schematics create, update, delete action has not completed. Wait until the create, update, delete, plan, apply, destroy or refresh action completes before you try again.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "429": {
              "description": "Too many requests have been made within a time window. IBM Cloud Schematics supports 50 API requests per minute, per host, and per customer. The host can be `us-east`, `us-south`, `eu-gb`, or `eu-de` region. Wait before calling the API again.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "503": {
              "description": "IBM Cloud Schematics could not process the request, due to a temporary overloading or maintenance. Try to reduce your request rate, or retry after a few minutes. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl -X DELETE https://schematics.cloud.ibm.com/v1/workspaces/{id} -H \"Authorization: <iam_token>\""
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "_, detailedResponse, err := schematicsService.DeleteWorkspace(&schematicsv1.DeleteWorkspaceOptions{\n",
                        "    WID:          <workspace_id>,\n",
                        "    RefreshToken: core.StringPtr(\"<refresh_token>\"),\n",
                        "})\n",
                        "\n",
                        "if err != nil {\n",
                        "    panic(err)\n",
                        "}\n",
                        ""
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "const params = {\n",
                        "  wId: '<workspace_id>',\n",
                        "  refreshToken: \"Refresh Token\"\n",
                        "};\n",
                        "\n",
                        "schematicsService.deleteWorkspace(params)\n",
                        "  .then(res => {\n",
                        "    console.log(JSON.stringify(res.result, null, 2));\n",
                        "  })\n",
                        "  .catch(err => {\n",
                        "    console.warn(err)\n",
                        "  });\n",
                        ""
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "workspace_delete_response = schematics_service.delete_workspace(\n",
                        "    w_id='<workspace_id>'\n",
                        ").get_result()\n",
                        "\n",
                        "print(json.dumps(workspace_delete_response, indent=2))"
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "DeleteWorkspaceOptions deleteWorkspaceOptions = new DeleteWorkspaceOptions.Builder()\n",
                        ".wId(\"<workspace_id>\")\n",
                        ".build();\n",
                        "\n",
                        "Response<String> response = service.deleteWorkspace(deleteWorkspaceOptions).execute();\n",
                        "String workspaceDeleteResponse = response.getResult();\n",
                        "\n",
                        "System.out.println(workspaceDeleteResponse);"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "/v1/workspaces/{w_id}/templates/{t_id}/template_repo_upload": {
        "put": {
          "tags": [
            "workspaces"
          ],
          "summary": "Upload a TAR file to your workspace",
          "description": "Provide your Terraform template by uploading a TAR file from your local machine. Before you use this API, you must create a workspace without a link to a GitHub or GitLab repository with the `POST /v1/workspaces` API. \n\n <h3>Authorization</h3> \n\n Schematics support generic authorization such as service access or platform access to the workspace ID and the resource group. For more information, about Schematics access and permissions, see [Schematics service access roles and required permissions](/docs/schematics?topic=schematics-access#access-roles).",
          "x-ibm-events": {
            "summary": "Auditing",
            "events": [
              {
                "name": "schematics.workspace.update"
              }
            ]
          },
          "parameters": [
            {
              "description": "The ID of the workspace where you want to upload your `.tar` file. To find the workspace ID, use the `GET /v1/workspaces` API.",
              "name": "w_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The ID of the Terraform template in your workspace. When you create a workspace, a unique ID is assigned to your Terraform template, even if no template was provided during workspace creation. To find this ID, use the `GET /v1/workspaces` API and review the `template_data.id` value.",
              "name": "t_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "file": {
                      "description": "You can upload the `TAR` file of your template repository, to the workspace by using `tar` command to create the file. For example, `tar -cvf mytarfile.tar $TEMPLATE_REPO_FOLDER`.",
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          },
          "operationId": "upload_template_tar",
          "responses": {
            "200": {
              "description": "Successfully uploaded the TAR file to your workspace. ",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TemplateRepoTarUploadResponse"
                  },
                  "examples": {
                    "response": {
                      "value": {
                        "id": "da53f57b-f7de-49",
                        "file_value": "mytarfile.tar",
                        "has_received_file": true
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The tar file could not be read. Make sure that the tar file was created in the right format and try again.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Writer`, or `Manager` service access role in IAM for IBM Cloud Schematics.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "404": {
              "description": "The workspace ID could not be found. Retrieve the workspace ID by using the `GET /v1/workspaces` API and try again.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact IBM Cloud support.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl -X PUT https://schematics.cloud.ibm.com/v1/workspaces/{id}/template_data/{template_id}/template_repo_upload -H \"Authorization: <iam_token>\" -H \"Content-Type: multipart/form-data\" --form \"file =@<file_path>/mytarfile.tar\""
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "fileReader, _ := os.Open(<path_of_tar_file>)\n",
                        "fileReaderWrapper := ioutil.NopCloser(fileReader)\n",
                        "\n",
                        "uploadTarOptions := &schematicsv1.UploadTemplateTarOptions{\n",
                        "    WID:             <workspace_id>,\n",
                        "    TID:             <template_id>,\n",
                        "    File:            fileReaderWrapper,\n",
                        "    FileContentType: core.StringPtr(\"multipart/form-data\"),\n",
                        "}\n",
                        "\n",
                        "uploadResult, httpResponse, err := schematicsService.UploadTemplateTar(uploadTarOptions)\n",
                        "\n",
                        "if err != nil {\n",
                        "    panic(err)\n",
                        "}\n",
                        "\n",
                        "w, err := json.MarshalIndent(uploadResult, \"\", \"  \")\n",
                        "fmt.Println(string(w))"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "fileStream = fs.createReadStream('<path_of_tar_file>');\n",
                        "\n",
                        "schematicsService.uploadTemplateTar({\n",
                        "    wId : '<workspace_id>',\n",
                        "    tId: '<template_id>',\n",
                        "    fileContentType: \"multipart/form-data\",\n",
                        "    file: fileStream\n",
                        "})\n",
                        ".then(res => {\n",
                        "  console.log(JSON.stringify(res.result, null, 2));\n",
                        "})\n",
                        ".catch(err => {\n",
                        "  console.warn(err);\n",
                        "})"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "file = open(\"<path_of_tar_file>\", \"rb\")\n",
                        "\n",
                        "template_repo_tar_upload_response = schematics_service.upload_template_tar(\n",
                        "    w_id='<workspace_id>',\n",
                        "    t_id='<template_id>',\n",
                        "    file = file,\n",
                        "    file_content_type = 'multipart/form-data'\n",
                        ").get_result()\n",
                        "\n",
                        "print(json.dumps(template_repo_tar_upload_response, indent=2))"
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "UploadTemplateTarOptions uploadTemplateTarOptions = new UploadTemplateTarOptions.Builder()\n",
                        ".wId(\"<workspace_id>\")\n",
                        ".tId(\"<template_id>\")\n",
                        ".file(new File(\"<path_of_tar_file>\"))\n",
                        ".fileContentType(\"multipart/form-data\")\n",
                        ".build();\n",
                        "\n",
                        "Response<TemplateRepoTarUploadResponse> response = service.uploadTemplateTar(uploadTemplateTarOptions).execute();\n",
                        "TemplateRepoTarUploadResponse templateRepoTarUploadResponse = response.getResult();\n",
                        "\n",
                        "System.out.println(templateRepoTarUploadResponse);"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "/v1/workspaces/{w_id}/plan": {
        "post": {
          "tags": [
            "workspaces"
          ],
          "summary": "Perform a Schematics plan action",
          "description": "Run a Schematics plan action against your workspace. The plan action creates a summary of IBM Cloud resources that must be created, modified, or deleted to achieve the state that is described in the Terraform or IBM Cloud catalog template that your workspace points to. During this time, you cannot make changes to your workspace. You can use the summary to verify your changes before you apply the template in IBM Cloud. \n\n\n **Important**: Your workspace must be in an `Inactive`, `Active`, `Failed`, or `Stopped` state to perform a Schematics plan action. \n\n\n **Note**: This API returns an activity ID that you use to retrieve the URL to the log file with the `GET /v1/workspaces/{id}/actions/{action_id}/logs` API. \n\n <h3>Authorization</h3> \n\n Schematics support generic authorization such as service access or platform access to the workspace ID and the resource group. For more information, about Schematics access and permissions, see [Schematics service access roles and required permissions](/docs/schematics?topic=schematics-access#access-roles). ",
          "x-ibm-events": {
            "summary": "Auditing",
            "events": [
              {
                "name": "schematics.workspace-resources.plan"
              }
            ]
          },
          "operationId": "plan_workspace_command",
          "parameters": [
            {
              "description": "The ID of the workspace, for which you want to run a Schematics plan action. To find the ID of your workspace, use the `GET /v1/workspaces` API. ",
              "name": "w_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The IAM delegated token for your IBM Cloud account. This token is required for requests that are sent via the UI only.",
              "name": "delegated_token",
              "in": "header",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The IAM refresh token is required only if you want to delete all the Terraform resources before deleting the Schematics workspace. If you want to delete the workspace only and keep all your Terraform resources, refresh token is not required. \n\n **Retrieving refresh token**: \n * Use `export IBMCLOUD_API_KEY=<ibmcloud_api_key>`, and execute `curl -X POST \"https://iam.cloud.ibm.com/identity/token\" -H \"Content-Type: application/x-www-form-urlencoded\" -d \"grant_type=urn:ibm:params:oauth:grant-type:apikey&apikey=$IBMCLOUD_API_KEY\" -u bx:bx`. \n * For more information, about creating IAM access token and API Docs, refer, [IAM access token](/apidocs/iam-identity-token-api#gettoken-password) and [Create API key](/apidocs/iam-identity-token-api#create-api-key).  \n\n **Limitation**: \n * If the token is expired, you can use `refresh token` to get a new IAM access token. \n * The `refresh_token` parameter cannot be used to retrieve a new IAM access token. \n * When the IAM access token is about to expire, use the API key to create a new access token.",
              "name": "refresh_token",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "202": {
              "description": "Successfully performed a Schematics plan action.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/WorkspaceActivityPlanResult"
                  },
                  "examples": {
                    "response": {
                      "value": {
                        "activityid": "f4091a17707d0433a3f9307e8bcbc853"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad request. Verify that you provided all input parameters, such as the IAM refresh token. To create a refresh token, use the IAM `POST /identity/token` API.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization or refresh token token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command. ",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Writer` or `Manager` service access role in IAM for IBM Cloud Schematics. In addition, make sure that you have the required permissions to work with the resources that are described in your templates.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "404": {
              "description": "The specified workspace could not be found. Verify that you entered the correct workspace ID. To find the ID, use the `GET /v1/workspaces` API.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "409": {
              "description": "Could not perform a plan action against the workspace. The workspace is frozen, or a Schematics create, update, plan, apply, delete, or refresh action has not completed yet. Unfreeze the workspace first or wait until the create, update, plan, apply, or refresh action completes before you try again.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "503": {
              "description": "IBM Cloud Schematics could not process the request, due to a temporary overloading or maintenance. Try to reduce your request rate, or retry after a few minutes. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request to perform a Schematics plan action",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl -X POST https://schematics.cloud.ibm.com/v1/workspaces/{id}/plan -H \"Authorization: Bearer <iam_token>\" -H \"refresh_token: <refresh_token>\""
                      ]
                    }
                  ]
                },
                {
                  "name": "Example request to retrieve logs for an activity ID",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl -X GET <log_url> -H \"Authorization: Bearer <iam_token>\""
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "planWorkspaceCommandOptions := &schematicsv1.PlanWorkspaceCommandOptions{\n",
                        "    WID:          <workspace_id>,\n",
                        "    RefreshToken: core.StringPtr(\"refresh_token\"),\n",
                        "}\n",
                        "\n",
                        "planResult, detailedResponse, err := schematicsService.PlanWorkspaceCommand(planWorkspaceCommandOptions)\n",
                        "\n",
                        "if err != nil {\n",
                        "    panic(err)\n",
                        "}\n",
                        "\n",
                        "w, err := json.MarshalIndent(planResult, \"\", \"  \")\n",
                        "fmt.Println(string(w))"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "const params = {\n",
                        "  wId: '<workspace_id>',\n",
                        "  refreshToken: '<refresh_token>',\n",
                        "};\n",
                        "\n",
                        "schematicsService.planWorkspaceCommand(params)\n",
                        "  .then(res => {\n",
                        "    console.log(JSON.stringify(res.result, null, 2));\n",
                        "  })\n",
                        "  .catch(err => {\n",
                        "    console.warn(err)\n",
                        "  });"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "workspace_activity_plan_result = schematics_service.plan_workspace_command(\n",
                        "    w_id='<workspace_id>',\n",
                        "    refresh_token='<refresh_token>'\n",
                        ").get_result()\n",
                        "\n",
                        "print(json.dumps(workspace_activity_plan_result, indent=2))"
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "PlanWorkspaceCommandOptions planWorkspaceCommandOptions = new PlanWorkspaceCommandOptions.Builder()\n",
                        ".wId(\"<workspace_id>\")\n",
                        ".refreshToken(\"<refresh_token>\")\n",
                        ".build();\n",
                        "\n",
                        "Response<WorkspaceActivityPlanResult> response = service.planWorkspaceCommand(planWorkspaceCommandOptions).execute();\n",
                        "WorkspaceActivityPlanResult workspaceActivityPlanResult = response.getResult();\n",
                        "\n",
                        "System.out.println(workspaceActivityPlanResult);"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "/v1/workspaces/{w_id}/apply": {
        "put": {
          "tags": [
            "workspaces"
          ],
          "summary": "Perform a Schematics apply action",
          "description": "Run a Schematics apply action against your workspace. An apply action provisions, modifies, or removes the IBM Cloud resources that you described in the Terraform template that your workspace points to. Depending on the type and number of resources that you want to provision or modify, this process might take a few minutes, or even up to hours to complete. During this time, you cannot make changes to your workspace. After all updates are applied, the state of the files is [persisted](/docs/schematics?topic=schematics-persist-files) to determine what resources exist in your IBM Cloud account. \n\n\n **Important**: Your workspace must be in an `Inactive`, `Active`, `Failed`, or `Stopped` state to perform a Schematics apply action. After all updates are applied, the state of the files is [persisted](/docs/schematics?topic=schematics-persist-files) to determine what resources exist in your IBM Cloud account. \n\n\n **Note**: This API returns an activity ID that you use to retrieve the log URL with the `GET /v1/workspaces/{id}/actions/{action_id}/logs` API. \n\n\n **Important:** Applying a template might incur costs. Make sure to review the pricing information for the resources that you specified in your templates before you apply the template in IBM Cloud. To find a summary of actions that Schematics is about to perform, create a Terraform execution plan with the `POST /v1/workspaces/{id}/plan` API. \n\n <h3>Authorization</h3> \n\n Schematics support generic authorization such as service access or platform access to the workspace ID and the resource group. For more information, about Schematics access and permissions, see [Schematics service access roles and required permissions](/docs/schematics?topic=schematics-access#access-roles). ",
          "x-ibm-events": {
            "summary": "Auditing",
            "events": [
              {
                "name": "schematics.workspace-resources.create"
              }
            ]
          },
          "operationId": "apply_workspace_command",
          "parameters": [
            {
              "description": "The ID of the workspace for which you want to run a Schematics apply action. To find the workspace ID, use the `GET /workspaces` API.",
              "name": "w_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The IAM delegated token for your IBM Cloud account. This token is required for requests that are sent via the UI only. ",
              "name": "delegated_token",
              "in": "header",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The IAM refresh token is required only if you want to delete all the Terraform resources before deleting the Schematics workspace. If you want to delete the workspace only and keep all your Terraform resources, refresh token is not required. \n\n **Retrieving refresh token**: \n * Use `export IBMCLOUD_API_KEY=<ibmcloud_api_key>`, and execute `curl -X POST \"https://iam.cloud.ibm.com/identity/token\" -H \"Content-Type: application/x-www-form-urlencoded\" -d \"grant_type=urn:ibm:params:oauth:grant-type:apikey&apikey=$IBMCLOUD_API_KEY\" -u bx:bx`. \n * For more information, about creating IAM access token and API Docs, refer, [IAM access token](/apidocs/iam-identity-token-api#gettoken-password) and [Create API key](/apidocs/iam-identity-token-api#create-api-key).  \n\n **Limitation**: \n * If the token is expired, you can use `refresh token` to get a new IAM access token. \n * The `refresh_token` parameter cannot be used to retrieve a new IAM access token. \n * When the IAM access token is about to expire, use the API key to create a new access token.",
              "name": "refresh_token",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceActivityOptions"
                }
              }
            },
            "description": "A list of resources that you want to target for creation or update. Resources must be targeted by using the resource address, such as `ibm_is_instance.vm`. If the targeted resource specifies the `count` attribute and no index is specified in the resource address, such as `ibm_is_instance.vm1[1]`, all instances that share the same resource name are targeted for creation or update. For more information about the Terraform target feature, see [Resource targeting](https://www.terraform.io/docs/commands/plan.html#resource-targeting){: external}."
          },
          "x-codegen-request-body-name": "targeted_resources",
          "responses": {
            "202": {
              "description": "Successfully ran a Schematics apply action against your workspace.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/WorkspaceActivityApplyResult"
                  },
                  "examples": {
                    "response": {
                      "value": {
                        "activityid": "ec72d9e655e846bcbfbb840be49ef7bd"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The IAM refresh token for your IBM Cloud account. To retrieve the refresh token, use the IAM `POST /identity/token` API. For more information, see the [IAM API documentation](/apidocs/iam-identity-token-api).",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Writer` or `Manager` service access role in IAM for IBM Cloud Schematics. In addition, make sure that you have the required permissions to work with the IBM Cloud resource that you configured in your Terraform template.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "404": {
              "description": "Not found. The specified workspace could not be found. Verify that you entered the correct workspace ID. To find the workspace ID, use the `GET /v1/workspaces` API. ",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "409": {
              "description": "Apply failed. Could not perform an apply action against the workspace. The workspace is frozen, or a Schematics create, update, plan, apply, delete, or refresh action has not completed yet. Unfreeze the workspace first or wait until the create, update, plan, apply, delete, or refresh action completes before you try again.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "429": {
              "description": "Too many requests have been made within a time window. IBM Cloud Schematics supports 50 API requests per minute, per host, and per customer. The host can be `us-east`, `us-south`, `eu-gb`, or `eu-de` region. Wait before calling the API again.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "503": {
              "description": "IBM Cloud Schematics could not process the request, due to a temporary overloading or maintenance. Try to reduce your request rate, or retry after a few minutes. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request to perform a Schematics apply action",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl -X PUT https://schematics.cloud.ibm.com/v1/workspaces/{id}/apply -H \"Authorization: Bearer <iam_token>\" -H \"refresh_token: <refresh_token>\""
                      ]
                    }
                  ]
                },
                {
                  "name": "Example request to retrieve logs for an activity ID",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl -X GET <log_url> -H \"Authorization: Bearer <iam_token>\""
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "applyWorkspaceCommandOptions := &schematicsv1.ApplyWorkspaceCommandOptions{\n",
                        "    WID:          <workspace_id>,\n",
                        "    RefreshToken: core.StringPtr(\"refresh_token\"),\n",
                        "}\n",
                        "\n",
                        "applyResult, detailedResponse, err := schematicsService.ApplyWorkspaceCommand(applyWorkspaceCommandOptions)\n",
                        "\n",
                        "if err != nil {\n",
                        "    panic(err)\n",
                        "}\n",
                        "\n",
                        "w, err := json.MarshalIndent(applyResult, \"\", \"  \")\n",
                        "fmt.Println(string(w))"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "const params = {\n",
                        "  wId: '<workspace_id>',\n",
                        "  refreshToken: '<refresh_token>'',\n",
                        "};\n",
                        "\n",
                        "schematicsService.applyWorkspaceCommand(params)\n",
                        "  .then(res => {\n",
                        "    console.log(JSON.stringify(res.result, null, 2));\n",
                        "  })\n",
                        "  .catch(err => {\n",
                        "      console.warn(err)\n",
                        "  });"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "workspace_activity_apply_result = schematics_service.apply_workspace_command(\n",
                        "    w_id='<workspace_id>',\n",
                        "    refresh_token='<refresh_token>'\n",
                        ").get_result()\n",
                        "\n",
                        "print(json.dumps(workspace_activity_apply_result, indent=2))"
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "ApplyWorkspaceCommandOptions applyWorkspaceCommandOptions = new ApplyWorkspaceCommandOptions.Builder()\n",
                        ".wId(\"<workspace_id>\")\n",
                        ".refreshToken(\"<refresh_token>\")\n",
                        ".build();\n",
                        "\n",
                        "Response<WorkspaceActivityApplyResult> response = service.applyWorkspaceCommand(applyWorkspaceCommandOptions).execute();\n",
                        "WorkspaceActivityApplyResult workspaceActivityApplyResult = response.getResult();"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "/v1/workspaces/{w_id}/destroy": {
        "put": {
          "tags": [
            "workspaces"
          ],
          "summary": "Perform a Schematics destroy action",
          "description": "Run a Schematics destroy action against your workspace. A destroy action removes all IBM Cloud resources that are associated with your workspace. Removing your resources does not delete the Schematics workspace. To delete the workspace, use the `DELETE /v1/workspaces/{id}` API. This API returns an activity ID that you use to retrieve the URL to the log file with the `GET /v1/workspaces/{id}/actions/{action_id}/logs` API. \n\n\n **Important**: Your workspace must be in an `Active`, `Failed`, or `Stopped` state to perform a Schematics destroy action. \n\n\n **Note**: Deleting IBM Cloud resources cannot be undone. Make sure that you back up any required data before you remove your resources.\n\n <h3>Authorization</h3> \n\n Schematics support generic authorization such as service access or platform access to the workspace ID and the resource group. For more information, about Schematics access and permissions, see [Schematics service access roles and required permissions](/docs/schematics?topic=schematics-access#access-roles). ",
          "x-ibm-events": {
            "summary": "Auditing",
            "events": [
              {
                "name": "schematics.workspace-resources.delete"
              }
            ]
          },
          "operationId": "destroy_workspace_command",
          "parameters": [
            {
              "description": "The ID of the workspace for which you want to perform a Schematics destroy action. To find the workspace ID, use the `GET /workspaces` API.",
              "name": "w_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The IAM delegated token for your IBM Cloud account. This token is required for requests that are sent via the UI only.",
              "name": "delegated_token",
              "in": "header",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The IAM refresh token is required only if you want to delete all the Terraform resources before deleting the Schematics workspace. If you want to delete the workspace only and keep all your Terraform resources, refresh token is not required. \n\n **Retrieving refresh token**: \n * Use `export IBMCLOUD_API_KEY=<ibmcloud_api_key>`, and execute `curl -X POST \"https://iam.cloud.ibm.com/identity/token\" -H \"Content-Type: application/x-www-form-urlencoded\" -d \"grant_type=urn:ibm:params:oauth:grant-type:apikey&apikey=$IBMCLOUD_API_KEY\" -u bx:bx`. \n * For more information, about creating IAM access token and API Docs, refer, [IAM access token](/apidocs/iam-identity-token-api#gettoken-password) and [Create API key](/apidocs/iam-identity-token-api#create-api-key).  \n\n **Limitation**: \n * If the token is expired, you can use `refresh token` to get a new IAM access token. \n * The `refresh_token` parameter cannot be used to retrieve a new IAM access token. \n * When the IAM access token is about to expire, use the API key to create a new access token.",
              "name": "refresh_token",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceActivityOptions"
                }
              }
            },
            "description": "A list of resources that you want to target for deletion. Resources must be targeted by using the resource address, such as `ibm_is_instance.vm`. If the targeted resource specifies the `count` attribute and no index is specified in the resource address, such as `ibm_is_instance.vm[1]`, all instances that share the same resource name are targeted for deletion. Also, if the targeted resource can only be deleted if dependent resources are deleted, such as a VPC can only be deleted if the attached subnet is deleted, then all dependent resources are targeted for deletion as well. For more information about the Terraform target feature, see [Resource targeting](https://www.terraform.io/docs/commands/plan.html#resource-targeting){: external}."
          },
          "x-codegen-request-body-name": "targeted_resources",
          "responses": {
            "202": {
              "description": "Successfully initiated a Schematics destroy action against your workspace.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/WorkspaceActivityDestroyResult"
                  },
                  "examples": {
                    "response": {
                      "value": {
                        "activityid": "12a111a1aa1111aaaaa123a11112222a11"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Writer` or `Manager` service access role in IAM for IBM Cloud Schematics. In addition, verify that you have the required resource permissions to remove the resource from IBM Cloud. ",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "404": {
              "description": "The specified workspace could not be found. Verify that you entered the correct workspace ID. To find the workspace ID, use the `GET /v1/workspaces` API. ",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "409": {
              "description": "Could not perform a destroy action against the workspace. The workspace is frozen, or a Schematics create, update, plan, apply, delete, or refresh action has not completed yet. Unfreeze the workspace first or wait until the create, update, plan, apply, delete, or refresh action completes before you try again. ",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "429": {
              "description": "Too many requests have been made within a time window. IBM Cloud Schematics supports 50 API requests per minute, per host, and per customer. The host can be `us-east`, `us-south`, `eu-gb`, or `eu-de` region. Wait before calling the API again.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "503": {
              "description": "IBM Cloud Schematics could not process the request, due to a temporary overloading or maintenance. Try to reduce your request rate, or retry after a few minutes. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request to perform a Schematics destroy action",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl -X PUT https://schematics.cloud.ibm.com/v1/workspaces/{id}/destroy -H \"Authorization: Bearer <iam_token>\" -H \"refresh_token: <refresh_token>\""
                      ]
                    }
                  ]
                },
                {
                  "name": "Example request to retrieve logs for an activity ID",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl -X GET <log_url> -H \"Authorization: Bearer <iam_token>\""
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "destroyWorkspaceCommandOptions := &schematicsv1.DestroyWorkspaceCommandOptions{\n",
                        "    WID:          <workspace_id>,\n",
                        "    RefreshToken: core.StringPtr(\"refresh_token\"),\n",
                        "}\n",
                        "\n",
                        "destroyResult, detailedResponse, err := schematicsService.DestroyWorkspaceCommand(destroyWorkspaceCommandOptions)\n",
                        "\n",
                        "if err != nil {\n",
                        "    panic(err)\n",
                        "}\n",
                        "\n",
                        "w, err := json.MarshalIndent(destroyResult, \"\", \"  \")\n",
                        "fmt.Println(string(w))"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "const params = {\n",
                        "  wId: '<workspace_id>',\n",
                        "  refreshToken: '<refresh_token>',\n",
                        "};\n",
                        "\n",
                        "schematicsService.destroyWorkspaceCommand(params)\n",
                        "  .then(res => {\n",
                        "    console.log(JSON.stringify(res.result, null, 2));\n",
                        "  })\n",
                        "  .catch(err => {\n",
                        "    console.warn(err)\n",
                        "  });"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "workspace_activity_destroy_result = schematics_service.destroy_workspace_command(\n",
                        "    w_id='<workspace_id>',\n",
                        "    refresh_token='<refresh_token>'\n",
                        ").get_result()\n",
                        "\n",
                        "print(json.dumps(workspace_activity_destroy_result, indent=2))"
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "DestroyWorkspaceCommandOptions destroyWorkspaceCommandOptions = new DestroyWorkspaceCommandOptions.Builder()\n",
                        ".wId(\"<workspace_id>\")\n",
                        ".refreshToken(\"<refresh_token>\")\n",
                        ".build();\n",
                        "\n",
                        "Response<WorkspaceActivityDestroyResult> response = service.destroyWorkspaceCommand(destroyWorkspaceCommandOptions).execute();\n",
                        "WorkspaceActivityDestroyResult workspaceActivityDestroyResult = response.getResult();\n",
                        "\n",
                        "System.out.println(workspaceActivityDestroyResult);"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "/v1/workspaces/{w_id}/refresh": {
        "put": {
          "tags": [
            "workspaces"
          ],
          "summary": "Perform a Schematics refresh action",
          "description": "Run a Schematics refresh action against your workspace. A refresh action validates the IBM Cloud resources in your account against the state that is stored in the Terraform statefile of your workspace. If differences are found, the Terraform statefile is updated accordingly. This API returns an activity ID that you use to retrieve the URL to the log file with the `GET /v1/workspaces/{id}/actions/{action_id}/logs` API. \n\n <h3>Authorization</h3> \n\n Schematics support generic authorization such as service access or platform access to the workspace ID and the resource group. For more information, about Schematics access and permissions, see [Schematics service access roles and required permissions](/docs/schematics?topic=schematics-access#access-roles). ",
          "x-ibm-events": {
            "summary": "Auditing",
            "events": [
              {
                "name": "schematics.workspace.refresh"
              }
            ]
          },
          "operationId": "refresh_workspace_command",
          "parameters": [
            {
              "description": "The ID of the workspace for which you want to perform a Schematics refresh action. To find the workspace ID, use the `GET /workspaces` API.",
              "name": "w_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The IAM delegated token for your IBM Cloud account. This token is required for requests that are sent via the UI only.",
              "name": "delegated_token",
              "in": "header",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The IAM refresh token is required only if you want to delete all the Terraform resources before deleting the Schematics workspace. If you want to delete the workspace only and keep all your Terraform resources, refresh token is not required. \n\n **Retrieving refresh token**: \n * Use `export IBMCLOUD_API_KEY=<ibmcloud_api_key>`, and execute `curl -X POST \"https://iam.cloud.ibm.com/identity/token\" -H \"Content-Type: application/x-www-form-urlencoded\" -d \"grant_type=urn:ibm:params:oauth:grant-type:apikey&apikey=$IBMCLOUD_API_KEY\" -u bx:bx`. \n * For more information, about creating IAM access token and API Docs, refer, [IAM access token](/apidocs/iam-identity-token-api#gettoken-password) and [Create API key](/apidocs/iam-identity-token-api#create-api-key).  \n\n **Limitation**: \n * If the token is expired, you can use `refresh token` to get a new IAM access token. \n * The `refresh_token` parameter cannot be used to retrieve a new IAM access token. \n * When the IAM access token is about to expire, use the API key to create a new access token.",
              "name": "refresh_token",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "202": {
              "description": "Successfully initiated a Schematics refresh action against your workspace.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/WorkspaceActivityRefreshResult"
                  },
                  "examples": {
                    "response": {
                      "value": {
                        "activityid": "12a111a1aa1111aaaaa123a11112222a11"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "One or more input parameters could not be found or are provided in the wrong format.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Writer` or `Manager` service access role in IAM for IBM Cloud Schematics.  ",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "404": {
              "description": "The specified workspace could not be found. Verify that you entered the correct workspace ID. To find the workspace ID, use the `GET /v1/workspaces` API. ",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "409": {
              "description": "Could not perform a refresh action against the workspace. The workspace is frozen, or a Schematics create, update, plan, apply, delete, or refresh action has not completed yet. Unfreeze the workspace first or wait until the create, update, plan, apply, delete, or refresh action completes before you try again.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact IBM Cloud support.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request to perform a Schematics refresh action",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl -X PUT https://schematics.cloud.ibm.com/v1/workspaces/{id}/refresh -H \"Authorization: Bearer <iam_token>\" -H \"refresh_token: <refresh_token>\""
                      ]
                    }
                  ]
                },
                {
                  "name": "Example request to retrieve logs for an activity ID",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl -X GET <log_url> -H \"Authorization: Bearer <iam_token>\""
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "refreshWorkspaceCommandOptions := &schematicsv1.RefreshWorkspaceCommandOptions{\n",
                        "    WID:          <workspace_id>,\n",
                        "    RefreshToken: core.StringPtr(\"refresh_token\"),\n",
                        "}\n",
                        "\n",
                        "refreshResult, detailedResponse, err := schematicsService.RefreshWorkspaceCommand(refreshWorkspaceCommandOptions)\n",
                        "\n",
                        "if err != nil {\n",
                        "    panic(err)\n",
                        "}\n",
                        "\n",
                        "w, err := json.MarshalIndent(refreshResult, \"\", \"  \")\n",
                        "fmt.Println(string(w))"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "const params = {\n",
                        "  wId: '<workspace_id>',\n",
                        "  refreshToken: '<refresh_token>',\n",
                        "};\n",
                        "\n",
                        "schematicsService.refreshWorkspaceCommand(params)\n",
                        "  .then(res => {\n",
                        "    console.log(JSON.stringify(res.result, null, 2));\n",
                        "  })\n",
                        "  .catch(err => {\n",
                        "    console.warn(err)\n",
                        "  });"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "workspace_activity_refresh_result = schematics_service.refresh_workspace_command(\n",
                        "    w_id='<workspace_id>',\n",
                        "    refresh_token='<refresh_token>'\n",
                        ").get_result()\n",
                        "\n",
                        "print(json.dumps(workspace_activity_refresh_result, indent=2))"
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "RefreshWorkspaceCommandOptions refreshWorkspaceCommandOptions = new RefreshWorkspaceCommandOptions.Builder()\n",
                        ".wId(\"<workspace_id>\")\n",
                        ".refreshToken(\"<refresh_token>\")\n",
                        ".build();\n",
                        "\n",
                        "Response<WorkspaceActivityRefreshResult> response = service.refreshWorkspaceCommand(refreshWorkspaceCommandOptions).execute();\n",
                        "WorkspaceActivityRefreshResult workspaceActivityRefreshResult = response.getResult();\n",
                        "\n",
                        "System.out.println(workspaceActivityRefreshResult);"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "/v1/workspaces/{w_id}/commands": {
        "put": {
          "tags": [
            "workspaces"
          ],
          "summary": "Run terraform commands",
          "description": "Run Terraform state commands to modify the workspace state file, by using the IBM Cloud Schematics API. \n\n <h3>Authorization</h3> \n\n Schematics support generic authorization such as service access or platform access to the workspace ID and the resource group. For more information, about Schematics access and permissions, see [Schematics service access roles and required permissions](/docs/schematics?topic=schematics-access#access-roles).",
          "operationId": "update terraform commands",
          "parameters": [
            {
              "description": "The ID of the workspace that you want to update. To find the ID, use the `GET /v1/workspaces` API.",
              "name": "w_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerraformUpdateRequest"
                }
              }
            },
            "description": "Workspace",
            "required": true
          },
          "x-codegen-request-body-name": "workspace",
          "responses": {
            "200": {
              "description": "Successfully updated the workspace metadata.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/WorkspaceActivityCommandResult"
                  },
                  "examples": {
                    "response": {
                      "value": {
                        "activityid": "223423423adfadf123456"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Writer` or `Manager` service access role in IAM for IBM Cloud Schematics.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "404": {
              "description": "The specified workspace could not be found. Verify that you entered the correct workspace ID. To find the ID of a workspace, use the `GET /v1/workspaces` API.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "409": {
              "description": "Could not update the workspace template information. The workspace is frozen and disabled for updates. Unfreeze the workspace first, before you try again. Or the Schematics create, update, delete action has not completed. Wait until the create, update, delete, plan, apply, destroy or refresh action completes before you try again.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "429": {
              "description": "Too many requests have been made within a time window. IBM Cloud Schematics supports 50 API requests per minute, per host, and per customer. The host can be `us-east`, `us-south`, `eu-gb`, or `eu-de` region. Wait before calling the API again.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "503": {
              "description": "IBM Cloud Schematics could not process the request, due to a temporary overloading or maintenance. Try to reduce your request rate, or retry after a few minutes. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request to execute multiple commands at once.",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl --location --request PUT 'https://schematics.cloud.ibm.com/v1/workspaces/<workspace_id>/commands' --header \"refresh_token: <refresh_token>' --header 'Authorization: <iam_token>' --header 'Content-Type: application/json' --data-raw '{\"commands\": [{\"command\": \"state show\",\"command_params\": \"data.template_file.test\",\"command_name\": \"Test1\",\"command_desc\": \"Showing state\",\"command_onerror\": \"continue\"},{\"command\": \"taint\",\"command_params\": \"null_resource.sleep\",\"command_name\": \"Test2\", \"command_desc\": \"Marking taint\",\"command_onerror\": \"continue\"},], \"operation_name\": \"Workspace Command\",\"description\": \"Executing command\"}'"
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "terraformCommandModel := &schematicsv1.TerraformCommand{\n",
                        "Command: core.StringPtr(\"<command_to_be_executed>\"),\n",
                        "CommandParams: core.StringPtr(\"<command_parameters>\"),\n",
                        "CommandName: core.StringPtr(\"<command_name>\"),\n",
                        "CommandDesc: core.StringPtr(\"<command_description>\"),\n",
                        "}\n",
                        "\n",
                        "runWorkspaceCommandsOptions := schematicsService.NewRunWorkspaceCommandsOptions(\n",
                        "WID: core.StringPtr(\"<workspace_id>\"),\n",
                        "RefreshToken: core.StringPtr(\"<refresh_token>\"),\n",
                        "Commands: []schematicsv1.TerraformCommand{*terraformCommandModel},\n",
                        "OperationName: core.StringPtr(\"<operation_name>\"),\n",
                        "Description: core.StringPtr(\"<operation_description>\"),\n",
                        ")\n",
                        "\n",
                        "workspaceActivityCommandResult, response, err := schematicsService.RunWorkspaceCommands(runWorkspaceCommandsOptions)\n",
                        "if err != nil {\n",
                        "panic(err)\n",
                        "}\n",
                        "b, _ := json.MarshalIndent(workspaceActivityCommandResult, \"\", \"\"),\n",
                        "fmt.Println(string(b))"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "const terraformCommandModel = {\n",
                        "  command: '<command_to_be_executed>',\n",
                        "  command_params: '<command_parameters>',\n",
                        "  command_name: '<command_name>',\n",
                        "  command_desc: '<command_description>',\n",
                        "};\n",
                        "\n",
                        "const params = {\n",
                        "  wId: '<workspace_id>,'\n",
                        "  refreshToken: '<refresh_token>',\n",
                        "  commands: [terraformCommandModel],\n",
                        "  operationName: '<operation_name>',\n",
                        "  description: '<operation_description>',\n",
                        "};\n",
                        "\n",
                        "schematicsService.runWorkspaceCommands(params)\n",
                        "  .then(res => {\n",
                        "    console.log(JSON.stringify(res.result, null, 2));\n",
                        "  })\n",
                        "  .catch(err => {\n",
                        "    console.warn(err)\n",
                        "  });"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "terraform_command_model = {\n",
                        " 'command': '<command_to_be_executed>',\n",
                        " 'command_params': '<command_parameters>',\n",
                        " 'command_name': '<command_name>',\n",
                        " 'command_desc': '<command_description>',\n",
                        "}\n",
                        "\n",
                        "workspace_activity_command_result = schematics_service.run_workspace_commands(\n",
                        "w_id='<workspace_id>',\n",
                        "refresh_token='<refresh_token>',\n",
                        "commands=[terraform_command_model],\n",
                        "operation_name='<operation_name>',\n",
                        "description='<operation_description>'\n",
                        ").get_result()\n",
                        "print(json.dumps(workspace_activity_command_result, indent=2)),"
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "TerraformCommand terraformCommandModel = new TerraformCommand.Builder()\n",
                        ".command(\"<command_to_be_executed>\")\n",
                        ".commandParams(\"<command_parameters>\")\n",
                        ".commandName(\"<command_name>\")\n",
                        ".commandDesc(\"<command_description>\")\n",
                        ".build();\n",
                        "RunWorkspaceCommandsOptions runWorkspaceCommandsOptions = new RunWorkspaceCommandsOptions.Builder()\n",
                        ".wId(\"<workspace_id>\")\n",
                        ".refreshToken(\"<refresh_token>\")\n",
                        ".commands(new java.util.ArrayList<TerraformCommand>(java.util.Arrays.asList(terraformCommandModel)))\n",
                        ".operationName(\"<operation_name>\")\n",
                        ".description(\"<operation_description>\")\n",
                        ".build();\n",
                        "Response<WorkspaceActivityCommandResult> response = service.runWorkspaceCommands(runWorkspaceCommandsOptions).execute();\n",
                        "WorkspaceActivityCommandResult workspaceActivityCommandResult = response.getResult();\n",
                        "System.out.println(workspaceActivityCommandResult);\n",
                        "Node.JS\n",
                        "const terraformCommandModel = {\n",
                        "command: '<command_to_be_executed>',\n",
                        "command_params: '<command_parameters>',\n",
                        "command_name: '<command_name>',\n",
                        "command_desc: '<command_description>',\n",
                        "};\n",
                        "const params = {\n",
                        "wId: '<workspace_id>',\n",
                        "refreshToken: '<refresh_token>',\n",
                        "commands: [terraformCommandModel],\n",
                        "operationName: '<operation_name>',\n",
                        "description: '<operation_description>',\n",
                        "};\n",
                        "schematicsService.runWorkspaceCommands(params)\n",
                        ".then(res => {\n",
                        "console.log(JSON.stringify(res.result, null, 2));\n",
                        "})\n",
                        ".catch(err => {\n",
                        "console.warn(err)\n",
                        "});"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "/v1/workspaces/{w_id}/actions": {
        "get": {
          "tags": [
            "workspaces"
          ],
          "summary": "List all workspace jobs",
          "description": "Retrieve a list of all actions that ran against a workspace. Jobs are generated when you use the `PUT /v1/workspaces/{id}/apply`, `POST /v1/workspaces/{id}/plan`, or `DELETE /v1/workspaces/{id}/destroy` API.  ",
          "operationId": "list_workspace_activities",
          "parameters": [
            {
              "description": "The ID of the workspace for which you want to list actions. To find the workspace ID, use the `GET /workspaces` API.",
              "name": "w_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The maximum number of jobs that you want to include in your response. The number that you enter must be between 1 and 200. If no number is provided, 100 is used by default.",
              "name": "limit",
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "description": "The position of the job in the list of jobs, from which you want to start listing your jobs. For example, if you have three jobs, the first job is assigned position number 0, the second job is assigned position number 1, and so forth. If you have 6 jobs and you want to list the details for jobs 2-6, enter 1. To limit the number of jobs that is returned, use the `limit` option in addition to the `offset` option. Negative numbers are not supported and are ignored.",
              "name": "offset",
              "in": "query",
              "schema": {
                "type": "integer"
              }
            },
            {
              "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully retrieved activities for the workspace.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/WorkspaceActivities"
                  },
                  "examples": {
                    "response": {
                      "value": {
                        "workspace_name": "testbranchReso",
                        "workspace_id": "us-east.workspace.testbranchReso.27ba56e9",
                        "actions": [
                          {
                            "action_id": "f4091a17707d0433a3f9307e8b8620fa",
                            "name": "WORKSPACE_CREATE",
                            "status": "COMPLETED",
                            "message": [],
                            "performed_by": "schematics@ibm.com",
                            "performed_at": "2021-05-26T11:04:49.105153192Z",
                            "templates": [
                              {
                                "template_id": "examples-99f04c50-71aa-40",
                                "template_type": "terraform_v0.12",
                                "start_time": "2021-05-26T11:04:49.237908502Z",
                                "end_time": "2021-05-26T11:05:14.635332779Z",
                                "status": "COMPLETED",
                                "message": "{\"messagekey\":\"M2001_ActivitySuccessful\",\"parms\":{},\"requestid\":\"3376b5da-e370-4d7f-aefa-962c19c051a0\",\"timestamp\":\"2021-05-26T11:05:14.635335163Z\"}",
                                "log_url": "https://schematics.cloud.ibm.com/v1/workspaces/us-east.workspace.testbranchReso.27ba56e9/runtime_data/examples-99f04c50-71aa-40/log_store/actions/f4091a17707d0433a3f9307e8b8620fa",
                                "log_summary": {
                                  "activity_status": "COMPLETED",
                                  "detected_template_type": "terraform_v0.12",
                                  "scanned_files": 2051,
                                  "discarded_files": 1450,
                                  "template_variable_count": 1,
                                  "time_taken": 25.4
                                }
                              }
                            ],
                            "terraform_commands": {
                              "commands": null
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/WorkspaceActivities"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Reader`, `Writer`, or `Manager` service access role in IAM for IBM Cloud Schematics. ",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact IBM Cloud support.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl -X GET https://schematics.cloud.ibm.com/v1/workspaces/{id}/actions -H \"Authorization: <iam_token>\""
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "listWorkspaceActivitiesOptions := &schematicsv1.ListWorkspaceActivitiesOptions{\n",
                        "    WID: <workspace_id>,\n",
                        "}\n",
                        "\n",
                        "listWorkspaceActivitiesResult, detailedResponse, err := schematicsService.ListWorkspaceActivities(listWorkspaceActivitiesOptions)\n",
                        "\n",
                        "if err != nil {\n",
                        "    panic(err)\n",
                        "}\n",
                        "\n",
                        "w, err := json.MarshalIndent(listWorkspaceActivitiesResult, \"\", \"  \")\n",
                        "fmt.Println(string(w))"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "const params = {\n",
                        "  wId: '<workspace_id>',\n",
                        "};\n",
                        "\n",
                        "schematicsService.listWorkspaceActivities(params)\n",
                        "  .then(res => {\n",
                        "    console.log(JSON.stringify(res.result, null, 2));\n",
                        "  })\n",
                        "  .catch(err => {\n",
                        "    console.warn(err)\n",
                        "  });"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "workspace_activities = schematics_service.list_workspace_activities(\n",
                        "    w_id='<workspace_id>'\n",
                        ").get_result()\n",
                        "\n",
                        "print(json.dumps(workspace_activities, indent=2))"
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "ListWorkspaceActivitiesOptions listWorkspaceActivitiesOptions = new ListWorkspaceActivitiesOptions.Builder()\n",
                        ".wId(\"<workspace_id>\")\n",
                        ".build();\n",
                        "\n",
                        "Response<WorkspaceActivities> response = service.listWorkspaceActivities(listWorkspaceActivitiesOptions).execute();\n",
                        "WorkspaceActivities workspaceActivities = response.getResult();\n",
                        "\n",
                        "System.out.println(workspaceActivities);"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "/v1/workspaces/{w_id}/actions/{activity_id}": {
        "get": {
          "description": "Get the details for a workspace job that ran against the workspace. This API returns a URL to the log file that you can retrieve by using the `GET /v1/workspaces/{id}/actions/{action_id}/logs` API.",
          "summary": "Get workspace job details",
          "tags": [
            "workspaces"
          ],
          "operationId": "get_workspace_activity",
          "parameters": [
            {
              "description": "The ID of the workspace for which you want to retrieve job details. To find the workspace ID, use the `GET /workspaces` API.",
              "name": "w_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The ID of the job for which you want to retrieve details. To find the job ID, use the `GET /v1/workspaces/{id}/actions` API.",
              "name": "activity_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully retrieved details about the action.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/WorkspaceActivity"
                  },
                  "examples": {
                    "response": {
                      "value": {
                        "action_id": "ec72d9e655e846bcbfbb840be49ef7bd",
                        "name": "APPLY",
                        "status": "COMPLETED",
                        "message": [],
                        "performed_by": "schematics@ibm.com",
                        "performed_at": "2021-05-26T11:16:57.311616075Z",
                        "templates": [
                          {
                            "template_id": "examples-99f04c50-71aa-40",
                            "template_type": "terraform_v0.12",
                            "start_time": "2021-05-26T11:16:57.449062157Z",
                            "end_time": "2021-05-26T11:19:58.671727313Z",
                            "status": "COMPLETED",
                            "message": "{\"messagekey\":\"M2001_ActivitySuccessful\",\"parms\":{},\"requestid\":\"01f69a31-3ae6-4be9-9e47-c61e31f93dc2\",\"timestamp\":\"2021-05-26T11:19:58.671730496Z\"}",
                            "log_url": "https://schematics.cloud.ibm.com/v1/workspaces/us-east.workspace.testbranchReso.27ba56e9/runtime_data/examples-99f04c50-71aa-40/log_store/actions/ec72d9e655e846bcbfbb840be49ef7bd",
                            "log_summary": {
                              "activity_status": "COMPLETED",
                              "time_taken": 181.22,
                              "resources_added": 1
                            }
                          }
                        ],
                        "terraform_commands": {
                          "commands": null
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Reader`, `Writer`, or `Manager` service access role in IAM for IBM Cloud Schematics.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "404": {
              "description": "The specified workspace or action could not be found. Verify that you entered the correct workspace and action ID. To find the ID of your workspace, use the `GET /v1/workspaces API`. To find the ID of the action, use the `GET /v1/workspaces/{id}/actions` API.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact IBM Cloud support.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl -X GET https://schematics.cloud.ibm.com/v1/workspaces/{id}/actions/{action_id} -H \"Authorization: <iam_token>\""
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "activityResponse, detailedResponse, err := schematicsService.GetWorkspaceActivity(&schematicsv1.GetWorkspaceActivityOptions{\n",
                        "    WID:        <workspace_id>,\n",
                        "    ActivityID: <activity_id>,\n",
                        "})\n",
                        "\n",
                        "if err != nil {\n",
                        "    panic(err)\n",
                        "}\n",
                        "\n",
                        "w, err := json.MarshalIndent(activityResponse, \"\", \"  \")\n",
                        "fmt.Println(string(w))"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "const params = {\n",
                        "  wId: '<workspace_id>',\n",
                        "  activityId: '<activity_id>',\n",
                        "};\n",
                        "\n",
                        "schematicsService.getWorkspaceActivity(params)\n",
                        "  .then(res => {\n",
                        "    console.log(JSON.stringify(res.result, null, 2));\n",
                        "  })\n",
                        "  .catch(err => {\n",
                        "    console.warn(err)\n",
                        "  });"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "workspace_activity = schematics_service.get_workspace_activity(\n",
                        "    w_id='<workspace_id>',\n",
                        "    activity_id='<activity_id>'\n",
                        ").get_result()\n",
                        "\n",
                        "print(json.dumps(workspace_activity, indent=2))"
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "GetWorkspaceActivityOptions getWorkspaceActivityOptions = new GetWorkspaceActivityOptions.Builder()\n",
                        ".wId(\"<workspace_id>\")\n",
                        ".activityId(\"<activity_id>\")\n",
                        ".build();\n",
                        "\n",
                        "Response<WorkspaceActivity> response = service.getWorkspaceActivity(getWorkspaceActivityOptions).execute();\n",
                        "WorkspaceActivity workspaceActivity = response.getResult();\n",
                        "\n",
                        "System.out.println(workspaceActivity);"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        "delete": {
          "description": "Stop an ongoing schematics apply job that runs against your workspace. \n\n If you remove the Schematics apply job that runs against your workspace, any changes to your IBM Cloud resources that are already applied are not reverted. If a creation, update, or deletion is currently in progress, Schematics waits for the job to be completed first. Then, any other resource creations, updates, or deletions that are included in your Terraform template file are ignored. \n\n **Note** \n\n  Temporarily IBM Cloud Schematics workspace stop activity API is deactivated from 29th June 2021, will resume the API with the notification. \n\n <h3>Authorization</h3> \n\n Schematics support generic authorization such as service access or platform access to the workspace ID and the resource group. For more information, about Schematics access and permissions, see [Schematics service access roles and required permissions](/docs/schematics?topic=schematics-access#access-roles).",
          "summary": "Stop an apply job",
          "operationId": "delete_workspace_activity",
          "tags": [
            "workspaces"
          ],
          "x-ibm-events": {
            "summary": "Auditing",
            "events": [
              {
                "name": "schematics.activity.job"
              }
            ]
          },
          "parameters": [
            {
              "description": "The ID of the workspace where you want to stop the Schematics apply job. To find the workspace ID, use the `GET /workspaces` API.",
              "name": "w_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The ID of the Schematics apply job that you want to stop. To find the job ID, use the `GET /v1/workspaces/{id}/actions` API. Note that the job name must be `apply`.",
              "name": "activity_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully stopped your Schematics apply action.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/WorkspaceActivityApplyResult"
                  }
                }
              }
            },
            "400": {
              "description": "The specified action cannot be stopped because the action completed successfully or a user in the account already requested to stop this action. Use the `GET /v1/workspace/{id}/actions` API to find the details for your action. ",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Manager` service access role in IAM for IBM Cloud Schematics.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "404": {
              "description": "The specified workspace or action could not be found. Verify that you entered the correct workspace and action ID. To find the ID of your workspace, use the `GET /v1/workspaces API`. To find the ID of the action, use the `GET /v1/workspaces/{id}/actions` API.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "405": {
              "description": "The specified action is not a Schematics apply action. Verify that you entered the correct action ID. To find the ID of the action, use the `GET /v1/workspaces/{id}/actions` API.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact IBM Cloud support.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl -X DELETE https://schematics.cloud.ibm.com/v1/workspaces/{id}/actions/{action_id} -H \"Authorization: <iam_token>\""
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "_, detailedResponse, err := schematicsService.DeleteWorkspaceActivity(&schematicsv1.DeleteWorkspaceActivityOptions{\n",
                        "    WID:        <workspace_id>,\n",
                        "    ActivityID: <activity_id>,\n",
                        "})\n",
                        "\n",
                        "if err != nil {\n",
                        "    panic(err)\n",
                        "}"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "const params = {\n",
                        "  wId: '<workspace_id>',\n",
                        "  activityId: '<activity_id>',\n",
                        "};\n",
                        "\n",
                        "schematicsService.deleteWorkspaceActivity(params)\n",
                        "  .then(res => {\n",
                        "    console.log(JSON.stringify(res.result, null, 2));\n",
                        "  })\n",
                        "  .catch(err => {\n",
                        "    console.warn(err)\n",
                        "  });"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "workspace_activity_apply_result = schematics_service.delete_workspace_activity(\n",
                        "    w_id='<workspace_id>',\n",
                        "    activity_id='<activity_id>'\n",
                        ").get_result()\n",
                        "\n",
                        "print(json.dumps(workspace_activity_apply_result, indent=2))"
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "DeleteWorkspaceActivityOptions deleteWorkspaceActivityOptions = new DeleteWorkspaceActivityOptions.Builder()\n",
                        ".wId(\"<workspace_id>\")\n",
                        ".activityId(\"<activity_id>\")\n",
                        ".build();\n",
                        "\n",
                        "Response<WorkspaceActivityApplyResult> response = service.deleteWorkspaceActivity(deleteWorkspaceActivityOptions).execute();\n",
                        "WorkspaceActivityApplyResult workspaceActivityApplyResult = response.getResult();\n",
                        "\n",
                        "System.out.println(workspaceActivityApplyResult);"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "/v1/workspaces/{w_id}/actions/{activity_id}/logs": {
        "get": {
          "tags": [
            "workspaces"
          ],
          "summary": "Get workspace job log URL",
          "description": "Get the Terraform log file URL for a workspace job. You can retrieve the log URL for jobs that were created with the `PUT /v1/workspaces/{id}/apply`, `POST /v1/workspaces/{id}/plan`, or `DELETE /v1/workspaces/{id}/destroy` API. \n\n <h3>Authorization</h3> \n\n Schematics support generic authorization such as service access or platform access to the workspace ID and the resource group. For more information, about Schematics access and permissions, see [Schematics service access roles and required permissions](/docs/schematics?topic=schematics-access#access-roles). ",
          "x-ibm-events": {
            "summary": "Auditing",
            "events": [
              {
                "name": "schematics.workspace.log_stores"
              }
            ]
          },
          "operationId": "get_workspace_activity_logs",
          "parameters": [
            {
              "description": "The ID of the workspace for which you want to retrieve job logs. To find the workspace ID, use the `GET /workspaces` API.",
              "name": "w_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The ID of the job for which you want to retrieve the log file URL. To find the job ID, use the `GET /v1/workspaces/{id}/actions` API.",
              "name": "activity_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully retrieved the log file URL for your job.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/WorkspaceActivityLogs"
                  },
                  "examples": {
                    "response": {
                      "value": {
                        "action_id": "123456ba12345b",
                        "name": "APPLY",
                        "templates": [
                          {
                            "template_id": "a1245319-b1235",
                            "template_type": "terraform_v0.12",
                            "log_url": "https://schematics.cloud.ibm.com/v1/workspaces/myworkspace-123456/runtime_data/a1245319-b1235/log_store/actions/7123456ba12345b"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you have the `Reader`, `Writer`, or `Manager` service access role in IAM for IBM Cloud Schematics.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "404": {
              "description": "The specified workspace or action could not be found. Verify that you entered the correct workspace and action ID. To find the ID of your workspace, use the `GET /v1/workspaces` API. To find the ID of the action, use the `GET /v1/workspaces/{id}/actions` API.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact IBM Cloud support.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request to retrieve the logs for a job",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl -X GET https://schematics.cloud.ibm.com/v1/workspaces/{id}/actions/{action_id}/logs -H \"Authorization: <iam_token>\""
                      ]
                    }
                  ]
                },
                {
                  "name": "Example request to retrieve logs from a log URL",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl -X GET <log_url> -H \"Authorization: <access_token>\""
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "activityLogResult, detailedResponse, err := schematicsService.GetWorkspaceActivityLogs(&schematicsv1.GetWorkspaceActivityLogsOptions{\n",
                        "    WID:        <workspace_id>,\n",
                        "    ActivityID: <activity_id>,\n",
                        "})\n",
                        "\n",
                        "if err != nil {\n",
                        "    panic(err)\n",
                        "}\n",
                        "\n",
                        "w, err := json.MarshalIndent(activityLogResult, \"\", \"  \")\n",
                        "fmt.Println(string(w))"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "const params = {\n",
                        "  wId: '<workspace_id>',\n",
                        "  activityId: '<activity_id>',\n",
                        "};\n",
                        "\n",
                        "schematicsService.getWorkspaceActivityLogs(params)\n",
                        "  .then(res => {\n",
                        "    console.log(JSON.stringify(res.result, null, 2));\n",
                        "  })\n",
                        "  .catch(err => {\n",
                        "    console.warn(err)\n",
                        "  });"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "workspace_activity_logs = schematics_service.get_workspace_activity_logs(\n",
                        "    w_id='<workspace_id>',\n",
                        "    activity_id='<activity_id>'\n",
                        ").get_result()\n",
                        "\n",
                        "print(json.dumps(workspace_activity_logs, indent=2))"
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "GetWorkspaceActivityLogsOptions getWorkspaceActivityLogsOptions = new GetWorkspaceActivityLogsOptions.Builder()\n",
                        ".wId(\"<workspace_id>\")\n",
                        ".activityId(\"<activity_id>\")\n",
                        ".build();\n",
                        "\n",
                        "Response<WorkspaceActivityLogs> response = service.getWorkspaceActivityLogs(getWorkspaceActivityLogsOptions).execute();\n",
                        "WorkspaceActivityLogs workspaceActivityLogs = response.getResult();\n",
                        "\n",
                        "System.out.println(workspaceActivityLogs);"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "/v1/workspaces/{w_id}/log_stores": {
        "get": {
          "tags": [
            "workspaces"
          ],
          "description": "Retrieve the log file URL for the latest job of a template that ran against your workspace. You use this URL to retrieve detailed logs for the latest job. ",
          "summary": "Get latest workspace job log URL for all workspace templates",
          "operationId": "get_workspace_log_urls",
          "parameters": [
            {
              "description": "The ID of the workspace for which you want to retrieve log store URLs. To find the workspace ID, use the `GET /workspaces` API.",
              "name": "w_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully retrieved the log URL for the most recent job that ran against your workspace.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LogStoreResponseList"
                  },
                  "examples": {
                    "response": {
                      "value": {
                        "runtime_data": [
                          {
                            "id": "a134567b24-12",
                            "engine_name": "terraform",
                            "engine_version": "terraformv0.12.24",
                            "log_store_url": "https://schematics.cloud.ibm.com/v1/workspaces/myworkspace-123456/runtime_data/a134567b24-12/log_store"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Reader`, `Writer`, or `Manager` service access role in IAM for IBM Cloud Schematics. ",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "404": {
              "description": "The specified workspace could not be found. Verify that you entered the correct workspace ID. To find the workspace ID, use the `GET /v1/workspaces` API.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact IBM Cloud support.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request to get the log store URL of the most recent job that ran against your workspace",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl -X GET https://schematics.cloud.ibm.com/v1/workspaces/{id}/log_stores -H \"Authorization: <iam_token>\""
                      ]
                    }
                  ]
                },
                {
                  "name": "Example request to retrieve logs from the log store URL",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl -X GET <log_store_url> -H \"Authorization: <iam_token>\""
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "activityLogResult, detailedResponse, err := schematicsService.GetWorkspaceLogUrls(&schematicsv1.GetWorkspaceLogUrlsOptions{\n",
                        "    WID: <workspace_id>,\n",
                        "})\n",
                        "\n",
                        "if err != nil {\n",
                        "    panic(err)\n",
                        "}\n",
                        "\n",
                        "w, err := json.MarshalIndent(activityLogResult, \"\", \"  \")\n",
                        "fmt.Println(string(w))"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "const params = {\n",
                        "  wId: '<workspace_id>',\n",
                        "};\n",
                        "\n",
                        "schematicsService.getWorkspaceLogUrls(params)\n",
                        "  .then(res => {\n",
                        "    console.log(JSON.stringify(res.result, null, 2));\n",
                        "  })\n",
                        "  .catch(err => {\n",
                        "    console.warn(err)\n",
                        "  });"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "log_store_response_list = schematics_service.get_workspace_log_urls(\n",
                        "    w_id='<workspace_id>'\n",
                        ").get_result()\n",
                        "\n",
                        "print(json.dumps(log_store_response_list, indent=2))"
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "GetWorkspaceLogUrlsOptions getWorkspaceLogUrlsOptions = new GetWorkspaceLogUrlsOptions.Builder()\n",
                        ".wId(\"<workspace_id>\")\n",
                        ".build();\n",
                        "\n",
                        "Response<LogStoreResponseList> response = service.getWorkspaceLogUrls(getWorkspaceLogUrlsOptions).execute();\n",
                        "LogStoreResponseList logStoreResponseList = response.getResult();\n",
                        "\n",
                        "System.out.println(logStoreResponseList);"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "/v1/workspaces/{w_id}/runtime_data/{t_id}/log_store/actions/{activity_id}": {
        "get": {
          "tags": [
            "workspaces"
          ],
          "description": "Show the Terraform logs for an job that ran against your workspace. ",
          "summary": "Show logs for a workspace job",
          "operationId": "get_template_activity_log",
          "parameters": [
            {
              "description": "The ID of the workspace for which you want to retrieve job logs. To find the workspace ID, use the `GET /workspaces` API.",
              "name": "w_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The ID of the action (activity) that ran against your workspace ID. To find the job ID, use the `GET /v1/workspaces/{id}/actions` API.",
              "name": "activity_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The ID that was assigned to your Terraform template or IBM Cloud catalog software template. To find the ID, use the `GET /v1/workspaces` API.",
              "name": "t_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Enter `false` to replace the first line in each Terraform command section, such as `Terraform INIT` or `Terraform PLAN`, with `Schematics INIT` (`Schematics PLAN`) in your log output. In addition, the log lines `Starting command: terraform init -input=false -no-color` and `Starting command: terraform apply -state=terraform.tfstate -var-file=schematics.tfvars -auto-approve -no-color` are suppressed. All subsequent command lines still use the Terraform command prefix. To remove this prefix, use the `log_tf_prefix` option.",
              "name": "log_tf_cmd",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Enter `false` to remove all Terraform command prefixes from each Terraform command section of your log output.",
              "name": "log_tf_prefix",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Enter `false` to remove any `null_resource` log lines from your log output. This option can be used only if you defined a `null_resource` in your Terraform configuration file.",
              "name": "log_tf_null_resource",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Enter `true` to show a new line instead of `\n` for multi-line Ansible logs. This option is available only if you run Ansible code that creates Ansible log output.",
              "name": "log_tf_ansible",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully retrieved the Terraform logs for a workspace job.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/WorkspaceActivityTemplateLogString"
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you assigned the `Reader`, `Writer`, or `Manager` service access role in IAM for IBM Cloud Schematics. ",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "404": {
              "description": "The specified workspace, action, or template could not be found. Verify that you entered the correct workspace, action ID, and template ID. To find the ID of your workspace or template, use the `GET /v1/workspaces API`. To find the ID of the action, use the `GET /v1/workspaces/{id}/actions` API.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact IBM Cloud support.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl -X GET https://schematics.cloud.ibm.com/v1/workspaces/{id}/runtime_data/{template_id}/log_store/actions/{action_id} -H \"Authorization: <iam_token>\""
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "activityLogResult, detailedResponse, err := schematicsService.GetTemplateActivityLog(&schematicsv1.GetTemplateActivityLogOptions{\n",
                        "    WID:        <workspace_id>,\n",
                        "    TID:        <template_id>,\n",
                        "    ActivityID: <activity_id>,\n",
                        "})\n",
                        "\n",
                        "if err != nil {\n",
                        "    panic(err)\n",
                        "}\n",
                        "\n",
                        "w, err := json.MarshalIndent(activityLogResult, \"\", \"  \")\n",
                        "fmt.Println(string(w))"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "const params = {\n",
                        "  wId: '<workspace_id>',\n",
                        "  activityId: '<activity_id>',\n",
                        "  tId: '<template_id>',\n",
                        "};\n",
                        "\n",
                        "schematicsService.getTemplateActivityLog(params)\n",
                        "  .then(res => {\n",
                        "    console.log(JSON.stringify(res.result, null, 2));\n",
                        "  })\n",
                        "  .catch(err => {\n",
                        "    console.warn(err)\n",
                        "  });"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "workspace_activity_template_log_string = schematics_service.get_template_activity_log(\n",
                        "    w_id='<workspace_id>',\n",
                        "    activity_id='<activity_id>',\n",
                        "    t_id='<template_id>'\n",
                        ").get_result()\n",
                        "\n",
                        "print(json.dumps(workspace_activity_template_log_string, indent=2))"
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "GetTemplateActivityLogOptions getTemplateActivityLogOptions = new GetTemplateActivityLogOptions.Builder()\n",
                        ".wId(\"<workspace_id>\")\n",
                        ".activityId(\"<activity_id>\")\n",
                        ".tId(\"<template_id>\")\n",
                        ".build();\n",
                        "\n",
                        "Response<String> response = service.getTemplateActivityLog(getTemplateActivityLogOptions).execute();\n",
                        "String workspaceActivityTemplateLogString = response.getResult();\n",
                        "\n",
                        "System.out.println(workspaceActivityTemplateLogString);"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "/v1/workspaces/{w_id}/runtime_data/{t_id}/log_store": {
        "get": {
          "tags": [
            "workspaces"
          ],
          "summary": "Show logs for the latest action for a workspace template",
          "description": "Show the Terraform logs for the most recent job of a template that ran against your workspace. \n\n <h3>Authorization</h3> \n\n Schematics support generic authorization such as service access or platform access to the workspace ID and the resource group. For more information, about Schematics access and permissions, see [Schematics service access roles and required permissions](/docs/schematics?topic=schematics-access#access-roles).",
          "x-ibm-events": {
            "summary": "Auditing",
            "events": [
              {
                "name": "schematics.workspace.state_stores"
              }
            ]
          },
          "operationId": "get_template_logs",
          "parameters": [
            {
              "description": "The ID of the workspace for which you want to retrieve job logs. To find the workspace ID, use the `GET /workspaces` API.",
              "name": "w_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The ID that was assigned to your Terraform template or IBM Cloud catalog software template. To find the ID, use the `GET /v1/workspaces` API.",
              "name": "t_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Enter `false` to replace the first line in each Terraform command section, such as `Terraform INIT` or `Terraform PLAN`, with `Schematics INIT` (`Schematics PLAN`) in your log output. In addition, the log lines `Starting command: terraform init -input=false -no-color` and `Starting command: terraform apply -state=terraform.tfstate -var-file=schematics.tfvars -auto-approve -no-color` are suppressed. All subsequent command lines still use the Terraform command prefix. To remove this prefix, use the `log_tf_prefix` option.",
              "name": "log_tf_cmd",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Enter `false` to remove all Terraform command prefixes from each Terraform command section of your log output.",
              "name": "log_tf_prefix",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Enter `false` to remove any `null_resource` log lines from your log output. This option can be used only if you defined a `null_resource` in your Terraform configuration file.",
              "name": "log_tf_null_resource",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "Enter `true` to show a new line instead of `\n` for multi-line Ansible logs. This option is available only if you run Ansible code that creates Ansible log output.",
              "name": "log_tf_ansible",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully retrieved the Terraform logs for the most recent workspace job.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TemplateLogStoreString"
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Reader`, `Writer`, or `Manager` service access role in IAM for IBM Cloud Schematics.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "404": {
              "description": "The specified workspace or template could not be found. Verify that you entered the correct workspace and template ID. To find the ID of your workspace or template, use the `GET /v1/workspaces API`. ",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact IBM Cloud support.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl -X GET https://schematics.cloud.ibm.com/v1/workspaces/{id}/runtime_data/{template_id}/log_store -H \"Authorization: <iam_token>\""
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "templateLogResult, detailedResponse, err := schematicsService.GetTemplateLogs(&schematicsv1.GetTemplateLogsOptions{\n",
                        "    WID: <workspace_id>,\n",
                        "    TID: <template_id>,\n",
                        "})\n",
                        "\n",
                        "if err != nil {\n",
                        "    panic(err)\n",
                        "}\n",
                        "\n",
                        "w, err := json.MarshalIndent(templateLogResult, \"\", \"  \")\n",
                        "fmt.Println(string(w))"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "const params = {\n",
                        "  wId: '<workspace_id>',\n",
                        "  tId: '<template_id>',\n",
                        "};\n",
                        "\n",
                        "schematicsService.getTemplateLogs(params)\n",
                        "  .then(res => {\n",
                        "    console.log(JSON.stringify(res.result, null, 2));\n",
                        "  })\n",
                        "  .catch(err => {\n",
                        "    console.warn(err)\n",
                        "  });"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "template_log_store_string = schematics_service.get_template_logs(\n",
                        "    w_id='<workspace_id>',\n",
                        "    t_id='<template_id>'\n",
                        ").get_result()\n",
                        "\n",
                        "print(json.dumps(template_log_store_string, indent=2))"
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "GetTemplateLogsOptions getTemplateLogsOptions = new GetTemplateLogsOptions.Builder()\n",
                        ".wId(\"<workspace_id>\")\n",
                        ".tId(\"<template_id>\")\n",
                        ".build();\n",
                        "\n",
                        "Response<String> response = service.getTemplateLogs(getTemplateLogsOptions).execute();\n",
                        "String templateLogStoreString = response.getResult();\n",
                        "\n",
                        "System.out.println(templateLogStoreString);"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "/v1/workspaces/{w_id}/state_stores": {
        "get": {
          "tags": [
            "workspaces"
          ],
          "summary": "Get Terraform statefile URL",
          "description": "Retrieve the URL to the Terraform statefile (`terraform.tfstate`). You use the URL to access the Terraform statefile. The Terraform statefile includes detailed information about the IBM Cloud resources that you provisioned with IBM Cloud Schematics and Schematics uses the file to determine future create, modify, or delete actions for your resources. To show the content of the Terraform statefile, use the `GET /v1/workspaces/{id}/runtime_data/{template_id}/state_store` API. \n\n <h3>Authorization</h3> \n\n Schematics support generic authorization such as service access or platform access to the workspace ID and the resource group. For more information, about Schematics access and permissions, see [Schematics service access roles and required permissions](/docs/schematics?topic=schematics-access#access-roles).",
          "x-ibm-events": {
            "summary": "Auditing",
            "events": [
              {
                "name": "schematics.workspace.template_state_stores"
              }
            ]
          },
          "operationId": "get_workspace_state",
          "parameters": [
            {
              "description": "The ID of the workspace for which you want to retrieve the Terraform statefile URL. To find the workspace ID, use the `GET /v1/workspaces` API.",
              "name": "w_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully retrieved the URL to the Terraform statefile.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/StateStoreResponseList"
                  },
                  "examples": {
                    "response": {
                      "value": {
                        "runtime_data": [
                          {
                            "id": "a111111b11-1aa1-1a",
                            "engine_name": "terraform",
                            "engine_version": "terraformv0.12.24",
                            "state_store_url": "https://schematics.cloud.ibm.com/v1/workspaces/myworkspace-123456/runtime_data/a111111b11-1aa1-1a/state_store"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Reader`, `Writer` or `Manager` service access role in IAM for IBM Cloud Schematics. ",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "404": {
              "description": "The specified workspace could not be found. Verify that you entered the correct workspace ID. To find the workspace ID, use the `GET /v1/workspaces` API.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact IBM Cloud support.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request to retrieve the Terraform statefile URL",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl -X GET https://schematics.cloud.ibm.com/v1/workspaces/{id}/state_stores -H \"Authorization: <iam_token>\""
                      ]
                    }
                  ]
                },
                {
                  "name": "Example request to show the Terraform statefile content by using the statefile URL",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl -X GET <state_store_url> -H \"Authorization: <iam_token>\""
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "stateFile, detailedResponse, err := schematicsService.GetWorkspaceState(&schematicsv1.GetWorkspaceStateOptions{\n",
                        "    WID: <workspace_id>,\n",
                        "})\n",
                        "\n",
                        "if err != nil {\n",
                        "    panic(err)\n",
                        "}\n",
                        "\n",
                        "w, err := json.MarshalIndent(stateFile, \"\", \"  \")\n",
                        "fmt.Println(string(w))"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "const params = {\n",
                        "  wId: '<workspace_id>',\n",
                        "};\n",
                        "\n",
                        "schematicsService.getWorkspaceState(params)\n",
                        "  .then(res => {\n",
                        "    console.log(JSON.stringify(res.result, null, 2));\n",
                        "  })\n",
                        "  .catch(err => {\n",
                        "    console.warn(err)\n",
                        "  });"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "state_store_response_list = schematics_service.get_workspace_state(\n",
                        "    w_id='<workspace_id>'\n",
                        ").get_result()\n",
                        "\n",
                        "print(json.dumps(state_store_response_list, indent=2))"
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "GetWorkspaceStateOptions getWorkspaceStateOptions = new GetWorkspaceStateOptions.Builder()\n",
                        ".wId(\"<workspace_id>\")\n",
                        ".build();\n",
                        "\n",
                        "Response<StateStoreResponseList> response = service.getWorkspaceState(getWorkspaceStateOptions).execute();\n",
                        "StateStoreResponseList stateStoreResponseList = response.getResult();\n",
                        "\n",
                        "System.out.println(stateStoreResponseList);"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "/v1/workspaces/{w_id}/runtime_data/{t_id}/state_store": {
        "get": {
          "tags": [
            "workspaces"
          ],
          "summary": "Show Terraform statefile content",
          "description": "Show the content of the Terraform statefile (`terraform.tfstate`) that was created when your Terraform template was applied in IBM Cloud. The statefile holds detailed information about the IBM Cloud resources that were created by IBM Cloud Schematics and Schematics uses the file to determine future create, modify, or delete actions for your resources. ",
          "operationId": "get_workspace_template_state",
          "parameters": [
            {
              "description": "The ID of the workspace for which you want to retrieve the Terraform statefile. To find the workspace ID, use the `GET /v1/workspaces` API.",
              "name": "w_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The ID of the Terraform template for which you want to retrieve the Terraform statefile. When you create a workspace, the Terraform template that your workspace points to is assigned a unique ID. To find this ID, use the `GET /v1/workspaces` API and review the `template_data.id` value.",
              "name": "t_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully retrieved the information from the Terraform statefile.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TemplateStateStore"
                  },
                  "examples": {
                    "response": {
                      "value": {
                        "version": 3,
                        "terraform_version": "0.12.14",
                        "serial": 1,
                        "lineage": "98aba884-11c1-7e45-f9d6-f895bbf80654",
                        "modules": [
                          {
                            "path": [
                              "root"
                            ],
                            "outputs": {},
                            "resources": {
                              "data.ibm_is_image.ubuntu": {
                                "type": "ibm_is_image",
                                "depends_on": [],
                                "primary": {
                                  "id": "abc111-1111-1111-aaaa-123456789",
                                  "attributes": {
                                    "architecture": "amd64",
                                    "crn": "crn:v1:bluemix:public:is:us-south:::image:abc111-1111-1111-aaaa-123456789",
                                    "id": "abc111-1111-1111-aaaa-123456789",
                                    "name": "ubuntu-18.04-amd64",
                                    "os": "ubuntu-18-04-amd64",
                                    "status": "available",
                                    "visibility": "public"
                                  },
                                  "meta": {},
                                  "tainted": false
                                },
                                "deposed": [],
                                "provider": "provider.ibm"
                              },
                              "data.ibm_is_ssh_key.ssh_key_id": {
                                "type": "ibm_is_ssh_key",
                                "depends_on": [],
                                "primary": {
                                  "id": "111111-0000-0001-0000-0000001111a1",
                                  "attributes": {
                                    "fingerprint": "SHA256:A1B3aaaabbb3A/ABCDEaaAA",
                                    "id": "111111-0000-0001-0000-0000001111a1",
                                    "length": "2048",
                                    "name": "mykey",
                                    "type": "rsa"
                                  },
                                  "meta": {},
                                  "tainted": false
                                },
                                "deposed": [],
                                "provider": "provider.ibm"
                              }
                            },
                            "depends_on": []
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the Writer service access role in IAM for IBM Cloud Schematics.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "404": {
              "description": "The specified workspace could not be found. Verify that you entered the correct workspace ID. To find the workspace ID, use the `GET /v1/workspaces` API.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact IBM Cloud support.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl -X GET https://schematics.cloud.ibm.com/v1/workspaces/{id}/runtime_data/{template_id}/state_store -H \"Authorization: <iam_token>\""
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "statefile, detailedResponse, err := schematicsService.GetWorkspaceTemplateState(&schematicsv1.GetWorkspaceTemplateStateOptions{\n",
                        "    WID: <workspace_id>,\n",
                        "    TID: <template_id>,\n",
                        "})\n",
                        "\n",
                        "if err != nil {\n",
                        "    panic(err)\n",
                        "}\n",
                        "\n",
                        "w, err := json.MarshalIndent(statefile, \"\", \"  \")\n",
                        "fmt.Println(string(w))"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "const params = {\n",
                        "  wId: '<workspace_id>',\n",
                        "  tId: '<template_id>',\n",
                        "};\n",
                        "\n",
                        "schematicsService.getWorkspaceTemplateState(params)\n",
                        "  .then(res => {\n",
                        "    console.log(JSON.stringify(res.result, null, 2));\n",
                        "  })\n",
                        "  .catch(err => {\n",
                        "    console.warn(err)\n",
                        "  });"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "template_state_store = schematics_service.get_workspace_template_state(\n",
                        "    w_id='<workspace_id>',\n",
                        "    t_id='<template_id>'\n",
                        ").get_result()\n",
                        "\n",
                        "print(json.dumps(template_state_store, indent=2))"
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "GetWorkspaceTemplateStateOptions getWorkspaceTemplateStateOptions = new GetWorkspaceTemplateStateOptions.Builder()\n",
                        ".wId(\"<workspace_id>\")\n",
                        ".tId(\"<template_id>\")\n",
                        ".build();\n",
                        "\n",
                        "Response<TemplateStateStore> response = service.getWorkspaceTemplateState(getWorkspaceTemplateStateOptions).execute();\n",
                        "TemplateStateStore templateStateStore = response.getResult();\n",
                        "\n",
                        "System.out.println(templateStateStore);"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "/v1/workspaces/{w_id}/resources": {
        "get": {
          "tags": [
            "workspaces"
          ],
          "summary": "List workspace resources",
          "description": "Retrieve a list of IBM Cloud resources that you created with your workspace.",
          "operationId": "get_workspace_resources",
          "parameters": [
            {
              "description": "The ID of the workspace for which you want to retrieve the associated IBM Cloud resources. To find the workspace ID, use the `GET /workspaces` API.",
              "name": "w_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully retrieved the resources in JSON format.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TemplateResourcesList"
                  },
                  "examples": {
                    "response": {
                      "value": {
                        "id": "examples-99f04c50-71aa-40",
                        "folder": "examples/ibm-vsi",
                        "type": "terraform_v0.12",
                        "resources": [
                          {
                            "resource_id": "120765732",
                            "resource_name": "vm1",
                            "resource_type": "ibm_compute_vm_instance",
                            "resource_crn": "",
                            "resource_icon_url": "",
                            "resource_controller_url": "https://cloud.ibm.com/gen1/infrastructure/virtual-server/120765732/details#main",
                            "resource_group_name": "",
                            "resource_status": "Active",
                            "resource_tainted": false,
                            "resource_extension": {
                              "resource_name": "vm1",
                              "resource_data_array": [
                                {
                                  "property_key": "dedicated_acct_host_only",
                                  "property_value": false
                                },
                                {
                                  "property_key": "disks",
                                  "property_value": [
                                    25
                                  ]
                                },
                                {
                                  "property_key": "file_storage_ids",
                                  "property_value": []
                                },
                                {
                                  "property_key": "ipv6_enabled",
                                  "property_value": false
                                },
                                {
                                  "property_key": "ipv6_static_enabled",
                                  "property_value": false
                                },
                                {
                                  "property_key": "private_network_only",
                                  "property_value": true
                                },
                                {
                                  "property_key": "quote_id",
                                  "property_value": null
                                },
                                {
                                  "property_key": "wait_time_minutes",
                                  "property_value": 90
                                },
                                {
                                  "property_key": "dedicated_host_id",
                                  "property_value": null
                                },
                                {
                                  "property_key": "private_interface_id",
                                  "property_value": 85535164
                                },
                                {
                                  "property_key": "public_bandwidth_limited",
                                  "property_value": null
                                },
                                {
                                  "property_key": "public_bandwidth_unlimited",
                                  "property_value": false
                                },
                                {
                                  "property_key": "tags",
                                  "property_value": null
                                },
                                {
                                  "property_key": "block_storage_ids",
                                  "property_value": []
                                },
                                {
                                  "property_key": "ip_address_id_private",
                                  "property_value": 173990966
                                },
                                {
                                  "property_key": "resource_name",
                                  "property_value": "vm1"
                                },
                                {
                                  "property_key": "resource_status",
                                  "property_value": "Active"
                                },
                                {
                                  "property_key": "bulk_vms",
                                  "property_value": []
                                },
                                {
                                  "property_key": "evault",
                                  "property_value": null
                                },
                                {
                                  "property_key": "flavor_key_name",
                                  "property_value": null
                                },
                                {
                                  "property_key": "ipv4_address_private",
                                  "property_value": "10.142.123.187"
                                },
                                {
                                  "property_key": "network_speed",
                                  "property_value": 100
                                },
                                {
                                  "property_key": "placement_group_id",
                                  "property_value": null
                                },
                                {
                                  "property_key": "ssh_key_ids",
                                  "property_value": null
                                },
                                {
                                  "property_key": "cores",
                                  "property_value": 1
                                },
                                {
                                  "property_key": "secondary_ip_addresses",
                                  "property_value": []
                                },
                                {
                                  "property_key": "resource_controller_url",
                                  "property_value": "https://cloud.ibm.com/gen1/infrastructure/virtual-server/120765732/details#main"
                                },
                                {
                                  "property_key": "ipv4_address",
                                  "property_value": ""
                                },
                                {
                                  "property_key": "hourly_billing",
                                  "property_value": true
                                },
                                {
                                  "property_key": "ipv6_address_id",
                                  "property_value": null
                                },
                                {
                                  "property_key": "notes",
                                  "property_value": ""
                                },
                                {
                                  "property_key": "timeouts",
                                  "property_value": null
                                },
                                {
                                  "property_key": "dedicated_host_name",
                                  "property_value": null
                                },
                                {
                                  "property_key": "local_disk",
                                  "property_value": false
                                },
                                {
                                  "property_key": "public_security_group_ids",
                                  "property_value": []
                                },
                                {
                                  "property_key": "ip_address_id",
                                  "property_value": null
                                },
                                {
                                  "property_key": "public_subnet_id",
                                  "property_value": null
                                },
                                {
                                  "property_key": "datacenter",
                                  "property_value": "dal09"
                                },
                                {
                                  "property_key": "id",
                                  "property_value": "120765732"
                                },
                                {
                                  "property_key": "public_ipv6_subnet",
                                  "property_value": null
                                },
                                {
                                  "property_key": "user_metadata",
                                  "property_value": null
                                },
                                {
                                  "property_key": "domain",
                                  "property_value": "example.com"
                                },
                                {
                                  "property_key": "private_subnet_id",
                                  "property_value": 876563
                                },
                                {
                                  "property_key": "private_vlan_id",
                                  "property_value": 3096262
                                },
                                {
                                  "property_key": "public_interface_id",
                                  "property_value": 85535166
                                },
                                {
                                  "property_key": "ipv6_address",
                                  "property_value": null
                                },
                                {
                                  "property_key": "private_security_group_ids",
                                  "property_value": []
                                },
                                {
                                  "property_key": "public_ipv6_subnet_id",
                                  "property_value": null
                                },
                                {
                                  "property_key": "os_reference_code",
                                  "property_value": "CENTOS_7_64"
                                },
                                {
                                  "property_key": "secondary_ip_count",
                                  "property_value": null
                                },
                                {
                                  "property_key": "image_id",
                                  "property_value": null
                                },
                                {
                                  "property_key": "memory",
                                  "property_value": 1024
                                },
                                {
                                  "property_key": "placement_group_name",
                                  "property_value": null
                                },
                                {
                                  "property_key": "private_subnet",
                                  "property_value": "10.142.123.128/26"
                                },
                                {
                                  "property_key": "transient",
                                  "property_value": false
                                },
                                {
                                  "property_key": "hostname",
                                  "property_value": "vm1"
                                },
                                {
                                  "property_key": "post_install_script_uri",
                                  "property_value": null
                                },
                                {
                                  "property_key": "public_subnet",
                                  "property_value": null
                                },
                                {
                                  "property_key": "public_vlan_id",
                                  "property_value": null
                                },
                                {
                                  "property_key": "datacenter_choice",
                                  "property_value": null
                                }
                              ],
                              "resource_type": "ibm_compute_vm_instance"
                            }
                          }
                        ],
                        "related_resources": null,
                        "null_resources": null,
                        "resources_count": 1
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you have the `Reader`, `Writer` or `Manager` service access role in IAM for IBM Cloud Schematics. ",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "404": {
              "description": "The specified workspace could not be found. Verify that you entered the correct workspace ID. To find the workspace ID, use the `GET /v1/workspace` API.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact IBM Cloud support.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl --location --request GET https://schematics.cloud.ibm.com/v1/workspaces/{id}/resources -H \"Authorization: Bearer <access_token>\" -H \"refresh_token: <refresh_token>\"--header \"Content-Type: application/json\" --data-raw '{\"name\": \"testbranchReso\",\"type\": [\"terraform_v0.12\"],\"description\": \"terraform workspace\",\"tags\": [\"test:bbbranch\"],\"template_repo\": {\"url\": \"<source_repo_url>\"},\"template_data\": [{\"folder\": \".\",\"type\": \"terraform_v0.12\",\"variablestore\": [{\"value\": \"variable_value1\",\"name\": \"ibmcloud_api_key\",\"type\": \"string\",\"secure\": true}],\"env_values\":[{\"TF_LOG\":\"debug\"}]}]}'"
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "resourcesList, detailedResponse, err := schematicsService.GetWorkspaceResources(&schematicsv1.GetWorkspaceResourcesOptions{\n",
                        "    WID: <workspace_id>,\n",
                        "})\n",
                        "\n",
                        "if err != nil {\n",
                        "    panic(err)\n",
                        "}\n",
                        "\n",
                        "w, err := json.MarshalIndent(resourcesList, \"\", \"  \")\n",
                        "fmt.Println(string(w))"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "const params = {\n",
                        "  wId: '<workspace_id>',\n",
                        "};\n",
                        "\n",
                        "schematicsService.getWorkspaceResources(params)\n",
                        "  .then(res => {\n",
                        "    console.log(JSON.stringify(res.result, null, 2));\n",
                        "  })\n",
                        "  .catch(err => {\n",
                        "    console.warn(err)\n",
                        "  });"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "list_template_resources = schematics_service.get_workspace_resources(\n",
                        "    w_id='<workspace_id>'\n",
                        ").get_result()\n",
                        "\n",
                        "print(json.dumps(list_template_resources, indent=2))"
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "GetWorkspaceResourcesOptions getWorkspaceResourcesOptions = new GetWorkspaceResourcesOptions.Builder()\n",
                        ".wId(\"<workspace_id>\")\n",
                        ".build();\n",
                        "\n",
                        "Response<List<TemplateResources>> response = service.getWorkspaceResources(getWorkspaceResourcesOptions).execute();\n",
                        "List<TemplateResources> listTemplateResources = response.getResult();\n",
                        "\n",
                        "System.out.println(listTemplateResources);"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "/v1/workspaces/{w_id}/output_values": {
        "get": {
          "tags": [
            "workspaces"
          ],
          "summary": "List workspace output values",
          "description": "Retrieve a list of Terraform output variables. You define output values in your Terraform template to include information that you want to make accessible for other Terraform templates. ",
          "operationId": "get_workspace_outputs",
          "parameters": [
            {
              "description": "The ID of the workspace for which you want to retrieve output values. To find the workspace ID, use the `GET /workspaces` API.",
              "name": "w_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully retrieved the output values in JSON format.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/OutputValues"
                  },
                  "examples": {
                    "response": {
                      "value": {
                        "id": "cef7da5d-dd7c-48",
                        "folder": ".",
                        "type": "terraform_v0.12",
                        "output_values": [
                          {
                            "sshcommand": {
                              "sensitive": false,
                              "type": "string",
                              "value": "ssh root@111.22.111.111"
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Reader`, `Writer`, or `Manager` service access role in IAM for IBM Cloud Schematics. ",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "404": {
              "description": "The specified workspace could not be found. Verify that you entered the correct workspace ID. To find the ID, use the `GET /v1/workspace` API.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact IBM Cloud support.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl -X GET https://schematics.cloud.ibm.com/v1/workspaces/{id}/output_values -H \"Authorization: <iam_token>\""
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "outputs, detailedResponse, err := schematicsService.GetWorkspaceOutputs(&schematicsv1.GetWorkspaceOutputsOptions{\n",
                        "    WID: <workspace_id>,\n",
                        "})\n",
                        "\n",
                        "if err != nil {\n",
                        "    panic(err)\n",
                        "}\n",
                        "\n",
                        "w, err := json.MarshalIndent(outputs, \"\", \"  \")\n",
                        "fmt.Println(string(w))"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "const params = {\n",
                        "  wId: '<workspace_id>',\n",
                        "};\n",
                        "\n",
                        "schematicsService.getWorkspaceOutputs(params)\n",
                        "  .then(res => {\n",
                        "    console.log(JSON.stringify(res.result, null, 2));\n",
                        "  })\n",
                        "  .catch(err => {\n",
                        "    console.warn(err)\n",
                        "  });"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "list_output_values_inner = schematics_service.get_workspace_outputs(\n",
                        "    w_id='<workspace_id>'\n",
                        ").get_result()\n",
                        "\n",
                        "print(json.dumps(list_output_values_inner, indent=2))"
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "GetWorkspaceOutputsOptions getWorkspaceOutputsOptions = new GetWorkspaceOutputsOptions.Builder()\n",
                        ".wId(\"<workspace_id>\")\n",
                        ".build();\n",
                        "\n",
                        "Response<List<OutputValuesInner>> response = service.getWorkspaceOutputs(getWorkspaceOutputsOptions).execute();\n",
                        "List<OutputValuesInner> listOutputValuesInner = response.getResult();\n",
                        "\n",
                        "System.out.println(listOutputValuesInner);"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "/v1/workspaces/{w_id}/templates/values": {
        "get": {
          "tags": [
            "workspaces"
          ],
          "summary": "Get workspace template details",
          "description": "Retrieve detailed information about the Terraform template that your workspace points to.\n\n <h3>Authorization</h3> \n\n Schematics support generic authorization such as service access or platform access to the workspace ID and the resource group. For more information, about Schematics access and permissions, see [Schematics service access roles and required permissions](/docs/schematics?topic=schematics-access#access-roles). ",
          "x-ibm-events": {
            "summary": "Auditing",
            "events": [
              {
                "name": "schematics.workspace.template_metadata_values"
              }
            ]
          },
          "operationId": "get_all_workspace_inputs",
          "parameters": [
            {
              "description": "The ID of the workspace for which you want to retrieve information about the associated Terraform template. To find the workspace ID, use the `GET /v1/workspaces` API.",
              "name": "w_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully retrieved details about the Terraform template that your workspace points to.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/WorkspaceTemplateValuesResponse"
                  },
                  "examples": {
                    "response": {
                      "value": {
                        "template_data": [
                          {
                            "id": "1111aa2221-a11a-11",
                            "folder": ".",
                            "type": "terraform_v0.12",
                            "values_url": "https://schematics.cloud.ibm.com/v1/workspaces/myworkspace-123456/template_data/71111aa2221-a11a-11/values",
                            "values": "",
                            "values_metadata": [
                              {
                                "name": "variable_name1",
                                "type": "string"
                              },
                              {
                                "name": "variable_name2",
                                "type": "string"
                              }
                            ],
                            "variablestore": [
                              {
                                "name": "variable_name1",
                                "secure": false,
                                "value": "variable_value1",
                                "type": "",
                                "description": ""
                              },
                              {
                                "name": "variable_name2",
                                "secure": false,
                                "value": "variable_value2",
                                "type": "",
                                "description": ""
                              }
                            ]
                          }
                        ],
                        "runtime_data": [
                          {
                            "id": "1111aa2221-a11a-11",
                            "engine_name": "terraform",
                            "engine_version": "v0.12.24",
                            "state_store_url": "https://schematics.cloud.ibm.com/v1/workspaces/myworkspace-123456/runtime_data/1111aa2221-a11a-11/state_store",
                            "log_store_url": "https://schematics.cloud.ibm.com/v1/workspaces/myworkspace-123456/runtime_data/1111aa2221-a11a-11/log_store"
                          }
                        ],
                        "shared_data": {
                          "cluster_id": null,
                          "namespace": null,
                          "region": "",
                          "resource_group_id": ""
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Reader`, `Writer` or `Manager` service access role in IAM for IBM Cloud Schematics. ",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "404": {
              "description": "The specified workspace ID could not be found. Verify that you entered the correct workspace ID. To find the workspace ID, use the `GET /v1/workspaces` API. ",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact IBM Cloud support.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl -X GET https://schematics.cloud.ibm.com/v1/workspaces/{id}/templates/values -H \"Authorization: <iam_token>\""
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "WorkspaceTemplateDetails, detailedResponse, err := schematicsService.GetAllWorkspaceInputs(&schematicsv1.GetAllWorkspaceInputsOptions{\n",
                        "    WID: <workspace_id>,\n",
                        "})\n",
                        "\n",
                        "if err != nil {\n",
                        "    panic(err)\n",
                        "}\n",
                        "\n",
                        "w, err := json.MarshalIndent(WorkspaceTemplateDetails, \"\", \"  \")\n",
                        "fmt.Println(string(w))"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "const params = {\n",
                        "  wId: '<workspace_id>',\n",
                        "};\n",
                        "\n",
                        "schematicsService.getAllWorkspaceInputs(params)\n",
                        "  .then(res => {\n",
                        "    console.log(JSON.stringify(res.result, null, 2));\n",
                        "  })\n",
                        "  .catch(err => {\n",
                        "    console.warn(err)\n",
                        "  });"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "workspace_template_values_response = schematics_service.get_all_workspace_inputs(\n",
                        "    w_id='<workspace_id>'\n",
                        ").get_result()\n",
                        "\n",
                        "print(json.dumps(workspace_template_values_response, indent=2))"
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "GetAllWorkspaceInputsOptions getAllWorkspaceInputsOptions = new GetAllWorkspaceInputsOptions.Builder()\n",
                        ".wId(\"<workspace_id>\")\n",
                        ".build();\n",
                        "\n",
                        "Response<WorkspaceTemplateValuesResponse> response = service.getAllWorkspaceInputs(getAllWorkspaceInputsOptions).execute();\n",
                        "WorkspaceTemplateValuesResponse workspaceTemplateValuesResponse = response.getResult();\n",
                        "\n",
                        "System.out.println(workspaceTemplateValuesResponse);"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "/v1/workspaces/{w_id}/templates/readme": {
        "get": {
          "tags": [
            "workspaces"
          ],
          "summary": "Show workspace template readme",
          "description": "Retrieve the `README.md` file of the Terraform of IBM Cloud catalog template that your workspace points to. ",
          "operationId": "get_workspace_readme",
          "parameters": [
            {
              "description": "The ID of the workspace for which you want to retrieve the `README.md` file that is stored in the GitHub or GitLab repository that your workspace points to. To find the workspace ID, use the `GET /v1/workspaces` API.",
              "name": "w_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The GitHub or GitLab branch where the `README.md` file is stored, or the commit ID or tag that references the `README.md` file that you want to retrieve. If you do not specify this option, the `README.md` file is retrieved from the master branch by default.",
              "name": "ref",
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully retrieved the `README.md` of the template that your workspace points to.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TemplateReadme"
                  },
                  "examples": {
                    "response": {
                      "value": {
                        "readme": "&lt;p&gt;This is my readme.&lt;/p&gt;\n"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The source URL format is invalid, the source repository is not supported by Schematics, or the source repository API returns an HTTP error.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Reader`, `Writer`, or `Manager` service access role in IAM for IBM Cloud Schematics.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "404": {
              "description": "The `README.md` file could not be retrieved, because an HTTP error was returned by Git.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact IBM Cloud support.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl -X GET https://schematics.cloud.ibm.com/v1/workspaces/{id}/templates/readme -H \"Authorization: <iam_token>\""
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "readme, detailedResponse, err := schematicsService.GetWorkspaceReadme(&schematicsv1.GetWorkspaceReadmeOptions{\n",
                        "    WID: <workspace_id>,\n",
                        "})\n",
                        "\n",
                        "if err != nil {\n",
                        "    panic(err)\n",
                        "}\n",
                        "\n",
                        "w, err := json.MarshalIndent(readme, \"\", \"  \")\n",
                        "fmt.Println(string(w))"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "const params = {\n",
                        "  wId: '<workspace_id>',\n",
                        "};\n",
                        "\n",
                        "schematicsService.getWorkspaceReadme(params)\n",
                        "  .then(res => {\n",
                        "    console.log(JSON.stringify(res.result, null, 2));\n",
                        "  })\n",
                        "  .catch(err => {\n",
                        "    console.warn(err)\n",
                        "  });"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "template_readme = schematics_service.get_workspace_readme(\n",
                        "    w_id='<workspace_id>'\n",
                        ").get_result()\n",
                        "\n",
                        "print(json.dumps(template_readme, indent=2))"
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "GetWorkspaceReadmeOptions getWorkspaceReadmeOptions = new GetWorkspaceReadmeOptions.Builder()\n",
                        ".wId(\"<workspace_id>\")\n",
                        ".build();\n",
                        "\n",
                        "Response<TemplateReadme> response = service.getWorkspaceReadme(getWorkspaceReadmeOptions).execute();\n",
                        "TemplateReadme templateReadme = response.getResult();\n",
                        "\n",
                        "System.out.println(templateReadme);"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "/v1/workspaces/{w_id}/template_data/{t_id}/values": {
        "get": {
          "tags": [
            "workspaces"
          ],
          "summary": "List workspace input variables",
          "description": "Retrieve a list of input variables that are declared in your Terraform or IBM Cloud catalog template.\n\n <h3>Authorization</h3> \n\n Schematics support generic authorization such as service access or platform access to the workspace ID and the resource group. For more information, about Schematics access and permissions, see [Schematics service access roles and required permissions](/docs/schematics?topic=schematics-access#access-roles).",
          "x-ibm-events": {
            "summary": "Auditing",
            "events": [
              {
                "name": "schematics.workspace.template_values"
              }
            ]
          },
          "operationId": "get_workspace_inputs",
          "parameters": [
            {
              "description": "The ID of the workspace for which you want to retrieve the input variables that you declared in your Terraform template. To find the workspace ID, use the `GET /v1/workspaces` API.",
              "name": "w_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The ID of the Terraform template for which you want to retrieve all your input variables. When you create a workspace, the Terraform template that your workspace points to is assigned a unique ID. To find this ID, use the `GET /v1/workspaces` API and review the `template_data.id` value.",
              "name": "t_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully retrieved a list of input variables that are declared in your template.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TemplateValues"
                  },
                  "examples": {
                    "response": {
                      "value": {
                        "values_metadata": [
                          {
                            "name": "variable_name",
                            "type": "string"
                          }
                        ],
                        "variablestore": [
                          {
                            "name": "variable_name",
                            "secure": false,
                            "value": "variable_value",
                            "type": "",
                            "description": ""
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Reader`, `Writer` or `Manager` service access role in IAM for IBM Cloud Schematics. ",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "404": {
              "description": "The specified workspace or template could not be found. Verify that you entered the correct workspace and template ID. To find the workspace and template ID, use the `GET /v1/workspaces` API.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact IBM Cloud support.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl -X GET https://schematics.cloud.ibm.com/v1/workspaces/{id}/template_data/{template_id}/values -H \"Authorization: <iam_token>\""
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "inputValues, detailedResponse, err := schematicsService.GetWorkspaceInputs(&schematicsv1.GetWorkspaceInputsOptions{\n",
                        "    WID: <workspace_id>,\n",
                        "    TID: <template_id>,\n",
                        "})\n",
                        "\n",
                        "if err != nil {\n",
                        "    panic(err)\n",
                        "}\n",
                        "\n",
                        "w, err := json.MarshalIndent(inputValues, \"\", \"  \")\n",
                        "fmt.Println(string(w))"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "const params = {\n",
                        "  wId: '<workspace_id>',\n",
                        "  tId: '<template_id>',\n",
                        "};\n",
                        "\n",
                        "schematicsService.getWorkspaceInputs(params)\n",
                        "  .then(res => {\n",
                        "    console.log(JSON.stringify(res.result, null, 2));\n",
                        "  })\n",
                        "  .catch(err => {\n",
                        "    console.warn(err)\n",
                        "  });"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "template_values = schematics_service.get_workspace_inputs(\n",
                        "    w_id='<workspace_id>',\n",
                        "    t_id='<template_id>'\n",
                        ").get_result()\n",
                        "\n",
                        "print(json.dumps(template_values, indent=2))"
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "GetWorkspaceInputsOptions getWorkspaceInputsOptions = new GetWorkspaceInputsOptions.Builder()\n",
                        ".wId(\"<workspace_id>\")\n",
                        ".tId(\"<template_id>\")\n",
                        ".build();\n",
                        "\n",
                        "Response<TemplateValues> response = service.getWorkspaceInputs(getWorkspaceInputsOptions).execute();\n",
                        "TemplateValues templateValues = response.getResult();\n",
                        "\n",
                        "System.out.println(templateValues);"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        "put": {
          "tags": [
            "workspaces"
          ],
          "description": "Update the input variables for the template that your workspace points to.",
          "summary": "Update workspace input variables",
          "operationId": "replace_workspace_inputs",
          "parameters": [
            {
              "description": "The ID of the workspace for which you want to update input variables. To find the ID, use the `GET /v1/workspaces` API. ",
              "name": "w_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The ID of the Terraform template for which you want to update input variables. When you create a workspace, the Terraform template that your workspace points to is assigned a unique ID. To find this ID, use the `GET /v1/workspaces` API and review the `template_data.id` value.",
              "name": "t_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserValuesRequest"
                }
              }
            },
            "description": "Input parameters to update workspace input variables.",
            "required": true
          },
          "x-codegen-request-body-name": "workspace",
          "responses": {
            "200": {
              "description": "Successfully updated input variables for the template that your workspace points to.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserValues"
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Writer` or `Manager` service access role in IAM for IBM Cloud Schematics. ",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "404": {
              "description": "The specified workspace or template could not be found. Verify that you entered the correct workspace and template ID. To find the workspace and template ID, use the `GET /v1/workspaces` API.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact IBM Cloud support.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example to update the workspace by using the environment variables with key value pair.",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl --location -g --request PUT https://schematics.cloud.ibm.com/v1/workspaces/{id}/template_data/{template_id}/values --header \"Authorization: <iam_token>\" --header \"Content-Type: application/json\" --data-raw \"{\"env_values\": [{\"name\": \"env_variable_name\", \"value\": \"env_variable_value\" }], \"values\": \"string\", \"variablestore\": [{\"description\": \"<variable_description>\", \"name\": \"<variable_name>\", \"secure\": <true_or_false>, \"use_default\": <true_or_false>, \"type\": \"<variable_datatype>\", \"value\": \"<variable_value>\"}]}"
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "envVariables := []interface{}{\n",
                        "    map[string]interface{}{\n",
                        "        \"KEY1\": \"VALUE1\",\n",
                        "        \"KEY2\": \"VALUE2\",\n",
                        "    }}\n",
                        "\n",
                        "varStoreToUpdate := []schematicsv1.WorkspaceVariableRequest{\n",
                        "    {\n",
                        "        Name:  core.StringPtr(\"sample_var\"),\n",
                        "        Type:  core.StringPtr(\"string\"),\n",
                        "        Value: core.StringPtr(\"var1_updated\"),\n",
                        "    },\n",
                        "}\n",
                        "\n",
                        "updateInputs, detailedResponse, err := schematicsService.ReplaceWorkspaceInputs(&schematicsv1.ReplaceWorkspaceInputsOptions{\n",
                        "    WID:           ws.ID,\n",
                        "    TID:           ws.TemplateData[0].ID,\n",
                        "    EnvValues:     envVariables,\n",
                        "    Variablestore: varStoreToUpdate,\n",
                        "})\n",
                        "\n",
                        "if err != nil {\n",
                        "    panic(err)\n",
                        "}\n",
                        "\n",
                        "w, err := json.MarshalIndent(updateInputs, \"\", \"  \")\n",
                        "fmt.Println(string(w))"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "const workspaceVariableUpdateRequestModel = {\n",
                        "  name: 'sample_var',\n",
                        "  type: 'string',\n",
                        "  value: 'var1_updated',\n",
                        "};\n",
                        "\n",
                        "const params = {\n",
                        "  wId: '<workspace_id>',\n",
                        "  tId: '<template_id>',\n",
                        "  variablestore: [workspaceVariableUpdateRequestModel]\n",
                        "};\n",
                        "\n",
                        "schematicsService.replaceWorkspaceInputs(params)\n",
                        "  .then(res => {\n",
                        "    console.log(JSON.stringify(res.result, null, 2));\n",
                        "  })\n",
                        "  .catch(err => {\n",
                        "    console.warn(err)\n",
                        "  });"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "env_value_update_request_model = {}\n",
                        "env_value_update_request_model['name'] = 'KEY1'\n",
                        "env_value_update_request_model['value'] = 'VALUE1'\n",
                        "\n",
                        "workspace_variable_update_request_model = {}\n",
                        "workspace_variable_update_request_model['name'] = 'sample_var'\n",
                        "workspace_variable_update_request_model['value'] = 'var1_updated'\n",
                        "\n",
                        "user_values = schematics_service.replace_workspace_inputs(\n",
                        "    w_id='<workspace_id>',\n",
                        "    t_id='<template_id>',\n",
                        "    env_values=[env_value_update_request_model],\n",
                        "    variablestore=[workspace_variable_update_request_model],\n",
                        ").get_result()\n",
                        "\n",
                        "print(json.dumps(user_values, indent=2))"
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "// Construct an instance of the EnvValueUpdateRequest model\n",
                        "EnvValueUpdateRequest envValueUpdateRequestModel = new EnvValueUpdateRequest.Builder()\n",
                        ".name(\"KEY1\")\n",
                        ".value(\"VALUE1\")\n",
                        ".build();\n",
                        "\n",
                        "// Construct an instance of the WorkspaceVariableUpdateRequest model\n",
                        "WorkspaceVariableUpdateRequest workspaceVariableUpdateRequestModel = new WorkspaceVariableUpdateRequest.Builder()\n",
                        ".name(\"sample_var\")\n",
                        ".value(\"var1_updated\")\n",
                        ".build();\n",
                        "\n",
                        "ReplaceWorkspaceInputsOptions replaceWorkspaceInputsOptions = new ReplaceWorkspaceInputsOptions.Builder()\n",
                        ".wId(\"<workspace_id>\")\n",
                        ".tId(\"<template_id>\")\n",
                        ".envValues(new java.util.ArrayList<EnvValueUpdateRequest>(java.util.Arrays.asList(envValueUpdateRequestModel)))\n",
                        ".variablestore(new java.util.ArrayList<WorkspaceVariableUpdateRequest>(java.util.Arrays.asList(workspaceVariableUpdateRequestModel)))\n",
                        ".build();\n",
                        "\n",
                        "Response<UserValues> response = service.replaceWorkspaceInputs(replaceWorkspaceInputsOptions).execute();\n",
                        "UserValues userValues = response.getResult();\n",
                        "\n",
                        "System.out.println(userValues);"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "/v1/workspaces/{w_id}/template_data/{t_id}/values_metadata": {
        "get": {
          "tags": [
            "workspaces"
          ],
          "summary": "List workspace variable metadata",
          "description": "Retrieve the metadata for all the workspace input variables that are declared in the template that your workspace points to.",
          "operationId": "get_workspace_input_metadata",
          "parameters": [
            {
              "description": "The ID of the workspace for which you want to retrieve the metadata of the input variables that are declared in the template. To find the workspace ID, use the `GET /v1/workspaces` API.",
              "name": "w_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The ID of the Terraform template for which you want to retrieve the metadata of your input variables. When you create a workspace, the Terraform template that your workspace points to is assigned a unique ID. To find this ID, use the `GET /v1/workspaces` API and review the `template_data.id` value.",
              "name": "t_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully retrieved the metadata of the input variables for the template that your workspace points to.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TemplateMetadata"
                  },
                  "examples": {
                    "response": {
                      "value": {
                        "name": "variable_name",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access. Verify that you are assigned the `Reader`, `Writer` or `Manager` service access role in IAM for IBM Cloud Schematics. ",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "404": {
              "description": "The specified workspace or template ID could not be found. Verify that you entered the correct workspace and template ID. To find the workspace and template ID, use the `GET /v1/workspaces` API.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact IBM Cloud support.",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/APIMessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "curl -X GET https://schematics.cloud.ibm.com/v1/workspaces/{id}/template_data/{template_id}/values_metadata -H \"Authorization: <iam_token>\""
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "inputs, detailedResponse, err := schematicsService.GetWorkspaceInputMetadata(&schematicsv1.GetWorkspaceInputMetadataOptions{\n",
                        "    WID: <workspace_id>\n",
                        "    TID: <template_id>,\n",
                        "})\n",
                        "\n",
                        "if err != nil {\n",
                        "    panic(err)\n",
                        "}\n",
                        "\n",
                        "w, err := json.MarshalIndent(inputs, \"\", \"  \")\n",
                        "fmt.Println(string(w))"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "const params = {\n",
                        "  wId: '<workspace_id>',\n",
                        "  tId: '<template_id>',\n",
                        "};\n",
                        "\n",
                        "schematicsService.getWorkspaceInputMetadata(params)\n",
                        "  .then(res => {\n",
                        "    console.log(JSON.stringify(res.result, null, 2));\n",
                        "  })\n",
                        "  .catch(err => {\n",
                        "    console.warn(err)\n",
                        "  });"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "result = schematics_service.get_workspace_input_metadata(\n",
                        "    w_id='<workspace_id>',\n",
                        "    t_id='<template_id>'\n",
                        ").get_result()\n",
                        "\n",
                        "print(json.dumps(result, indent=2))"
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "GetWorkspaceInputMetadataOptions getWorkspaceInputMetadataOptions = new GetWorkspaceInputMetadataOptions.Builder()\n",
                        ".wId(\"<workspace_id>\")\n",
                        ".tId(\"<template_id>\")\n",
                        ".build();\n",
                        "\n",
                        "Response<List<Object>> response = service.getWorkspaceInputMetadata(getWorkspaceInputMetadataOptions).execute();\n",
                        "List<Object> result = response.getResult();\n",
                        "\n",
                        "System.out.println(result);"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "Action": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The unique name of your action. The name can be up to 128 characters long and can include alphanumeric characters, spaces, dashes, and underscores. **Example** you can use the name to stop action.",
              "example": "Stop Action"
            },
            "description": {
              "type": "string",
              "description": "The description of your action. The description can be up to 2048 characters long in size. **Example** you can use the description to stop the targets."
            },
            "location": {
              "$ref": "#/components/schemas/LocationEnum"
            },
            "resource_group": {
              "type": "string",
              "description": "Resource-group name for an action.  By default, action is created in default resource group."
            },
            "tags": {
              "type": "array",
              "description": "Action tags",
              "items": {
                "type": "string"
              }
            },
            "user_state": {
              "$ref": "#/components/schemas/UserState"
            },
            "source_readme_url": {
              "type": "string",
              "description": "URL of the `README` file, for the source URL."
            },
            "source": {
              "$ref": "#/components/schemas/ExternalSource"
            },
            "source_type": {
              "$ref": "#/components/schemas/ExternalSourceEnum"
            },
            "command_parameter": {
              "type": "string",
              "description": "Schematics job command parameter (playbook-name)."
            },
            "bastion": {
              "$ref": "#/components/schemas/BastionResourceDefinition"
            },
            "targets_ini": {
              "type": "string",
              "description": "Inventory of host and host group for the playbook in `INI` file format. For example, `\"targets_ini\": \"[webserverhost] \n 172.22.192.6 \n [dbhost] \n 172.22.192.5\"`. For more information, about an inventory host group syntax, see [Inventory host groups](/docs/schematics?topic=schematics-schematics-cli-reference#schematics-inventory-host-grps)."
            },
            "inputs": {
              "type": "array",
              "description": "Input variables for an action.",
              "items": {
                "$ref": "#/components/schemas/VariableData"
              }
            },
            "outputs": {
              "type": "array",
              "description": "Output variables for an action.",
              "items": {
                "$ref": "#/components/schemas/VariableData"
              }
            },
            "settings": {
              "type": "array",
              "description": "Environment variables for an action.",
              "items": {
                "$ref": "#/components/schemas/VariableData"
              }
            },
            "trigger_record_id": {
              "type": "string",
              "description": "ID to the trigger."
            },
            "id": {
              "type": "string",
              "description": "Action ID",
              "readOnly": true
            },
            "crn": {
              "type": "string",
              "description": "Action Cloud Resource Name.",
              "readOnly": true
            },
            "account": {
              "type": "string",
              "description": "Action account ID.",
              "readOnly": true
            },
            "source_created_at": {
              "type": "string",
              "description": "Action Playbook Source creation time.",
              "format": "date-time",
              "readOnly": true,
              "example": "2019-11-06T16:19:32Z"
            },
            "source_created_by": {
              "type": "string",
              "description": "E-mail address of user who created the Action Playbook Source.",
              "readOnly": true
            },
            "source_updated_at": {
              "type": "string",
              "description": "The action playbook updation time.",
              "format": "date-time",
              "readOnly": true,
              "example": "2019-11-06T16:19:32Z"
            },
            "source_updated_by": {
              "type": "string",
              "description": "E-mail address of user who updated the action playbook source.",
              "readOnly": true
            },
            "created_at": {
              "type": "string",
              "description": "Action creation time.",
              "format": "date-time",
              "readOnly": true,
              "example": "2019-11-06T16:19:32Z"
            },
            "created_by": {
              "type": "string",
              "description": "E-mail address of the user who created an action.",
              "readOnly": true
            },
            "updated_at": {
              "type": "string",
              "description": "Action updation time.",
              "format": "date-time",
              "readOnly": true,
              "example": "2019-11-06T16:19:32Z"
            },
            "updated_by": {
              "type": "string",
              "description": "E-mail address of the user who updated an action.",
              "readOnly": true
            },
            "state": {
              "$ref": "#/components/schemas/Action_state"
            },
            "playbook_names": {
              "type": "array",
              "description": "Playbook names retrieved from the respository.",
              "readOnly": true,
              "items": {
                "type": "string"
              }
            },
            "sys_lock": {
              "$ref": "#/components/schemas/SystemLock"
            }
          },
          "description": "Complete action details with the user inputs and the system generated data."
        },
        "Action_state": {
          "type": "object",
          "properties": {
            "status_code": {
              "$ref": "#/components/schemas/AutomationStatusEnum"
            },
            "status_message": {
              "type": "string",
              "description": "Automation status message - to be displayed along with the status_code"
            }
          },
          "description": "Computed state of an action"
        },
        "AutomationStatusEnum": {
          "description": "Status of automation (workspace or action)",
          "type": "string",
          "enum": [
            "normal",
            "pending",
            "disabled",
            "critical"
          ]
        },
        "ActionList": {
          "description": "List of Action definition response",
          "type": "object",
          "required": [
            "limit",
            "offset"
          ],
          "properties": {
            "total_count": {
              "type": "integer",
              "format": "int64",
              "description": "Total number of records"
            },
            "limit": {
              "type": "integer",
              "format": "int64",
              "description": "Number of records returned"
            },
            "offset": {
              "type": "integer",
              "format": "int64",
              "description": "Skipped number of records"
            },
            "actions": {
              "description": "List of action records",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ActionLite"
              }
            }
          }
        },
        "ActionLite": {
          "description": "Action summary profile with user inputs and system generated data",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Action name (unique for an account)",
              "example": "Stop Action"
            },
            "description": {
              "type": "string",
              "description": "Action description",
              "example": "This Action can be used to Stop the VSIs"
            },
            "id": {
              "type": "string",
              "description": "Action Id"
            },
            "crn": {
              "type": "string",
              "description": "Action Cloud Resource Name"
            },
            "location": {
              "$ref": "#/components/schemas/LocationEnum"
            },
            "resource_group": {
              "type": "string",
              "description": "Resource-group name for the Action.  By default, Action will be created in Default Resource Group"
            },
            "namespace": {
              "type": "string",
              "description": "name of the namespace"
            },
            "tags": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Action tags"
            },
            "playbook_name": {
              "type": "string",
              "description": "Name of the selected playbook"
            },
            "user_state": {
              "$ref": "#/components/schemas/UserState"
            },
            "state": {
              "description": "Computed state of the Action",
              "type": "object",
              "properties": {
                "status_code": {
                  "$ref": "#/components/schemas/AutomationStatusEnum"
                },
                "status_message": {
                  "type": "string",
                  "description": "Automation status message - to be displayed along with the status_code"
                }
              }
            },
            "sys_lock": {
              "$ref": "#/components/schemas/SystemLock"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "Action creation time",
              "example": "2019-11-06T16:19:32Z"
            },
            "created_by": {
              "type": "string",
              "description": "Email address of user who created the action"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "description": "Action updation time",
              "example": "2019-11-06T16:19:32Z"
            },
            "updated_by": {
              "type": "string",
              "description": "Email address of user who updated the action"
            }
          }
        },
        "APIResponseMessage": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string",
              "description": "Message text"
            },
            "message_id": {
              "type": "string",
              "description": "Message Id for translation"
            },
            "request_id": {
              "type": "string",
              "description": "Request Id for request tracking"
            },
            "status_code": {
              "type": "integer",
              "description": "API Response code",
              "format": "int64"
            },
            "timestamp": {
              "type": "string",
              "description": "API response timestamp",
              "format": "date-time"
            }
          },
          "description": "API Error Message"
        },
        "APIMessagePayload": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string",
              "description": "Response status message",
              "x-go-name": "Message"
            },
            "messageid": {
              "type": "string",
              "description": "Response status message id",
              "x-go-name": "MessageID"
            },
            "requestid": {
              "type": "string",
              "description": "Response request id",
              "x-go-name": "RequestID"
            },
            "statuscode": {
              "type": "integer",
              "description": "Response status code",
              "format": "int64",
              "x-go-name": "StatusCode"
            },
            "timestamp": {
              "type": "string",
              "description": "Response time-stamp",
              "format": "date-time",
              "x-go-name": "TimeStamp"
            }
          },
          "description": "APIMessagePayload -"
        },
        "BastionResourceDefinition": {
          "description": "Describes a bastion resource",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Bastion Name(Unique)"
            },
            "host": {
              "type": "string",
              "description": "Reference to the Inventory resource definition"
            }
          }
        },
        "CatalogRef": {
          "type": "object",
          "properties": {
            "dry_run": {
              "type": "boolean",
              "description": "Dry run"
            },
            "item_icon_url": {
              "type": "string",
              "description": "The URL to the icon of the software template in the IBM Cloud catalog."
            },
            "item_id": {
              "type": "string",
              "description": "The ID of the software template that you chose to install from the IBM Cloud catalog. This software is provisioned with Schematics."
            },
            "item_name": {
              "type": "string",
              "description": "The name of the software that you chose to install from the IBM Cloud catalog."
            },
            "item_readme_url": {
              "type": "string",
              "description": "The URL to the readme file of the software template in the IBM Cloud catalog."
            },
            "item_url": {
              "type": "string",
              "description": "The URL to the software template in the IBM Cloud catalog."
            },
            "launch_url": {
              "type": "string",
              "description": "The URL to the dashboard to access your software. "
            },
            "offering_version": {
              "type": "string",
              "description": "The version of the software template that you chose to install from the IBM Cloud catalog. "
            }
          },
          "description": "Information about the software template that you chose from the IBM Cloud catalog. This information is returned for IBM Cloud catalog offerings only. "
        },
        "CommandEnum": {
          "description": "Schematics job command name",
          "type": "string",
          "enum": [
            "ansible_playbook_run",
            "ansible_playbook_check"
          ]
        },
        "EnvVariableRequest": {
          "type": "array",
          "description": "A list of environment variables that you want to apply during the execution of a bash script or Terraform action. This field must be provided as a list of key-value pairs, for example, **TF_LOG=debug**. Each entry will be a map with one entry where `key is the environment variable name and value is value`. You can define environment variables for IBM Cloud catalog offerings that are provisioned by using a bash script. See [example to use special environment variable](/docs/schematics?topic=schematics-set-parallelism#parallelism-example) that are supported by Schematics.",
          "items": {
            "$ref": "#/components/schemas/EnvVariableRequestMap"
          }
        },
        "EnvVariableRequestMap": {
          "type": "object",
          "description": "One variable is a map where one entry is there with key as name of the env var and the value as value. "
        },
        "EnvValueUpdateRequest": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Environment variable name"
            },
            "value": {
              "type": "string",
              "description": "Value for environment variable"
            }
          },
          "description": "EnvValueUpdateRequest"
        },
        "EnvVariableResponse": {
          "type": "object",
          "properties": {
            "hidden": {
              "type": "boolean",
              "description": "Environment variable is hidden"
            },
            "name": {
              "type": "string",
              "description": "Environment variable name"
            },
            "secure": {
              "type": "boolean",
              "description": "Environment variable is secure"
            },
            "value": {
              "type": "string",
              "description": "Value for environment variable"
            }
          },
          "description": "EnvVariableResponse -"
        },
        "ExternalSource": {
          "description": "Source of templates is playbooks",
          "type": "object",
          "required": [
            "source_type"
          ],
          "properties": {
            "source_type": {
              "$ref": "#/components/schemas/ExternalSourceEnum"
            },
            "git": {
              "type": "object",
              "description": "Connection details to Git source",
              "properties": {
                "git_repo_url": {
                  "type": "string",
                  "description": "URL to the GIT Repository that can be used to clone the template"
                },
                "git_token": {
                  "type": "string",
                  "format": "password",
                  "description": "Personal access token to connect to Git URLs"
                },
                "git_repo_folder": {
                  "type": "string",
                  "description": "Name of the folder in the Git Repository, that contains the template"
                },
                "git_release": {
                  "type": "string",
                  "description": "Name of the release tag, used to fetch the Git Repository"
                },
                "git_branch": {
                  "type": "string",
                  "description": "Name of the branch, used to fetch the Git Repository"
                }
              }
            }
          }
        },
        "ExternalSourceEnum": {
          "description": "Type of source for the Template",
          "type": "string",
          "enum": [
            "local",
            "git_hub",
            "git_hub_enterprise",
            "git_lab",
            "ibm_git_lab",
            "ibm_cloud_catalog",
            "external_scm"
          ]
        },
        "ExternalSource_git": {
          "type": "object",
          "properties": {
            "git_repo_url": {
              "type": "string",
              "description": "URL to the GIT Repo that can be used to clone the template"
            },
            "git_token": {
              "type": "string",
              "description": "Personal Access Token to connect to Git URLs",
              "format": "password"
            },
            "git_repo_folder": {
              "type": "string",
              "description": "Name of the folder in the Git Repo, that contains the template"
            },
            "git_release": {
              "type": "string",
              "description": "Name of the release tag, used to fetch the Git Repo"
            },
            "git_branch": {
              "type": "string",
              "description": "Name of the branch, used to fetch the Git Repo"
            }
          },
          "description": "Connection details to Git source"
        },
        "InventoryResourceDefinition": {
          "description": "Inventory resource definition, its credentials and bastion",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The unique name of your inventory resource. The name can be up to 128 characters long and can include alphanumeric characters, spaces, dashes, and underscores.",
              "maxLength": 128,
              "minLength": 0
            },
            "description": {
              "type": "string",
              "description": "The description of your inventory resource. The description can be up to 2048 characters long in size."
            },
            "location": {
              "$ref": "#/components/schemas/LocationEnum"
            },
            "resource_group": {
              "type": "string",
              "description": "Resource-group name for the Inventory definition.  By default, Action will be created in Default Resource Group"
            },
            "inventories_ini": {
              "type": "string",
              "description": "Input inventory of host and host group for the playbook, in the `.ini` file format."
            },
            "resource_queries": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Input resource queries that is used to dynamically generate the inventory of host and host group for the playbook"
            }
          }
        },
        "InventoryResourceRecord": {
          "description": "Complete inventory resource details with user inputs and system generated data",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The unique name of your resource query. The name can be up to 128 characters long and can include alphanumeric characters, spaces, dashes, and underscores."
            },
            "id": {
              "type": "string",
              "readOnly": true,
              "description": "Inventory id"
            },
            "description": {
              "type": "string",
              "description": "The description of your resource query. The description can be up to 2048 characters long in size."
            },
            "location": {
              "$ref": "#/components/schemas/LocationEnum"
            },
            "resource_group": {
              "type": "string",
              "description": "Resource-group name for the Inventory definition.  By default, Action will be created in Default Resource Group"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "Inventory creation time",
              "example": "2019-11-06T16:19:32Z"
            },
            "created_by": {
              "type": "string",
              "readOnly": true,
              "description": "Email address of user who created the Inventory"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "Inventory updation time",
              "example": "2019-11-06T16:19:32Z"
            },
            "updated_by": {
              "type": "string",
              "readOnly": true,
              "description": "Email address of user who updated the Inventory"
            },
            "inventories_ini": {
              "type": "string",
              "description": "Input inventory of host and host group for the playbook,  in the `.ini` file format."
            },
            "resource_queries": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Input resource queries that is used to dynamically generate  the inventory of host and host group for the playbook"
            }
          }
        },
        "InventoryResourceRecordList": {
          "description": "List of Inventory resource records",
          "type": "object",
          "required": [
            "limit",
            "offset"
          ],
          "properties": {
            "total_count": {
              "type": "integer",
              "format": "int64",
              "description": "Total number of records"
            },
            "limit": {
              "type": "integer",
              "format": "int64",
              "description": "Number of records returned"
            },
            "offset": {
              "type": "integer",
              "format": "int64",
              "description": "Skipped number of records"
            },
            "inventories": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/InventoryResourceRecord"
              },
              "description": "List of inventory resource records"
            }
          }
        },
        "Job": {
          "description": "Complete Job with user inputs and system generated data",
          "type": "object",
          "x-terraform-resource-name": "schematics_job",
          "x-terraform-datasource-name": "schematics_job",
          "properties": {
            "command_object": {
              "$ref": "#/components/schemas/SchematicsResourceEnum"
            },
            "command_object_id": {
              "type": "string",
              "description": "Job command object id (workspace-id, action-id)"
            },
            "command_name": {
              "$ref": "#/components/schemas/CommandEnum"
            },
            "command_parameter": {
              "type": "string",
              "description": "Schematics job command parameter (playbook-name)"
            },
            "command_options": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Command line options for the command"
            },
            "inputs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/VariableData"
              },
              "description": "Job inputs used by Action"
            },
            "settings": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/VariableData"
              },
              "description": "Environment variables used by the Job while performing Action"
            },
            "tags": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "User defined tags, while running the job"
            },
            "id": {
              "type": "string",
              "readOnly": true,
              "description": "Job ID"
            },
            "name": {
              "type": "string",
              "readOnly": true,
              "description": "Job name, uniquely derived from the related Action"
            },
            "description": {
              "type": "string",
              "readOnly": true,
              "description": "The description of your job is derived from the related action. The description can be up to 2048 characters long in size."
            },
            "location": {
              "readOnly": true,
              "$ref": "#/components/schemas/LocationEnum"
            },
            "resource_group": {
              "type": "string",
              "readOnly": true,
              "description": "Resource-group name derived from the related Action"
            },
            "submitted_at": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "Job submission time",
              "example": "2019-11-06T16:19:32Z"
            },
            "submitted_by": {
              "type": "string",
              "readOnly": true,
              "description": "Email address of user who submitted the job"
            },
            "start_at": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "Job start time",
              "example": "2019-11-06T16:19:32Z"
            },
            "end_at": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "Job end time",
              "example": "2019-11-06T16:19:32Z"
            },
            "duration": {
              "type": "string",
              "readOnly": true,
              "description": "Duration of job execution; example 40 sec"
            },
            "status": {
              "readOnly": true,
              "$ref": "#/components/schemas/JobStatus"
            },
            "data": {
              "readOnly": true,
              "$ref": "#/components/schemas/JobData"
            },
            "bastion": {
              "readOnly": true,
              "$ref": "#/components/schemas/BastionResourceDefinition"
            },
            "log_summary": {
              "readOnly": true,
              "$ref": "#/components/schemas/JobLogSummary"
            },
            "log_store_url": {
              "type": "string",
              "readOnly": true,
              "description": "Job log store URL"
            },
            "state_store_url": {
              "type": "string",
              "readOnly": true,
              "description": "Job state store URL"
            },
            "results_url": {
              "type": "string",
              "readOnly": true,
              "description": "Job results store URL"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "example": "2019-11-06T16:19:32Z",
              "readOnly": true,
              "description": "Job status updation timestamp"
            }
          }
        },
        "JobData": {
          "description": "Job data",
          "type": "object",
          "required": [
            "job_type"
          ],
          "properties": {
            "job_type": {
              "description": "Type of Job",
              "type": "string",
              "enum": [
                "repo_download_job",
                "action_job"
              ]
            },
            "action_job_data": {
              "$ref": "#/components/schemas/JobDataAction"
            }
          }
        },
        "JobDataAction": {
          "description": "Action Job data",
          "type": "object",
          "properties": {
            "action_name": {
              "type": "string",
              "description": "Flow name"
            },
            "inputs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/VariableData"
              },
              "description": "Input variables data used by the Action Job"
            },
            "outputs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/VariableData"
              },
              "description": "Output variables data from the Action Job"
            },
            "settings": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/VariableData"
              },
              "description": "Environment variables used by all the templates in the Action"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "example": "2019-11-06T16:19:32Z",
              "description": "Job status updation timestamp"
            },
            "inventory_record": {
              "$ref": "#/components/schemas/InventoryResourceRecord",
              "description": "Input inventory record used by the Action",
              "readOnly": true
            },
            "materialized_inventory": {
              "type": "string",
              "description": "Materialized inventory details used by the Action Job, in .ini format"
            }
          }
        },
        "JobStateData_summary": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "State summary feature name"
            },
            "type": {
              "type": "string",
              "description": "State summary feature type",
              "enum": [
                "number",
                "string"
              ]
            },
            "value": {
              "type": "string",
              "description": "State summary feature value"
            }
          }
        },
        "JobList": {
          "description": "List of Job details",
          "type": "object",
          "required": [
            "limit",
            "offset"
          ],
          "properties": {
            "total_count": {
              "type": "integer",
              "format": "int64",
              "description": "Total number of records"
            },
            "limit": {
              "type": "integer",
              "format": "int64",
              "description": "Number of records returned"
            },
            "offset": {
              "type": "integer",
              "format": "int64",
              "description": "Skipped number of records"
            },
            "jobs": {
              "description": "List of job records",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/JobLite"
              }
            }
          }
        },
        "JobLite": {
          "description": "Job summary profile with system generated data",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Job ID"
            },
            "name": {
              "type": "string",
              "description": "Job name, uniquely derived from the related Action"
            },
            "description": {
              "type": "string",
              "description": "Job description derived from the related Action"
            },
            "command_object": {
              "$ref": "#/components/schemas/SchematicsResourceEnum"
            },
            "command_object_id": {
              "type": "string",
              "description": "Job command object id (action-id)"
            },
            "command_name": {
              "$ref": "#/components/schemas/CommandEnum"
            },
            "tags": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "User defined tags, while running the job"
            },
            "location": {
              "$ref": "#/components/schemas/LocationEnum"
            },
            "resource_group": {
              "type": "string",
              "description": "Resource-group name derived from the related Action,"
            },
            "submitted_at": {
              "type": "string",
              "format": "date-time",
              "description": "Job submission time",
              "example": "2019-11-06T16:19:32Z"
            },
            "submitted_by": {
              "type": "string",
              "description": "Email address of user who submitted the job"
            },
            "duration": {
              "type": "string",
              "description": "Duration of job execution; example 40 sec"
            },
            "start_at": {
              "type": "string",
              "format": "date-time",
              "description": "Job start time",
              "example": "2019-11-06T16:19:32Z"
            },
            "end_at": {
              "type": "string",
              "format": "date-time",
              "description": "Job end time",
              "example": "2019-11-06T16:19:32Z"
            },
            "status": {
              "$ref": "#/components/schemas/JobStatus"
            },
            "log_summary": {
              "$ref": "#/components/schemas/JobLogSummary"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "example": "2019-11-06T16:19:32Z",
              "description": "Job status updation timestamp"
            }
          }
        },
        "JobLog": {
          "description": "Job Log details",
          "type": "object",
          "properties": {
            "job_id": {
              "type": "string",
              "description": "Job Id"
            },
            "job_name": {
              "type": "string",
              "description": "Job name, uniquely derived from the related Action"
            },
            "log_summary": {
              "$ref": "#/components/schemas/JobLogSummary"
            },
            "format": {
              "type": "string",
              "enum": [
                "json",
                "html",
                "markdown",
                "rtf"
              ],
              "description": "Format of the Log text"
            },
            "details": {
              "type": "string",
              "format": "byte",
              "description": "Log text, generated by the Job"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "example": "2019-11-06T16:19:32Z",
              "description": "Job status updation timestamp"
            }
          }
        },
        "JobLogSummary": {
          "description": "Job log summary record",
          "type": "object",
          "properties": {
            "job_id": {
              "type": "string",
              "readOnly": true,
              "description": "Workspace Id"
            },
            "job_type": {
              "description": "Type of Job",
              "type": "string",
              "enum": [
                "repo_download_job",
                "workspace_job",
                "action_job"
              ]
            },
            "log_start_at": {
              "type": "string",
              "format": "date-time",
              "example": "2019-11-06T16:19:32Z",
              "readOnly": true,
              "description": "Job log start timestamp"
            },
            "log_analyzed_till": {
              "type": "string",
              "format": "date-time",
              "example": "2019-11-06T16:19:32Z",
              "readOnly": true,
              "description": "Job log update timestamp"
            },
            "elapsed_time": {
              "type": "number",
              "readOnly": true,
              "description": "Job log elapsed time (log_analyzed_till - log_start_at)"
            },
            "log_errors": {
              "type": "array",
              "readOnly": true,
              "description": "Job log errors",
              "items": {
                "type": "object",
                "properties": {
                  "error_code": {
                    "type": "string",
                    "description": "Error code in the Log"
                  },
                  "error_msg": {
                    "type": "string",
                    "description": "Summary error message in the log"
                  },
                  "error_count": {
                    "type": "number",
                    "description": "Number of occurrence"
                  }
                }
              }
            },
            "repo_download_job": {
              "description": "Repo download Job log summary",
              "type": "object",
              "properties": {
                "scanned_file_count": {
                  "type": "number",
                  "readOnly": true,
                  "description": "Number of files scanned"
                },
                "quarantined_file_count": {
                  "type": "number",
                  "readOnly": true,
                  "description": "Number of files quarantined"
                },
                "detected_filetype": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Detected template or data file type"
                },
                "inputs_count": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Number of inputs detected"
                },
                "outputs_count": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Number of outputs detected"
                }
              }
            },
            "action_job": {
              "description": "Action Job",
              "type": "object",
              "properties": {
                "host_count": {
                  "type": "number",
                  "readOnly": true,
                  "description": "number of hosts"
                },
                "task_count": {
                  "type": "number",
                  "readOnly": true,
                  "description": "number of tasks in playbook"
                },
                "play_count": {
                  "type": "number",
                  "readOnly": true,
                  "description": "number of plays in playbook"
                },
                "recap": {
                  "type": "object",
                  "description": "Recap records",
                  "properties": {
                    "hosts": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of host name"
                    },
                    "ok": {
                      "type": "number",
                      "description": "Number of OK"
                    },
                    "changed": {
                      "type": "number",
                      "description": "Number of changed"
                    },
                    "failed": {
                      "type": "number",
                      "description": "Number of failed"
                    },
                    "skipped": {
                      "type": "number",
                      "description": "Number of skipped"
                    },
                    "unreachable": {
                      "type": "number",
                      "description": "Number of unreachable"
                    }
                  }
                }
              }
            }
          }
        },
        "JobLogSummary_log_errors": {
          "type": "object",
          "properties": {
            "error_code": {
              "type": "string",
              "description": "Error code in the Log"
            },
            "error_msg": {
              "type": "string",
              "description": "Summary error message in the log"
            },
            "error_count": {
              "type": "number",
              "description": "Number of occurrence"
            }
          }
        },
        "JobLogSummary_repo_download_job": {
          "type": "object",
          "properties": {
            "scanned_file_count": {
              "type": "number",
              "description": "Number of files scanned",
              "readOnly": true
            },
            "quarantined_file_count": {
              "type": "number",
              "description": "Number of files quarantined",
              "readOnly": true
            },
            "detected_filetype": {
              "type": "string",
              "description": "Detected template or data file type",
              "readOnly": true
            },
            "inputs_count": {
              "type": "string",
              "description": "Number of inputs detected",
              "readOnly": true
            },
            "outputs_count": {
              "type": "string",
              "description": "Number of outputs detected",
              "readOnly": true
            }
          },
          "description": "Repo download Job log summary"
        },
        "JobLogSummary_action_job_recap": {
          "type": "object",
          "properties": {
            "target": {
              "type": "array",
              "description": "List of target or host name",
              "items": {
                "type": "string"
              }
            },
            "ok": {
              "type": "number",
              "description": "Number of OK"
            },
            "changed": {
              "type": "number",
              "description": "Number of changed"
            },
            "failed": {
              "type": "number",
              "description": "Number of failed"
            },
            "skipped": {
              "type": "number",
              "description": "Number of skipped"
            },
            "unreachable": {
              "type": "number",
              "description": "Number of unreachable"
            }
          },
          "description": "Recap records"
        },
        "JobLogSummary_action_job": {
          "type": "object",
          "properties": {
            "target_count": {
              "type": "number",
              "description": "number of targets or hosts",
              "readOnly": true
            },
            "task_count": {
              "type": "number",
              "description": "number of tasks in playbook",
              "readOnly": true
            },
            "play_count": {
              "type": "number",
              "description": "number of plays in playbook",
              "readOnly": true
            },
            "recap": {
              "$ref": "#/components/schemas/JobLogSummary_action_job_recap"
            }
          },
          "description": "Flow Job log summary"
        },
        "JobStatus": {
          "description": "Job Status",
          "type": "object",
          "properties": {
            "action_job_status": {
              "$ref": "#/components/schemas/JobStatusAction"
            }
          }
        },
        "JobStatusAction": {
          "description": "Action Job Status",
          "type": "object",
          "properties": {
            "action_name": {
              "type": "string",
              "description": "Action name"
            },
            "status_code": {
              "$ref": "#/components/schemas/JobStatusEnum"
            },
            "status_message": {
              "type": "string",
              "description": "Action Job status message - to be displayed along with the action_status_code"
            },
            "bastion_status_code": {
              "$ref": "#/components/schemas/ResourceStatusEnum"
            },
            "bastion_status_message": {
              "type": "string",
              "description": "Bastion status message - to be displayed along with the bastion_status_code;"
            },
            "inventory_status_code": {
              "$ref": "#/components/schemas/ResourceStatusEnum"
            },
            "inventory_status_message": {
              "type": "string",
              "description": "Aggregated status message for all inventory resources,  to be displayed along with the inventory_status_code;"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "example": "2019-11-06T16:19:32Z",
              "description": "Job status updation timestamp"
            }
          }
        },
        "JobStatusEnum": {
          "description": "Status of Jobs",
          "type": "string",
          "enum": [
            "job_pending",
            "job_in_progress",
            "iob_finished",
            "job_failed",
            "job_cancelled"
          ]
        },
        "JobStatusType": {
          "type": "object",
          "properties": {
            "failed": {
              "type": "array",
              "description": "List of failed workspace jobs",
              "items": {
                "type": "string"
              }
            },
            "in_progress": {
              "type": "array",
              "description": "List of in_progress workspace jobs",
              "items": {
                "type": "string"
              }
            },
            "success": {
              "type": "array",
              "description": "List of successful workspace jobs",
              "items": {
                "type": "string"
              }
            },
            "last_updated_on": {
              "type": "string",
              "description": "Workspace job status updated at",
              "format": "date-time"
            }
          },
          "description": "JobStatusType -"
        },
        "JobStateData": {
          "description": "Workspace Job state-file",
          "type": "object",
          "properties": {
            "job_id": {
              "type": "string",
              "description": "Job Id"
            },
            "job_name": {
              "type": "string",
              "description": "Job name, uniquely derived from the related Action"
            },
            "summary": {
              "description": "Job state summary",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "State summary feature name"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "number",
                      "string"
                    ],
                    "description": "State summary feature type"
                  },
                  "value": {
                    "type": "string",
                    "description": "State summary feature value"
                  }
                }
              }
            },
            "format": {
              "type": "string",
              "description": "Format of the State data (eg. tfstate)"
            },
            "details": {
              "type": "string",
              "format": "byte",
              "description": "State data file"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "example": "2019-11-06T16:19:32Z",
              "description": "Job status updation timestamp"
            }
          }
        },
        "KMSDiscovery": {
          "required": [
            "limit",
            "offset"
          ],
          "type": "object",
          "properties": {
            "total_count": {
              "type": "integer",
              "description": "Total number of records.",
              "format": "int64"
            },
            "limit": {
              "type": "integer",
              "description": "Number of records returned",
              "format": "int64"
            },
            "offset": {
              "type": "integer",
              "description": "Skipped number of records",
              "format": "int64"
            },
            "kms_instances": {
              "type": "array",
              "description": "List of KMS instances",
              "items": {
                "$ref": "#/components/schemas/KMSInstances"
              }
            }
          },
          "description": "Discovered KMS instances"
        },
        "KMSInstances": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Location"
            },
            "encryption_scheme": {
              "type": "string",
              "description": "Encryption schema"
            },
            "resource_group": {
              "type": "string",
              "description": "Resource groups"
            },
            "kms_crn": {
              "type": "string",
              "description": "KMS CRN"
            },
            "kms_name": {
              "type": "string",
              "description": "KMS Name"
            },
            "kms_private_endpoint": {
              "type": "string",
              "description": "KMS private endpoint"
            },
            "kms_public_endpoint": {
              "type": "string",
              "description": "KMS public endpoint"
            },
            "keys": {
              "type": "array",
              "description": "List of keys",
              "items": {
                "$ref": "#/components/schemas/KMSInstances_keys"
              }
            }
          },
          "description": "KMS Instances"
        },
        "KMSInstances_keys": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Key name"
            },
            "crn": {
              "type": "string",
              "description": "CRN of the Key"
            },
            "error": {
              "type": "string",
              "description": "Error message"
            }
          }
        },
        "KMSSettings": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Location"
            },
            "encryption_scheme": {
              "type": "string",
              "description": "Encryption scheme"
            },
            "resource_group": {
              "type": "string",
              "description": "Resource group"
            },
            "primary_crk": {
              "$ref": "#/components/schemas/KMSSettings_primary_crk"
            },
            "secondary_crk": {
              "$ref": "#/components/schemas/KMSSettings_secondary_crk"
            }
          },
          "description": "User defined KMS Settings details"
        },
        "KMSSettings_primary_crk": {
          "type": "object",
          "properties": {
            "kms_name": {
              "type": "string",
              "description": "Primary KMS name"
            },
            "kms_private_endpoint": {
              "type": "string",
              "description": "Primary KMS endpoint"
            },
            "key_crn": {
              "type": "string",
              "description": "CRN of the Primary Key"
            }
          },
          "description": "Primary CRK details"
        },
        "KMSSettings_secondary_crk": {
          "type": "object",
          "properties": {
            "kms_name": {
              "type": "string",
              "description": "Secondary KMS name"
            },
            "kms_private_endpoint": {
              "type": "string",
              "description": "Secondary KMS endpoint"
            },
            "key_crn": {
              "type": "string",
              "description": "CRN of the Secondary Key"
            }
          },
          "description": "Secondary CRK details"
        },
        "LocationEnum": {
          "type": "string",
          "description": "List of locations supported by IBM Cloud Schematics service.  Decide the right location and region an action to be created, as you cannot change the location and region. **Note** this does not limit the location of the resources provisioned using Schematics.",
          "enum": [
            "us-south",
            "us-east",
            "eu-gb",
            "eu-de"
          ]
        },
        "LogStoreResponse": {
          "type": "object",
          "properties": {
            "engine_name": {
              "type": "string",
              "description": "The provisioning engine that was used for the action."
            },
            "engine_version": {
              "type": "string",
              "description": "The version of the provisioning engine that was used for the action."
            },
            "id": {
              "type": "string",
              "description": "The ID that was assigned to your Terraform template of IBM Cloud catalog software template."
            },
            "log_store_url": {
              "type": "string",
              "description": "The URL to access the logs that were created during the plan, apply, or destroy action. "
            }
          },
          "description": "Information about the provisioning engine and log file URL for the most recent action that ran against your workspace."
        },
        "LogStoreResponseList": {
          "type": "object",
          "properties": {
            "runtime_data": {
              "type": "array",
              "description": "Runtime data",
              "items": {
                "$ref": "#/components/schemas/LogStoreResponse"
              }
            }
          },
          "description": "Information about the log file URL for the most recent action that ran against your workspace."
        },
        "LogSummary": {
          "type": "object",
          "properties": {
            "activity_status": {
              "$ref": "#/components/schemas/WorkspaceActivityStatus"
            },
            "detected_template_type": {
              "type": "string",
              "description": "Template detected type"
            },
            "discarded_files": {
              "type": "integer",
              "description": "Numner of discarded files",
              "format": "int64"
            },
            "error": {
              "type": "string",
              "description": "Numner of errors in log"
            },
            "resources_added": {
              "type": "integer",
              "description": "Numner of resources added",
              "format": "int64"
            },
            "resources_destroyed": {
              "type": "integer",
              "description": "Numner of resources destroyed",
              "format": "int64"
            },
            "resources_modified": {
              "type": "integer",
              "description": "Numner of resources modified",
              "format": "int64"
            },
            "scanned_files": {
              "type": "integer",
              "description": "Numner of filed scanned",
              "format": "int64"
            },
            "template_variable_count": {
              "type": "integer",
              "description": "Numner of template variables",
              "format": "int64"
            },
            "time_taken": {
              "type": "number",
              "description": "Time takemn to perform activity",
              "format": "double"
            }
          },
          "description": "LogSummary ..."
        },
        "OutputValues": {
          "type": "array",
          "description": "Information about the Terraform output values that are defined in the Terraform template or IBM Cloud software template.",
          "items": {
            "$ref": "#/components/schemas/OutputValues_inner"
          }
        },
        "OutputValues_inner": {
          "type": "object",
          "properties": {
            "folder": {
              "type": "string",
              "description": "The subfolder in the GitHub or GitLab repository where your Terraform template is stored. If the template is stored in the root directory, `.` is returned."
            },
            "id": {
              "type": "string",
              "description": "The ID that was assigned to your Terraform template or IBM Cloud catalog software template."
            },
            "output_values": {
              "type": "array",
              "description": "A list of Terraform output values.",
              "items": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "value_type": {
              "type": "string",
              "description": "The Terraform version that was used to apply your template."
            }
          }
        },
        "ResourceGroupResponse": {
          "type": "object",
          "properties": {
            "account_id": {
              "type": "string",
              "description": "The ID of the account for which you listed the resource groups."
            },
            "crn": {
              "type": "string",
              "description": "The CRN of the resource group."
            },
            "default": {
              "type": "boolean",
              "description": "If set to **true**, the resource group is used as the default resource group for your account. If set to **false**, the resource group is not used as the default resource group in your account."
            },
            "name": {
              "type": "string",
              "description": "The name of the resource group."
            },
            "resource_group_id": {
              "type": "string",
              "description": "The ID of the resource group."
            },
            "state": {
              "type": "string",
              "description": "The state of the resource group."
            }
          },
          "description": "Information about the resource group."
        },
        "ResourceQuery": {
          "description": "Describe resource query",
          "type": "object",
          "properties": {
            "query_type": {
              "type": "string",
              "enum": [
                "workspaces"
              ],
              "description": "Type of the query such as workspaces."
            },
            "query_condition": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ResourceQueryParam"
              }
            },
            "query_select": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of the query selection parameters."
            }
          }
        },
        "ResourceQueryDefinition": {
          "description": "Describe resource query definition",
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "vsi"
              ],
              "description": "Resource type such as `cluster`, `vsi`, `icd`, `vpc`."
            },
            "name": {
              "type": "string",
              "description": "Resource query name"
            },
            "queries": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ResourceQuery"
              }
            }
          }
        },
        "ResourceQueryParam": {
          "description": "Describe resource query param.",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the resource query param."
            },
            "value": {
              "type": "string",
              "description": "Value of the resource query param."
            },
            "description": {
              "type": "string",
              "description": "Description of resource query param variable"
            }
          }
        },
        "ResourceQueryRecord": {
          "description": "Describe the resource query record.",
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "vsi"
              ],
              "description": "Resource type such as `cluster`, `vsi`, `icd`, `vpc`."
            },
            "name": {
              "type": "string",
              "description": "Resource query name."
            },
            "id": {
              "type": "string",
              "readOnly": true,
              "description": "Resource query ID."
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "Resource query creation time.",
              "example": "2019-11-06T16:19:32Z"
            },
            "created_by": {
              "type": "string",
              "readOnly": true,
              "description": "Email address of an user who created the resource query"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "Resource query updation time.",
              "example": "2019-11-06T16:19:32Z"
            },
            "updated_by": {
              "type": "string",
              "readOnly": true,
              "description": "Email address of user who updated the resource query."
            },
            "queries": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ResourceQuery"
              }
            }
          }
        },
        "ResourceQueryRecordList": {
          "description": "Lists the resource query records.",
          "type": "object",
          "required": [
            "limit",
            "offset"
          ],
          "properties": {
            "total_count": {
              "type": "integer",
              "format": "int64",
              "description": "Total number of records."
            },
            "limit": {
              "type": "integer",
              "format": "int64",
              "description": "Number of records returned."
            },
            "offset": {
              "type": "integer",
              "format": "int64",
              "description": "Skipped number of records."
            },
            "ResourceQueries": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ResourceQueryRecord"
              },
              "description": "Lists the resource query records."
            }
          }
        },
        "ResourceQueryResponseRecord": {
          "description": "Describe the resource query.",
          "type": "object",
          "properties": {
            "response": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "query_type": {
                    "type": "string",
                    "enum": [
                      "workspaces"
                    ],
                    "description": "Type of the query such as workspaces."
                  },
                  "query_condition": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ResourceQueryParam"
                    }
                  },
                  "query_select": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Lists the query selection parameters."
                  },
                  "query_output": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the output param."
                        },
                        "value": {
                          "type": "string",
                          "description": "value of the output param."
                        }
                      },
                      "description": "Lists the query output values."
                    }
                  }
                }
              }
            }
          }
        },
        "ResourceStatusEnum": {
          "description": "Status of Resources",
          "type": "string",
          "enum": [
            "none",
            "ready",
            "processing",
            "error"
          ]
        },
        "SchematicsLocations": {
          "type": "object",
          "properties": {
            "country": {
              "type": "string",
              "description": "The country where the location is located. "
            },
            "geography": {
              "type": "string",
              "description": "The geography that the location belongs to. "
            },
            "id": {
              "type": "string",
              "description": "The ID of the location."
            },
            "kind": {
              "type": "string",
              "description": "The kind of location. "
            },
            "metro": {
              "type": "string",
              "description": "The metro area that the location belongs to. "
            },
            "multizone_metro": {
              "type": "string",
              "description": "The multizone metro area that the location belongs to. "
            },
            "name": {
              "type": "string",
              "description": "The name of the location."
            }
          },
          "description": "Information about the location."
        },
        "SchematicsResourceEnum": {
          "type": "string",
          "description": "Name of the Schematics automation resource",
          "enum": [
            "workspace",
            "action"
          ]
        },
        "SharedTargetData": {
          "type": "object",
          "properties": {
            "cluster_created_on": {
              "type": "string",
              "description": "Cluster created on"
            },
            "cluster_id": {
              "type": "string",
              "description": "The ID of the cluster where you want to provision the resources of all IBM Cloud catalog templates that are included in the catalog offering."
            },
            "cluster_name": {
              "type": "string",
              "description": "Cluster name"
            },
            "cluster_type": {
              "type": "string",
              "description": "Cluster type"
            },
            "entitlement_keys": {
              "type": "array",
              "description": "The entitlement key that you want to use to install IBM Cloud entitled software.",
              "items": {
                "type": "object"
              }
            },
            "namespace": {
              "type": "string",
              "description": "The Kubernetes namespace or OpenShift project where the resources of all IBM Cloud catalog templates that are included in the catalog offering are deployed into."
            },
            "region": {
              "type": "string",
              "description": "The IBM Cloud region that you want to use for the resources of all IBM Cloud catalog templates that are included in the catalog offering."
            },
            "resource_group_id": {
              "type": "string",
              "description": "The ID of the resource group that you want to use for the resources of all IBM Cloud catalog templates that are included in the catalog offering."
            },
            "worker_count": {
              "type": "integer",
              "description": "Cluster worker count",
              "format": "int64"
            },
            "worker_machine_type": {
              "type": "string",
              "description": "Cluster worker type"
            }
          },
          "description": "Information that is shared across templates in IBM Cloud catalog offerings. This information is not provided when you create a workspace from your own Terraform template."
        },
        "SharedTargetDataResponse": {
          "type": "object",
          "properties": {
            "cluster_id": {
              "type": "string",
              "description": "The ID of the cluster where you want to provision the resources of all IBM Cloud catalog templates that are included in the catalog offering."
            },
            "cluster_name": {
              "type": "string",
              "description": "Target cluster name"
            },
            "entitlement_keys": {
              "type": "array",
              "description": "The entitlement key that you want to use to install IBM Cloud entitled software.",
              "items": {
                "type": "object"
              }
            },
            "namespace": {
              "type": "string",
              "description": "The Kubernetes namespace or OpenShift project where the resources of all IBM Cloud catalog templates that are included in the catalog offering are deployed into."
            },
            "region": {
              "type": "string",
              "description": "The IBM Cloud region that you want to use for the resources of all IBM Cloud catalog templates that are included in the catalog offering."
            },
            "resource_group_id": {
              "type": "string",
              "description": "The ID of the resource group that you want to use for the resources of all IBM Cloud catalog templates that are included in the catalog offering."
            }
          },
          "description": "Information that is shared across templates in IBM Cloud catalog offerings. This information is not provided when you create a workspace from your own Terraform template."
        },
        "SharedDatasetCreateRequest": {
          "type": "object",
          "properties": {
            "auto_propagate_change": {
              "type": "boolean",
              "description": "Automatically propagate changes to consumers"
            },
            "description": {
              "type": "string",
              "description": "Dataset description"
            },
            "effected_workspace_ids": {
              "type": "array",
              "description": "Affected workspaces",
              "items": {
                "type": "string"
              }
            },
            "resource_group": {
              "type": "string",
              "description": "Resource group name"
            },
            "shared_dataset_data": {
              "type": "array",
              "description": "Shared dataset data",
              "items": {
                "$ref": "#/components/schemas/SharedDatasetData"
              }
            },
            "shared_dataset_name": {
              "type": "string",
              "description": "Shared dataset name"
            },
            "shared_dataset_source_name": {
              "type": "string",
              "description": "Shared dataset source name"
            },
            "shared_dataset_type": {
              "type": "array",
              "description": "Shared dataset type",
              "items": {
                "type": "string"
              }
            },
            "tags": {
              "type": "array",
              "description": "Shared dataset tags",
              "items": {
                "type": "string"
              }
            },
            "version": {
              "type": "string",
              "description": "Shared dataset version"
            }
          },
          "description": "SharedDatasetCreateRequest - request passed in create"
        },
        "SharedDatasetData": {
          "type": "object",
          "properties": {
            "default_value": {
              "type": "string",
              "description": "Default values"
            },
            "description": {
              "type": "string",
              "description": "Data description"
            },
            "hidden": {
              "type": "boolean",
              "description": "Data is hidden"
            },
            "immutable": {
              "type": "boolean",
              "description": "Data is readonly"
            },
            "matches": {
              "type": "string",
              "description": "Data is matches regular expression"
            },
            "max_value": {
              "type": "string",
              "description": "Max value of the data"
            },
            "max_value_len": {
              "type": "string",
              "description": "Max string length of the data"
            },
            "min_value": {
              "type": "string",
              "description": "Min value of the data"
            },
            "min_value_len": {
              "type": "string",
              "description": "Min string length of the data"
            },
            "options": {
              "type": "array",
              "description": "Possible options for the Data",
              "items": {
                "type": "string"
              }
            },
            "override_value": {
              "type": "string",
              "description": "Override value for the Data"
            },
            "secure": {
              "type": "boolean",
              "description": "Data is secure"
            },
            "var_aliases": {
              "type": "array",
              "description": "Alias strings for the variable names",
              "items": {
                "type": "string"
              }
            },
            "var_name": {
              "type": "string",
              "description": "Variable name"
            },
            "var_ref": {
              "type": "string",
              "description": "Variable reference"
            },
            "var_type": {
              "type": "string",
              "description": "Variable type"
            }
          },
          "description": "SharedDatasetData ..."
        },
        "SharedDatasetResponse": {
          "type": "object",
          "properties": {
            "account": {
              "type": "string",
              "description": "Account id"
            },
            "created_at": {
              "type": "string",
              "description": "Dataset created at",
              "format": "date-time"
            },
            "created_by": {
              "type": "string",
              "description": "Dataset created by"
            },
            "description": {
              "type": "string",
              "description": "Dataset description"
            },
            "effected_workspace_ids": {
              "type": "array",
              "description": "Affected workspace id",
              "items": {
                "type": "string"
              }
            },
            "resource_group": {
              "type": "string",
              "description": "Resource group name"
            },
            "shared_dataset_data": {
              "type": "array",
              "description": "Shared dataset data",
              "items": {
                "$ref": "#/components/schemas/SharedDatasetData"
              }
            },
            "shared_dataset_id": {
              "type": "string",
              "description": "Shared dataset id"
            },
            "shared_dataset_name": {
              "type": "string",
              "description": "Shared dataset name"
            },
            "shared_dataset_type": {
              "type": "array",
              "description": "Shared dataset type",
              "items": {
                "type": "string"
              }
            },
            "state": {
              "$ref": "#/components/schemas/SharedDatasetState"
            },
            "tags": {
              "type": "array",
              "description": "Shared dataset tags",
              "items": {
                "type": "string"
              }
            },
            "updated_at": {
              "type": "string",
              "description": "Shared dataset updated at",
              "format": "date-time"
            },
            "updated_by": {
              "type": "string",
              "description": "Shared dataset updated by"
            },
            "version": {
              "type": "string",
              "description": "Shared dataset version"
            }
          },
          "description": "SharedDatasetResponse - request returned by create"
        },
        "SharedDatasetResponseList": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Shared dataset count",
              "format": "int64"
            },
            "shared_datasets": {
              "type": "array",
              "description": "List of datasets",
              "items": {
                "$ref": "#/components/schemas/SharedDatasetResponse"
              }
            }
          },
          "description": "SharedDatasetResponseList -"
        },
        "SharedDatasetState": {
          "type": "string",
          "description": "shareddata variable status type"
        },
        "StateStoreResponse": {
          "type": "object",
          "properties": {
            "engine_name": {
              "type": "string",
              "description": "The provisioning engine that was used to apply the Terraform template or IBM Cloud catalog software template."
            },
            "engine_version": {
              "type": "string",
              "description": "The version of the provisioning engine that was used."
            },
            "id": {
              "type": "string",
              "description": "The ID that was assigned to your Terraform template or IBM Cloud catalog software template."
            },
            "state_store_url": {
              "type": "string",
              "description": "The URL where the Terraform statefile (`terraform.tfstate`) is stored. You can use the statefile to find an overview of IBM Cloud resources that were created by Schematics. Schematics uses the statefile as an inventory list to determine future create, update, or deletion actions."
            }
          },
          "description": "Information about workspace runtime data. "
        },
        "StateStoreResponseList": {
          "type": "object",
          "properties": {
            "runtime_data": {
              "type": "array",
              "description": "Information about workspace runtime data. ",
              "items": {
                "$ref": "#/components/schemas/StateStoreResponse"
              }
            }
          },
          "description": "Information about the Terraform statefile URL. "
        },
        "StatusMessages": {
          "type": "array",
          "description": "Information about the success or failure of your action, including a success or error code and the timestamp when the action succeeded or failed.",
          "items": {
            "type": "string"
          }
        },
        "SystemLock": {
          "type": "object",
          "properties": {
            "sys_locked": {
              "type": "boolean",
              "description": "Is the Workspace locked by the Schematic action ?"
            },
            "sys_locked_by": {
              "type": "string",
              "description": "Name of the user who performed the action, that lead to lock the Workspace"
            },
            "sys_locked_at": {
              "type": "string",
              "description": "When the user performed the action that lead to lock the Workspace ?  ",
              "format": "date-time"
            }
          },
          "description": "System lock status",
          "readOnly": true
        },
        "Tags": {
          "type": "array",
          "description": "A list of tags that you want to associate with your workspace.",
          "items": {
            "type": "string"
          }
        },
        "TargetResourceset": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Target name."
            },
            "type": {
              "type": "string",
              "description": "Target type (`cluster`, `vsi`, `icd`, `vpc`)."
            },
            "description": {
              "type": "string",
              "description": "Target description."
            },
            "resource_query": {
              "type": "string",
              "description": "Resource selection query string."
            },
            "credential": {
              "type": "string",
              "description": "Override credential for each resource.  Reference to credentials values, used by all the resources."
            },
            "id": {
              "type": "string",
              "description": "Target ID",
              "readOnly": true
            },
            "created_at": {
              "type": "string",
              "description": "Targets creation time.",
              "format": "date-time",
              "readOnly": true,
              "example": "2019-11-06T16:19:32Z"
            },
            "created_by": {
              "type": "string",
              "description": "E-mail address of the user who created the targets.",
              "readOnly": true
            },
            "updated_at": {
              "type": "string",
              "description": "Targets updation time.",
              "format": "date-time",
              "readOnly": true,
              "example": "2019-11-06T16:19:32Z"
            },
            "updated_by": {
              "type": "string",
              "description": "E-mail address of user who updated the targets.",
              "readOnly": true
            },
            "sys_lock": {
              "$ref": "#/components/schemas/SystemLock"
            },
            "resource_ids": {
              "type": "array",
              "description": "Array of the resource IDs.",
              "readOnly": true,
              "items": {
                "type": "string"
              }
            }
          },
          "description": "Complete target details with the user inputs and the system generated data."
        },
        "TemplateData": {
          "type": "array",
          "description": "TemplateData -",
          "items": {
            "$ref": "#/components/schemas/TemplateSourceDataRequest"
          }
        },
        "TemplateLogStoreString": {
          "type": "string",
          "description": "The Terraform logs for the most recent workspace job."
        },
        "TemplateMetadata": {
          "type": "array",
          "description": "Information about workspace variable metadata.",
          "items": {
            "type": "object",
            "description": "A list of input variables that are associated with the workspace. "
          }
        },
        "TemplateReadme": {
          "type": "object",
          "properties": {
            "readme": {
              "type": "string",
              "description": "The `README.md` file for the template that your workspace points to."
            }
          },
          "description": "The `README.md` file for the template that your workspace points to."
        },
        "TemplateRepoRequest": {
          "description": "TemplateRepoRequest -",
          "type": "object",
          "properties": {
            "branch": {
              "type": "string",
              "description": "Repo branch"
            },
            "release": {
              "type": "string",
              "description": "Repo release"
            },
            "repo_sha_value": {
              "type": "string",
              "description": "Repo SHA value"
            },
            "repo_url": {
              "type": "string",
              "description": "Repo URL"
            },
            "url": {
              "type": "string",
              "description": "Source URL"
            }
          }
        },
        "TemplateRepoResponse": {
          "description": "TemplateRepoResponse -",
          "type": "object",
          "properties": {
            "branch": {
              "type": "string",
              "description": "Repo branch"
            },
            "full_url": {
              "type": "string",
              "description": "Full repo URL"
            },
            "has_uploadedgitrepotar": {
              "type": "boolean",
              "description": "Has uploaded git repo tar"
            },
            "release": {
              "type": "string",
              "description": "Repo release"
            },
            "repo_sha_value": {
              "type": "string",
              "description": "Repo SHA value"
            },
            "repo_url": {
              "type": "string",
              "description": "Repo URL"
            },
            "url": {
              "type": "string",
              "description": "Source URL"
            }
          }
        },
        "TemplateRepoUpdateRequest": {
          "description": "TemplateRepoUpdateRequest -",
          "type": "object",
          "properties": {
            "branch": {
              "type": "string",
              "description": "Repo branch"
            },
            "release": {
              "type": "string",
              "description": "Repo release"
            },
            "repo_sha_value": {
              "type": "string",
              "description": "Repo SHA value"
            },
            "repo_url": {
              "type": "string",
              "description": "Repo URL"
            },
            "url": {
              "type": "string",
              "description": "Source URL"
            }
          }
        },
        "TemplateResource": {
          "type": "array",
          "description": "TemplateResource -",
          "items": {
            "type": "object"
          }
        },
        "TemplateResources": {
          "type": "object",
          "properties": {
            "folder": {
              "type": "string",
              "description": "The subfolder in GitHub or GitLab where your Terraform templates are stored. If your template is stored in the root directory, `.` is returned."
            },
            "id": {
              "type": "string",
              "description": "The ID that was assigned to your Terraform template or IBM Cloud catalog software template."
            },
            "null_resources": {
              "type": "array",
              "description": "List of null resources",
              "items": {
                "type": "object"
              }
            },
            "related_resources": {
              "type": "array",
              "description": "Information about the IBM Cloud resources that are associated with your workspace.",
              "items": {
                "type": "object"
              }
            },
            "resources": {
              "type": "array",
              "description": "Information about the IBM Cloud resources that are associated with your workspace. **Note** The `resource_tainted` flag marks `true` when an instance is times out after few hours, if your resource provisioning takes longer duration. When you rerun the apply plan, based on the `resource_taint` flag result the provisioning continues from the state where the provisioning has stopped.",
              "items": {
                "type": "object"
              }
            },
            "resources_count": {
              "type": "integer",
              "description": "Number of resources",
              "format": "int64"
            },
            "template_type": {
              "type": "string",
              "description": "The Terraform version that was used to apply your template."
            }
          },
          "description": "TemplateResources -"
        },
        "TemplateResourcesList": {
          "type": "array",
          "description": "Information about the IBM Cloud resources that are associated with your workspace.",
          "items": {
            "$ref": "#/components/schemas/TemplateResources"
          }
        },
        "TemplateRunTimeDataResponse": {
          "type": "object",
          "properties": {
            "engine_cmd": {
              "type": "string",
              "description": "The command that was used to apply the Terraform template or IBM Cloud catalog software template."
            },
            "engine_name": {
              "type": "string",
              "description": "The provisioning engine that was used to apply the Terraform template or IBM Cloud catalog software template."
            },
            "engine_version": {
              "type": "string",
              "description": "The version of the provisioning engine that was used."
            },
            "id": {
              "type": "string",
              "description": "The ID that was assigned to your Terraform template or IBM Cloud catalog software template."
            },
            "log_store_url": {
              "type": "string",
              "description": "The URL to access the logs that were created during the creation, update, or deletion of your IBM Cloud resources. "
            },
            "output_values": {
              "type": "array",
              "additionalProperties": {
                "type": "string"
              },
              "description": "List of Output values",
              "items": {
                "type": "object"
              }
            },
            "resources": {
              "type": "array",
              "description": "List of resources",
              "items": {
                "$ref": "#/components/schemas/TemplateResource"
              }
            },
            "state_store_url": {
              "type": "string",
              "description": "The URL where the Terraform statefile (`terraform.tfstate`) is stored. You can use the statefile to find an overview of IBM Cloud resources that were created by Schematics. Schematics uses the statefile as an inventory list to determine future create, update, or deletion actions."
            }
          },
          "description": "Information about the provisioning engine, state file, and runtime logs. "
        },
        "TemplateRepoTarUploadResponse": {
          "description": "TemplateRepoTarUploadResponse.",
          "type": "object",
          "properties": {
            "file_value": {
              "type": "string",
              "description": "Tar file value"
            },
            "has_received_file": {
              "type": "boolean",
              "description": "Have received the tar file"
            },
            "id": {
              "type": "string",
              "description": "Template ID"
            }
          }
        },
        "TemplateSourceDataRequest": {
          "type": "object",
          "properties": {
            "env_values": {
              "$ref": "#/components/schemas/EnvVariableRequest"
            },
            "folder": {
              "type": "string",
              "description": "The subfolder in your GitHub or GitLab repository where your Terraform template is stored."
            },
            "init_state_file": {
              "type": "string",
              "description": "The content of an existing Terraform statefile that you want to import in to your workspace. To get the content of a Terraform statefile for a specific Terraform template in an existing workspace, run `ibmcloud terraform state pull --id <workspace_id> --template <template_id>`."
            },
            "type": {
              "type": "string",
              "description": "The Terraform version that you want to use to run your Terraform code. Enter `terraform_v0.12` to use Terraform version 0.12. This is a required variable. Make sure that your Terraform config files are compatible with the Terraform version that you select."
            },
            "uninstall_script_name": {
              "type": "string",
              "description": "Uninstall script name"
            },
            "values": {
              "type": "string",
              "description": "A list of variable values that you want to apply during the Helm chart installation. The list must be provided in JSON format, such as `\"autoscaling:\n  enabled: true\n  minReplicas: 2\"`. The values that you define here override the default Helm chart values. This field is supported only for IBM Cloud catalog offerings that are provisioned by using the Terraform Helm provider. "
            },
            "values_metadata": {
              "type": "array",
              "description": "List of values metadata",
              "items": {
                "type": "object"
              }
            },
            "variablestore": {
              "$ref": "#/components/schemas/VariablesRequest"
            }
          },
          "description": "Input parameters to define input variables for your Schematics template."
        },
        "TemplateSourceDataResponse": {
          "type": "object",
          "properties": {
            "env_values": {
              "type": "array",
              "description": "List of environment values",
              "items": {
                "$ref": "#/components/schemas/EnvVariableResponse"
              }
            },
            "folder": {
              "type": "string",
              "description": "The subfolder in your GitHub or GitLab repository where your Terraform template is stored. If your template is stored in the root directory, `.` is returned."
            },
            "has_githubtoken": {
              "type": "boolean",
              "description": "Has github token"
            },
            "id": {
              "type": "string",
              "description": "The ID that was assigned to your Terraform template or IBM Cloud catalog software template."
            },
            "template_type": {
              "type": "string",
              "description": "The Terraform version that was used to run your Terraform code."
            },
            "uninstall_script_name": {
              "type": "string",
              "description": "Uninstall script name"
            },
            "values": {
              "type": "string",
              "description": "A list of variable values that you want to apply during the Helm chart installation. The list must be provided in JSON format, such as `\"\"autoscaling:\n  enabled: true\n  minReplicas: 2\"`. The values that you define here override the default Helm chart values. This field is supported only for IBM Cloud catalog offerings that are provisioned by using the Terraform Helm provider. "
            },
            "values_metadata": {
              "type": "array",
              "description": "A list of input variables that are associated with the workspace. ",
              "items": {
                "type": "object"
              }
            },
            "values_url": {
              "type": "string",
              "description": "The API endpoint to access the input variables that you defined for your template. "
            },
            "variablestore": {
              "$ref": "#/components/schemas/VariablesResponse"
            }
          },
          "description": "Information about the input variables that are used in the template."
        },
        "TemplateStateStore": {
          "type": "object",
          "properties": {
            "version": {
              "type": "number"
            },
            "terraform_version": {
              "type": "string"
            },
            "serial": {
              "type": "number"
            },
            "lineage": {
              "type": "string"
            },
            "modules": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          "description": "The content of the Terraform statefile (`terraform.tfstate`). "
        },
        "TemplateTarRequest": {
          "type": "object",
          "description": "Upload Template tar file",
          "properties": {
            "file": {
              "type": "string",
              "format": "binary",
              "description": "Template tar file"
            }
          }
        },
        "TemplateValues": {
          "type": "object",
          "properties": {
            "values_metadata": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          "description": "Information about the input variables that are declared in the template that your workspace points to."
        },
        "TerraformUpdateRequest": {
          "description": "Terraform Commands - request passed for command.",
          "type": "object",
          "properties": {
            "commands": {
              "type": "array",
              "description": "List of commands. You can execute single set of commands or multiple commands. For more information, about the payload of the multiple commands, refer to [Commands](/docs/schematics?topic=schematics-schematics-cli-reference#commands).",
              "items": {
                "$ref": "#/components/schemas/TerraformCommand"
              }
            },
            "operation_name": {
              "type": "string",
              "description": "Command name"
            },
            "description": {
              "type": "string",
              "description": "Command description"
            }
          }
        },
        "TerraformCommand": {
          "description": "TerraformCommand",
          "type": "object",
          "properties": {
            "command": {
              "type": "string",
              "description": "You must provide the command to execute. Supported commands are `show`,`taint`, `untaint`, `state`, `import`, `output`."
            },
            "command_params": {
              "type": "string",
              "description": "The required address parameters for the command name. You can send the option flag and address parameter in the payload. **Syntax ** \"command_params\": \"<option>=<flag>\", \"<address>\". **Example ** \"command_params\": \"-allow-missing=true\", \"-lock=true\", \"data.template_file.test\"."
            },
            "command_name": {
              "type": "string",
              "description": "The optional name for the command block."
            },
            "command_desc": {
              "type": "string",
              "description": "The optional text to describe the command block."
            },
            "command_onError": {
              "type": "string",
              "description": "Instruction to continue or break in case of error."
            },
            "command_dependsOn": {
              "type": "string",
              "description": "Dependency on previous commands"
            },
            "command_status": {
              "type": "string",
              "description": " Displays the command executed status, either `success` or `failure`."
            }
          }
        },
        "UserValues": {
          "type": "object",
          "properties": {
            "env_values": {
              "$ref": "#/components/schemas/EnvVariableResponse"
            },
            "values": {
              "type": "string",
              "description": "A list of variable values that you want to apply during the Helm chart installation. The list must be provided in JSON format, such as `\"autoscaling:\n  enabled: true\n  minReplicas: 2\"`. The values that you define here override the default Helm chart values. This field is supported only for IBM Cloud catalog offerings that are provisioned by using the Terraform Helm provider. "
            },
            "variablestore": {
              "$ref": "#/components/schemas/VariablesResponse"
            }
          },
          "description": "Information about workspace input variables."
        },
        "UserValuesRequest": {
          "type": "object",
          "properties": {
            "env_values": {
              "type": "array",
              "description": "List of environment variables to update",
              "items": {
                "$ref": "#/components/schemas/EnvValueUpdateRequest"
              }
            },
            "values": {
              "type": "string",
              "description": "User values"
            },
            "variablestore": {
              "$ref": "#/components/schemas/VariablesUpdateRequest"
            }
          },
          "description": "UserValuesRequest - Update the variablestore or values (helm) and env values of your workspace."
        },
        "UserState": {
          "type": "object",
          "description": "User defined status of the Schematics object",
          "properties": {
            "state": {
              "$ref": "#/components/schemas/UserStateEnum"
            },
            "set_by": {
              "type": "string",
              "description": "Name of the User who set the state of an object",
              "x-terraform-computed": true
            },
            "set_at": {
              "type": "string",
              "format": "date-time",
              "example": "2019-11-06T16:19:32Z",
              "description": "When the User who set the state of an object",
              "x-terraform-computed": true
            }
          }
        },
        "UserStateEnum": {
          "description": "User-defined states  * `draft` Object can be modified; can be used by Jobs run by the author, during execution\n  * `live` Object can be modified; can be used by Jobs during execution\n  * `locked` Object cannot be modified; can be used by Jobs during execution\n  * `disable` Object can be modified. cannot be used by Jobs during execution",
          "type": "string",
          "enum": [
            "draft",
            "live",
            "locked",
            "disable"
          ]
        },
        "VariableData": {
          "description": "User editable variable data & system generated reference to value",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the variable"
            },
            "value": {
              "type": "string",
              "description": "Value for the variable or reference to the value"
            },
            "metadata": {
              "$ref": "#/components/schemas/VariableMetadata"
            },
            "link": {
              "type": "string",
              "readOnly": true,
              "description": "Reference link to the variable value By default the expression will point to self.value"
            }
          }
        },
        "VariableMetadata": {
          "description": "User editable metadata for the variables",
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "boolean",
                "string",
                "integer",
                "date",
                "array",
                "list",
                "map",
                "complex"
              ],
              "description": "Type of the variable."
            },
            "aliases": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of aliases for the variable name"
            },
            "description": {
              "type": "string",
              "description": "Description of the meta data"
            },
            "default_value": {
              "type": "string",
              "description": "Default value for the variable, if the override value is not specified"
            },
            "secure": {
              "type": "boolean",
              "description": "Is the variable secure or sensitive ?"
            },
            "immutable": {
              "type": "boolean",
              "description": "Is the variable readonly ?"
            },
            "hidden": {
              "type": "boolean",
              "description": "If true, the variable will not be displayed on UI or CLI."
            },
            "options": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of possible values for this variable.  If type is integer or date, then the array of string will be  converted to array of integers or date during runtime"
            },
            "min_value": {
              "type": "integer",
              "description": "Minimum value of the variable. Applicable for integer type"
            },
            "max_value": {
              "type": "integer",
              "description": "Maximum value of the variable. Applicable for integer type"
            },
            "min_length": {
              "type": "integer",
              "description": "Minimum length of the variable value. Applicable for string type."
            },
            "max_length": {
              "type": "integer",
              "description": "Maximum length of the variable value. Applicable for string type."
            },
            "matches": {
              "type": "string",
              "description": "Regex for the variable value"
            },
            "position": {
              "type": "integer",
              "description": "Relative position of this variable in a list"
            },
            "group_by": {
              "type": "string",
              "description": "Display name of the group this variable belongs to"
            },
            "source": {
              "type": "string",
              "description": "Source of this meta-data."
            }
          }
        },
        "VariablesRequest": {
          "type": "array",
          "description": "VariablesRequest -",
          "items": {
            "$ref": "#/components/schemas/WorkspaceVariableRequest"
          }
        },
        "VariablesUpdateRequest": {
          "type": "array",
          "description": "VariablesUpdateRequest - for updating tf variables in put /values api",
          "items": {
            "$ref": "#/components/schemas/WorkspaceVariableUpdateRequest"
          }
        },
        "VariablesResponse": {
          "type": "array",
          "description": "Information about the input variables that your template uses.",
          "items": {
            "$ref": "#/components/schemas/WorkspaceVariableRequest"
          }
        },
        "VersionResponse": {
          "type": "object",
          "properties": {
            "builddate": {
              "type": "string",
              "x-go-name": "BuildDate",
              "description": "The date when the API version was built."
            },
            "buildno": {
              "type": "string",
              "x-go-name": "BuildNo",
              "description": "The build number that the API is based on."
            },
            "commitsha": {
              "type": "string",
              "x-go-name": "CommitSHA",
              "description": "The SHA value for the Git commit that represents the latest version of the API."
            },
            "helm_provider_version": {
              "type": "string",
              "x-go-name": "HelmProviderVersion",
              "description": "The Terraform Helm provider version that is used when you install Helm charts with Schematics."
            },
            "helm_version": {
              "type": "string",
              "x-go-name": "HelmVersion",
              "description": "The Helm version that is used when you install Helm charts with Schematics."
            },
            "supported_template_types": {
              "type": "array",
              "description": "Supported template types",
              "items": {
                "type": "object"
              }
            },
            "terraform_provider_version": {
              "type": "string",
              "x-go-name": "TerraformProviderVersion",
              "description": "The version of the IBM Cloud Terraform provider plug-in that is used when you apply Terraform templates with Schematics."
            },
            "terraform_version": {
              "type": "string",
              "x-go-name": "TerraformVersion",
              "description": "The Terraform version that is used when you apply Terraform templates with Schematics."
            }
          },
          "description": "Successful response when you retrieve detailed information about the IBM Cloud Schematics API. "
        },
        "WorkspaceActivityOptions": {
          "description": "A list of resource that you want to target. To target a resource, you must use the resource address, such as `ibm_is_instance.vm1`.",
          "type": "object",
          "properties": {
            "action_options": {
              "$ref": "#/components/schemas/WorkspaceActivityOptionsTemplate"
            }
          }
        },
        "WorkspaceActivityOptionsTemplate": {
          "type": "object",
          "properties": {
            "target": {
              "type": "array",
              "description": "A list of Terraform resource addresses to target.",
              "items": {
                "type": "string"
              }
            },
            "tf_vars": {
              "type": "array",
              "description": "Action tfvars",
              "items": {
                "type": "string"
              }
            }
          },
          "description": "The resources to target. "
        },
        "WorkspaceActivityAction": {
          "type": "string",
          "description": "The type of action that ran against your workspace. \n\n\n * **APPLY**: The apply action was created when you used the `PUT /v1/workspaces/{id}/apply` API to apply a Terraform template in IBM Cloud. \n * **DESTROY**: The destroy action was created when you used the `DELETE /v1/workspaces/{id}/destroy` API to remove all resources that are associated with your workspace. \n * **PLAN**: The plan action was created when you used the `POST /v1/workspaces/{id}/plan` API to create a Terraform execution plan. "
        },
        "WorkspaceActivityStatus": {
          "type": "string",
          "description": "The status of your action. To retrieve the URL to your action logs, use the `GET /v1/workspaces/{id}/actions/{action_id}/logs` API.  \n\n\n * **COMPLETED**: The action completed successfully. \n* **CREATED**: The action was created, but the provisioning, modification, or removal of IBM Cloud resources has not started yet. \n* **FAILED**: An error occurred during the plan, apply, or destroy action. Use the activity ID to retrieve the URL to the log files for your action. \n* **IN PROGRESS**: The action is in progress. You can use the `log_url` to access the logs.  "
        },
        "WorkspaceActivityApplyResult": {
          "type": "object",
          "properties": {
            "activityid": {
              "type": "string",
              "description": "The ID of the activity that was created when you initiated a request to apply a Terraform template. You can use the ID to retrieve the URL to your log file by using the `GET` API. "
            }
          },
          "description": "Response parameter for successfully initiating a request to apply a Terraform template in IBM Cloud."
        },
        "WorkspaceActivityCommandResult": {
          "description": "WorkspaceActivityCommandResult -",
          "type": "object",
          "properties": {
            "activityid": {
              "type": "string",
              "description": "Activity id"
            }
          }
        },
        "WorkspaceActivityDestroyResult": {
          "type": "object",
          "properties": {
            "activityid": {
              "type": "string",
              "description": "The ID of the activity that was created for your IBM Cloud resource removal action. You can use the ID to retrieve the URL to your log file by using the `GET /v1/workspaces/{id}/actions/{action_id}/logs` API. "
            }
          },
          "description": "Response parameters for successfully initiating a request to remove IBM Cloud resources."
        },
        "WorkspaceActivityPlanResult": {
          "type": "object",
          "properties": {
            "activityid": {
              "type": "string",
              "description": "The ID of the activity that ran against the workspace. This activity can be a `PLAN`, `APPLY`, or `DESTROY` action. You use the activity ID to retrieve the log URL with the `GET /v1/workspaces/{id}/actions/{action_id}/logs` API. "
            }
          },
          "description": "Response parameter when you create a Terraform execution plan."
        },
        "WorkspaceActivityRefreshResult": {
          "type": "object",
          "properties": {
            "activityid": {
              "type": "string",
              "description": "The ID of the activity that was created for your workspace refresh action. You can use the ID to retrieve the URL to your log file by using the `GET /v1/workspaces/{id}/actions/{action_id}/logs` API. "
            }
          },
          "description": "Response parameters for successfully initiating a request to refresh the Terraform statefile of a workspace."
        },
        "WorkspaceActivity": {
          "type": "object",
          "properties": {
            "action_id": {
              "type": "string",
              "description": "The ID of the action. You can use the ID to retrieve the URL to the logs for that action by using the `GET /v1/workspaces/{id}/actions/{action_id}/logs` API."
            },
            "message": {
              "$ref": "#/components/schemas/StatusMessages"
            },
            "name": {
              "$ref": "#/components/schemas/WorkspaceActivityAction"
            },
            "performed_at": {
              "type": "string",
              "description": "The timestamp when the action was initiated.",
              "format": "date-time"
            },
            "performed_by": {
              "type": "string",
              "description": "The user ID who initiated the action."
            },
            "status": {
              "$ref": "#/components/schemas/WorkspaceActivityStatus"
            },
            "templates": {
              "type": "array",
              "description": "List of template activities",
              "items": {
                "$ref": "#/components/schemas/WorkspaceActivityTemplate"
              }
            }
          },
          "description": "Information about the actions of a workspace."
        },
        "WorkspaceActivityLogs": {
          "type": "object",
          "properties": {
            "action_id": {
              "type": "string",
              "description": "The ID of the action that ran against your workspace."
            },
            "name": {
              "$ref": "#/components/schemas/WorkspaceActivityAction"
            },
            "templates": {
              "type": "array",
              "description": "List of activity logs",
              "items": {
                "$ref": "#/components/schemas/WorkspaceActivityTemplateLogs"
              }
            }
          },
          "description": "Information about the workspace job logs. "
        },
        "WorkspaceActivityTemplate": {
          "type": "object",
          "properties": {
            "end_time": {
              "type": "string",
              "description": "The timestamp when the action completed or failed.",
              "format": "date-time"
            },
            "log_summary": {
              "$ref": "#/components/schemas/LogSummary"
            },
            "log_url": {
              "type": "string",
              "description": "The URL to access the logs that were created during the plan, apply, or destroy action. "
            },
            "message": {
              "type": "string",
              "description": "Information about the success or failure of your action, including a success or error code and the timestamp when the action succeeded or failed."
            },
            "start_time": {
              "type": "string",
              "description": "The timestamp when the action started.",
              "format": "date-time"
            },
            "status": {
              "$ref": "#/components/schemas/WorkspaceActivityStatus"
            },
            "template_id": {
              "type": "string",
              "description": "The ID that was assigned to your Terraform template or IBM Cloud catalog software template."
            },
            "template_type": {
              "type": "string",
              "description": "The type of template."
            }
          },
          "description": "WorkspaceActivityTemplate -"
        },
        "WorkspaceActivityTemplateLogString": {
          "type": "string",
          "description": "WorkspaceActivityTemplateLogString -"
        },
        "WorkspaceActivityTemplateLogs": {
          "type": "object",
          "properties": {
            "log_url": {
              "type": "string",
              "description": "The URL to access the logs that were created during the plan, apply, or destroy action. "
            },
            "template_id": {
              "type": "string",
              "description": "The ID that was assigned to your Terraform template or IBM Cloud catalog software template."
            },
            "template_type": {
              "type": "string",
              "description": "The type of template."
            }
          },
          "description": "Information about the log URL for an action that ran for a template against your workspace."
        },
        "WorkspaceActivities": {
          "type": "object",
          "properties": {
            "actions": {
              "type": "array",
              "description": "List of workspace activities",
              "items": {
                "$ref": "#/components/schemas/WorkspaceActivity"
              }
            },
            "workspace_id": {
              "type": "string",
              "description": "The ID of the workspace."
            },
            "workspace_name": {
              "type": "string",
              "description": "The name of the workspace."
            }
          },
          "description": "Response parameter for listing actions for a workspace."
        },
        "WorkspaceBulkDeleteRequest": {
          "type": "object",
          "properties": {
            "delete_workspaces": {
              "type": "boolean",
              "description": "True to delete workspace"
            },
            "destroy_resources": {
              "type": "boolean",
              "description": "True to destroy the resources managed by this workspace"
            },
            "job": {
              "type": "string",
              "description": "Workspace deletion job name"
            },
            "version": {
              "type": "string",
              "description": "Version"
            },
            "workspaces": {
              "type": "array",
              "description": "List of workspaces to be deleted",
              "items": {
                "type": "string"
              }
            }
          },
          "description": "WorkspaceBulkDeleteRequest -"
        },
        "WorkspaceBulkDeleteResponse": {
          "type": "object",
          "properties": {
            "job": {
              "type": "string",
              "description": "Workspace deletion job name"
            },
            "job_id": {
              "type": "string",
              "description": "Workspace deletion job id"
            }
          },
          "description": "WorkspaceBulkDeleteResponse -"
        },
        "WorkspaceDeleteResponse": {
          "type": "string",
          "description": "WorkspaceDeleteResponse -"
        },
        "WorkspaceCreateRequest": {
          "type": "object",
          "properties": {
            "applied_shareddata_ids": {
              "type": "array",
              "description": "List of applied shared dataset id",
              "items": {
                "type": "string"
              }
            },
            "catalog_ref": {
              "$ref": "#/components/schemas/CatalogRef"
            },
            "description": {
              "type": "string",
              "description": "The description of the workspace."
            },
            "location": {
              "type": "string",
              "description": "The location where you want to create your Schematics workspace and run Schematics actions. The location that you enter must match the API endpoint that you use. For example, if you use the Frankfurt API endpoint, you must specify `eu-de` as your location. If you use an API endpoint for a geography and you do not specify a location, Schematics determines the location based on availability. "
            },
            "name": {
              "type": "string",
              "description": "The name of your workspace. The name can be up to 128 characters long and can include alphanumeric characters, spaces, dashes, and underscores. When you create a workspace for your own Terraform template, consider including the microservice component that you set up with your Terraform template and the IBM Cloud environment where you want to deploy your resources in your name."
            },
            "resource_group": {
              "type": "string",
              "description": "The ID of the resource group where you want to provision the workspace."
            },
            "shared_data": {
              "$ref": "#/components/schemas/SharedTargetData"
            },
            "tags": {
              "type": "array",
              "description": "A list of tags that are associated with the workspace.",
              "items": {
                "type": "string"
              }
            },
            "template_data": {
              "$ref": "#/components/schemas/TemplateData"
            },
            "template_ref": {
              "type": "string",
              "description": "Workspace template ref"
            },
            "template_repo": {
              "$ref": "#/components/schemas/TemplateRepoRequest"
            },
            "type": {
              "type": "array",
              "description": "The Terraform version that you want to use to run your Terraform code. Enter `terraform_v0.12` to use Terraform version 0.12. This is a required variable. Make sure that your Terraform config files are compatible with the Terraform version that you select.",
              "items": {
                "type": "string"
              }
            },
            "workspace_status": {
              "$ref": "#/components/schemas/WorkspaceStatusRequest"
            }
          },
          "description": "Input parameter to create a workspace"
        },
        "WorkspaceJobResponse": {
          "type": "object",
          "properties": {
            "job_status": {
              "$ref": "#/components/schemas/JobStatusType"
            }
          },
          "description": "WorkspaceJobResponse -"
        },
        "WorkspaceResponse": {
          "type": "object",
          "properties": {
            "applied_shareddata_ids": {
              "type": "array",
              "description": "List of applied shared dataset id",
              "items": {
                "type": "string"
              }
            },
            "catalog_ref": {
              "$ref": "#/components/schemas/CatalogRef"
            },
            "created_at": {
              "type": "string",
              "description": "The timestamp when the workspace was created.",
              "format": "date-time"
            },
            "created_by": {
              "type": "string",
              "description": "The user ID that created the workspace."
            },
            "crn": {
              "type": "string",
              "description": "Workspace CRN"
            },
            "description": {
              "type": "string",
              "description": "The description of the workspace."
            },
            "id": {
              "type": "string",
              "description": "The unique identifier of the workspace."
            },
            "last_health_check_at": {
              "type": "string",
              "description": "The timestamp when the last health check was performed by Schematics.",
              "format": "date-time"
            },
            "location": {
              "type": "string",
              "description": "The IBM Cloud location where your workspace was provisioned."
            },
            "name": {
              "type": "string",
              "description": "The name of the workspace."
            },
            "resource_group": {
              "type": "string",
              "description": "The resource group the workspace was provisioned in."
            },
            "runtime_data": {
              "type": "array",
              "description": "Information about the provisioning engine, state file, and runtime logs. ",
              "items": {
                "$ref": "#/components/schemas/TemplateRunTimeDataResponse"
              }
            },
            "shared_data": {
              "$ref": "#/components/schemas/SharedTargetDataResponse"
            },
            "status": {
              "$ref": "#/components/schemas/WorkspaceStatus"
            },
            "tags": {
              "type": "array",
              "description": "A list of tags that are associated with the workspace.",
              "items": {
                "type": "string"
              }
            },
            "template_data": {
              "type": "array",
              "description": "Information about the Terraform or IBM Cloud software template that you want to use.",
              "items": {
                "$ref": "#/components/schemas/TemplateSourceDataResponse"
              }
            },
            "template_ref": {
              "type": "string",
              "description": "Workspace template ref"
            },
            "template_repo": {
              "$ref": "#/components/schemas/TemplateRepoResponse"
            },
            "type": {
              "type": "array",
              "description": "The Terraform version that was used to run your Terraform code.",
              "items": {
                "type": "string"
              }
            },
            "updated_at": {
              "type": "string",
              "description": "The timestamp when the workspace was last updated.",
              "format": "date-time"
            },
            "updated_by": {
              "type": "string",
              "description": "The user ID that updated the workspace."
            },
            "workspace_status": {
              "$ref": "#/components/schemas/WorkspaceStatusResponse"
            },
            "workspace_status_msg": {
              "$ref": "#/components/schemas/WorkspaceStatusMessage"
            }
          },
          "description": "Overview of workspace details"
        },
        "WorkspaceResponseList": {
          "required": [
            "limit",
            "offset"
          ],
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "The number of workspaces in the IBM Cloud account that you have access to and that matched your search criteria.",
              "format": "int64"
            },
            "limit": {
              "type": "integer",
              "description": "The `limit` value that you set in your API request and that represents the maximum number of workspaces that you wanted to list. ",
              "format": "int64"
            },
            "offset": {
              "type": "integer",
              "description": "The `offset` value that you set in your API request. The offset value represents the position number of the workspace from which you wanted to start listing your workspaces.",
              "format": "int64"
            },
            "workspaces": {
              "type": "array",
              "description": "The list of workspaces that was included in your API response.",
              "items": {
                "$ref": "#/components/schemas/WorkspaceResponse"
              }
            }
          },
          "description": "Response parameters when listing workspaces from your IBM Cloud account."
        },
        "WorkspaceStatus": {
          "type": "string",
          "description": "The status of the workspace. \n\n **Active**: After you successfully ran your infrastructure code by applying your Terraform execution plan, the state of your workspace changes to `Active`. \n\n **Connecting**: Schematics tries to connect to the template in your source repo. If successfully connected, the template is downloaded and metadata, such as input parameters, is extracted. After the template is downloaded, the state of the workspace changes to `Scanning`. \n\n **Draft**: The workspace is created without a reference to a GitHub or GitLab repository. \n\n **Failed**: If errors occur during the execution of your infrastructure code in IBM Cloud Schematics, your workspace status is set to `Failed`. \n\n **Inactive**: The Terraform template was scanned successfully and the workspace creation is complete. You can now start running Schematics plan and apply actions to provision the IBM Cloud resources that you specified in your template. If you have an `Active` workspace and decide to remove all your resources, your workspace is set to `Inactive` after all your resources are removed. \n\n **In progress**: When you instruct IBM Cloud Schematics to run your infrastructure code by applying your Terraform execution plan, the status of our workspace changes to `In progress`. \n\n **Scanning**: The download of the Terraform template is complete and vulnerability scanning started. If the scan is successful, the workspace state changes to `Inactive`. If errors in your template are found, the state changes to `Template Error`. \n\n **Stopped**: The Schematics plan, apply, or destroy action was cancelled manually. \n\n **Template Error**: The Schematics template contains errors and cannot be processed."
        },
        "WorkspaceStatusMessage": {
          "type": "object",
          "properties": {
            "status_code": {
              "type": "string",
              "description": "The success or error code that was returned for the last plan, apply, or destroy action that ran against your workspace."
            },
            "status_msg": {
              "type": "string",
              "description": "The success or error message that was returned for the last plan, apply, or destroy action that ran against your workspace. "
            }
          },
          "description": "Information about the last action that ran against the workspace."
        },
        "WorkspaceStatusRequest": {
          "type": "object",
          "properties": {
            "frozen": {
              "type": "boolean",
              "description": "If set to true, the workspace is frozen and changes to the workspace are disabled."
            },
            "frozen_at": {
              "type": "string",
              "description": "The timestamp when the workspace was frozen.",
              "format": "date-time"
            },
            "frozen_by": {
              "type": "string",
              "description": "The user ID that froze the workspace."
            },
            "locked": {
              "type": "boolean",
              "description": "If set to true, the workspace is locked and disabled for changes."
            },
            "locked_by": {
              "type": "string",
              "description": "The user ID that initiated a resource-related action, such as applying or destroying resources, that locked the workspace."
            },
            "locked_time": {
              "type": "string",
              "description": "The timestamp when the workspace was locked.",
              "format": "date-time"
            }
          },
          "description": "WorkspaceStatusRequest -"
        },
        "WorkspaceStatusResponse": {
          "type": "object",
          "properties": {
            "frozen": {
              "type": "boolean",
              "description": "If set to true, the workspace is frozen and changes to the workspace are disabled."
            },
            "frozen_at": {
              "type": "string",
              "description": "The timestamp when the workspace was frozen.",
              "format": "date-time"
            },
            "frozen_by": {
              "type": "string",
              "description": "The user ID that froze the workspace."
            },
            "locked": {
              "type": "boolean",
              "description": "If set to true, the workspace is locked and disabled for changes."
            },
            "locked_by": {
              "type": "string",
              "description": "The user ID that initiated a resource-related action, such as applying or destroying resources, that locked the workspace."
            },
            "locked_time": {
              "type": "string",
              "description": "The timestamp when the workspace was locked.",
              "format": "date-time"
            }
          },
          "description": "Response parameter that indicate if a workspace is frozen or locked. "
        },
        "WorkspaceStatusUpdateRequest": {
          "type": "object",
          "properties": {
            "frozen": {
              "type": "boolean",
              "description": "If set to true, the workspace is frozen and changes to the workspace are disabled."
            },
            "frozen_at": {
              "type": "string",
              "description": "Frozen at",
              "format": "date-time"
            },
            "frozen_by": {
              "type": "string",
              "description": "Frozen by"
            },
            "locked": {
              "type": "boolean",
              "description": "Locked status"
            },
            "locked_by": {
              "type": "string",
              "description": "Locked by"
            },
            "locked_time": {
              "type": "string",
              "description": "Locked at",
              "format": "date-time"
            }
          },
          "description": "Information about the updated workspace status."
        },
        "WorkspaceTemplateValuesResponse": {
          "type": "object",
          "properties": {
            "runtime_data": {
              "type": "array",
              "description": "Information about the provisioning engine, state file, and runtime logs. ",
              "items": {
                "$ref": "#/components/schemas/TemplateRunTimeDataResponse"
              }
            },
            "shared_data": {
              "$ref": "#/components/schemas/SharedTargetData"
            },
            "template_data": {
              "type": "array",
              "description": "Information about the input variables that are used in the template.",
              "items": {
                "$ref": "#/components/schemas/TemplateSourceDataResponse"
              }
            }
          },
          "description": "Information about the template that your workspace points to."
        },
        "WorkspaceUpdateRequest": {
          "type": "object",
          "properties": {
            "catalog_ref": {
              "$ref": "#/components/schemas/CatalogRef"
            },
            "description": {
              "type": "string",
              "description": "The description of the workspace."
            },
            "name": {
              "type": "string",
              "description": "The name of the workspace."
            },
            "shared_data": {
              "$ref": "#/components/schemas/SharedTargetData"
            },
            "tags": {
              "$ref": "#/components/schemas/Tags"
            },
            "template_data": {
              "$ref": "#/components/schemas/TemplateData"
            },
            "template_repo": {
              "$ref": "#/components/schemas/TemplateRepoUpdateRequest"
            },
            "type": {
              "type": "array",
              "description": "List of Workspace type",
              "items": {
                "type": "string"
              }
            },
            "workspace_status": {
              "$ref": "#/components/schemas/WorkspaceStatusUpdateRequest"
            },
            "workspace_status_msg": {
              "$ref": "#/components/schemas/WorkspaceStatusMessage"
            }
          },
          "description": "Request parameter to update a workspace. "
        },
        "WorkspaceVariableRequest": {
          "type": "object",
          "properties": {
            "description": {
              "type": "string",
              "description": "The description of your input variable."
            },
            "name": {
              "type": "string",
              "description": "The name of the variable."
            },
            "secure": {
              "type": "boolean",
              "description": "If set to `true`, the value of your input variable is protected and not returned in your API response."
            },
            "type": {
              "type": "string",
              "description": "`Terraform v0.12` supports `string`, `list`, `map`, `bool`, `number` and complex data types such as `list(type)`, `map(type)`, `object({attribute name=type,..})`, `set(type)`, `tuple([type])`. For more information, about the syntax to use the complex data type, see [Configuring variables](https://www.terraform.io/docs/configuration/variables.html#type-constraints)."
            },
            "value": {
              "type": "string",
              "description": "Enter the value as a string for the primitive types such as `bool`, `number`, `string`, and `HCL` format for the complex variables, as you provide in a `.tfvars` file. **You need to enter escaped string of `HCL` format for the complex variable value**. For more information, about how to declare variables in a terraform configuration file and provide value to schematics, see [Providing values for the declared variables](/docs/schematics?topic=schematics-create-tf-config#declare-variable)."
            }
          },
          "description": "Detailed information about the input variables that your template uses."
        },
        "WorkspaceVariableUpdateRequest": {
          "type": "object",
          "properties": {
            "description": {
              "type": "string",
              "description": "The description of your input variable."
            },
            "name": {
              "type": "string",
              "description": "The name of the variable."
            },
            "secure": {
              "type": "boolean",
              "description": "If set to `true`, the value of your input variable is protected and not returned in your API response."
            },
            "use_default": {
              "type": "boolean",
              "description": "If set to true, you are removing the overridden variable value from the .tfvars file. The next time plan or apply is executed, the default value for the variable in the Terraform template is used."
            },
            "type": {
              "type": "string",
              "description": "`Terraform v0.12` supports `string`, `list`, `map`, `bool`, `number` and complex data types such as `list(type)`, `map(type)`, `object({attribute name=type,..})`, `set(type)`, `tuple([type])`. For more information, about the syntax to use the complex data type, see [Configuring variables](https://www.terraform.io/docs/configuration/variables.html#type-constraints)."
            },
            "value": {
              "type": "string",
              "description": "Enter the value as a string for the primitive types such as `bool`, `number`, `string`, and `HCL` format for the complex variables, as you provide in a `.tfvars` file. **You need to enter escaped string of `HCL` format for the complex variable value**. For more information, about how to declare variables in a terraform configuration file and provide value to schematics, see [Providing values for the declared variables](/docs/schematics?topic=schematics-create-tf-config#declare-variable)."
            }
          },
          "description": "Detailed information about the input variables that your template uses."
        }
      }
    }
  }