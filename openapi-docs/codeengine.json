{
    "openapi": "3.0.1",
    "info": {
      "title": "IBM Cloud Code Engine",
      "description": "The purpose is to provide an API to get Kubeconfig file for IBM Cloud Code Engine Project",
      "version": "0.0",
      "x-sdk-supported-languages": [
        "go",
        "java",
        "node",
        "python"
      ],
      "x-last-updated": "2021-03-03"
    },
    "servers": [
      {
        "url": "/api/v1"
      }
    ],
    "paths": {
      "/project/{id}/config": {
        "get": {
          "tags": [
            "get kubeconfig"
          ],
          "summary": "Retrieve KUBECONFIG for a specified project.",
          "description": "Returns the KUBECONFIG, similar to the output of `kubectl config view --minify=true`.\nThere are 2 tokens in the Request Header and a query parameter that you must provide.\n These values can be generated as follows:\n1. Auth Header\nPass the generated IAM Token as the Authorization header from the CLI as `token=cat $HOME/.bluemix/config.json | jq .IAMToken -r`.\nGenerate the token with the [Create an IAM access token for a user or service ID using an API key](https://cloud.ibm.com/apidocs/iam-identity-token-api#gettoken-apikey) API.\n\n2. X-Delegated-Refresh-Token Header\nGenerate an IAM Delegated Refresh Token for Code Engine with the [Create an IAM access token and delegated refresh token for a user or service ID](https://cloud.ibm.com/apidocs/iam-identity-token-api#gettoken-apikey-delegatedrefreshtoken) API.\nSpecify the `receiver_client_ids` value to be `ce` and the `delegated_refresh_token_expiry` value to be `3600`.\n\n3. Project ID\nIn order to retrieve the Kubeconfig file for a specific Code Engine project, use the CLI to extract the ID\n`id=ibmcloud ce project get -n ${CE_PROJECT_NAME} -o jsonpath={.guid}`\nYou must be logged into the account where the project was created to retrieve the ID.",
          "operationId": "get_kubeconfig",
          "security": [
            {
              "authorizationHeader": []
            }
          ],
          "parameters": [
            {
              "name": "X-Delegated-Refresh-Token",
              "in": "header",
              "description": "This IAM Delegated Refresh Token is specifically valid for Code Engine. Generate this token with the [Create an IAM access token and delegated refresh token for a user or service ID](https://cloud.ibm.com/apidocs/iam-identity-token-api#gettoken-apikey-delegatedrefreshtoken) API. Specify the `receiver_client_ids` value to be `ce` and the `delegated_refresh_token_expiry` value to be `3600`",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "id",
              "in": "path",
              "description": "The id of the IBM Cloud Code Engine project",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success. The returned content is the KUBECONFIG information to use for the specific IBM Cloud Code Engine project. The returned value must be stored in a .yaml file and exported as `export KUBECONFIG=<path to the .yaml file>` for use.",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "apiVersion: v1\nclusters:\n- cluster:\n    server: https://proxy.us-south.codeengine.cloud.ibm.com\n  name: https://proxy.us-south.codeengine.cloud.ibm.com\ncontexts:\n- context:\n    cluster: https://proxy.us-south.codeengine.cloud.ibm.com\n    namespace: some-namespace\n    user: some-namespace\n  name: some-namespace\ncurrent-context: some-namespace\nkind: Config\npreferences: {}\nusers:\n- name: some-namespace\n  user:\n    auth-provider:\n      config:\n        client-id: ce\n        client-secret: ce\n        id-token: a.b.c\n        idp-issuer-url: https://iam.cloud.ibm.com/identity\n        refresh-token: c.d.e\n      name: oidc"
                },
                "application/json": {
                  "schema": {
                    "type": "object"
                  }
                }
              }
            },
            "400": {
              "description": "Bad request",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/MessagePayload"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/MessagePayload"
                  }
                }
              }
            },
            "403": {
              "description": "Unauthorized access",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/MessagePayload"
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "headers": {
                "X-Request-Id": {
                  "description": "Unique ID for this request",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/MessagePayload"
                  }
                }
              }
            }
          },
          "x-sdk-operations": {
            "request-examples": {
              "curl": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "type": "code",
                      "source": [
                        "token=`cat $HOME/.bluemix/config.json | jq .IAMToken -r`\n",
                        "refreshToken=`cat $HOME/.bluemix/config.json | jq .IAMRefreshToken -r`\n",
                        "delegatedRefreshToken=$(curl -X POST 'https://iam.cloud.ibm.com/identity/token' \\\n",
                        "  -H 'Content-Type: application/x-www-form-urlencoded' \\\n",
                        "  -H 'Authorization: Basic Yng6Yng=' \\\n",
                        "  -d \"grant_type=refresh_token&refresh_token=${refreshToken}&response_type=delegated_refresh_token&receiver_client_ids=ce&delegated_refresh_token_expiry=3600\" \\\n",
                        " | jq .delegated_refresh_token -r)\n",
                        "id=`ibmcloud ce project get -n ${CE_PROJECT_NAME} -o jsonpath={.guid}`\n",
                        "curl -H \"Authorization: ${token}\" -H \"X-Delegated-Refresh-Token: ${delegatedRefreshToken}\" \\\n",
                        "  https://api.${CE_PROJECT_REGION}.codeengine.cloud.ibm.com/api/v1/project/${id}/config\""
                      ]
                    }
                  ]
                }
              ],
              "java": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "lang": "java",
                      "type": "code",
                      "source": [
                        "IamAuthenticator authenticator = new IamAuthenticator(System.getenv(\"CE_API_KEY\"));\n",
                        "authenticator.setClientIdAndSecret(\"bx\", \"bx\");\n",
                        "\n",
                        "IbmCloudCodeEngine ceClient = new IbmCloudCodeEngine(\"Code Engine Client\", authenticator);\n",
                        "ceClient.setServiceUrl(\"https://api.\" + System.getenv(\"CE_PROJECT_REGION\") + \".codeengine.cloud.ibm.com/api/v1\");\n",
                        "\n",
                        "URL iamUrl = new URL(\"https://iam.cloud.ibm.com/identity/token?\"\n",
                        "  + \"grant_type=urn:ibm:params:oauth:grant-type:apikey&\"\n",
                        "  + \"response_type=delegated_refresh_token&\"\n",
                        "  + \"receiver_client_ids=ce&\"\n",
                        "  + \"delegated_refresh_token_expiry=3600&\"\n",
                        "  + \"apikey=\"\n",
                        "  + System.getenv(\"CE_API_KEY\"));\n",
                        "HttpURLConnection iamConnection = (HttpURLConnection) iamUrl.openConnection();\n",
                        "iamConnection.setRequestMethod(\"POST\");\n",
                        "iamConnection.setRequestProperty(\"Content-Type\", \"application/x-www-form-urlencoded\");\n",
                        "BufferedReader iamInput = new BufferedReader(new InputStreamReader(iamConnection.getInputStream()));\n",
                        "String iamResponse = \"\";\n",
                        "String iamInputLine = \"\";\n",
                        "while ((iamInputLine = iamInput.readLine()) != null) {\n",
                        "  iamResponse = iamResponse + iamInputLine;\n",
                        "}\n",
                        "iamInput.close();\n",
                        "JSONObject iamJson = new JSONObject(iamResponse);\n",
                        "String delegatedRefreshToken = iamJson.getString(\"delegated_refresh_token\");\n",
                        "\n",
                        "GetKubeconfigOptions options = new GetKubeconfigOptions.Builder()\n",
                        "  .id(System.getenv(\"CE_PROJECT_ID\"))\n",
                        "  .xDelegatedRefreshToken(delegatedRefreshToken)\n",
                        "  .build();\n",
                        "\n",
                        "Response<String> kubeConfigResponse = ceClient.getKubeconfig(options).execute();\n",
                        "String kubeConfigString = kubeConfigResponse.getResult();\n"
                      ]
                    }
                  ]
                }
              ],
              "node": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "lang": "node",
                      "type": "code",
                      "source": [
                        "const authenticator = new IamAuthenticator({\n",
                        "  apikey: process.env.CE_API_KEY,\n",
                        "  clientId: 'bx',\n",
                        "  clientSecret: 'bx',\n",
                        "});\n",
                        "\n",
                        "const ceClient = new CodeEngineV1({\n",
                        "  authenticator,\n",
                        "  serviceUrl: `https://api.${process.env.CE_PROJECT_REGION}.codeengine.cloud.ibm.com/api/v1`,\n",
                        "});\n",
                        "\n",
                        "const iamResponse = await axios.post('https://iam.cloud.ibm.com/identity/token', querystring.stringify({\n",
                        "  grant_type: 'urn:ibm:params:oauth:grant-type:apikey',\n",
                        "  apikey: process.env.CE_API_KEY,\n",
                        "  response_type: 'delegated_refresh_token',\n",
                        "  receiver_client_ids: 'ce',\n",
                        "  delegated_refresh_token_expiry: '3600'\n",
                        "}), {\n",
                        "  headers: {\n",
                        "    'Content-Type': 'application/x-www-form-urlencoded'\n",
                        "  }\n",
                        "})\n",
                        "const delegatedRefreshToken = iamResponse.data.delegated_refresh_token;\n",
                        "\n",
                        "const configResponse = await ceClient.getKubeconfig({\n",
                        "  xDelegatedRefreshToken: delegatedRefreshToken,\n",
                        "  id: process.env.CE_PROJECT_ID,\n",
                        "});\n"
                      ]
                    }
                  ]
                }
              ],
              "python": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "lang": "python",
                      "type": "code",
                      "source": [
                        "authenticator = IAMAuthenticator(\n",
                        "    apikey=os.environ.get('CE_API_KEY'),\n",
                        "    client_id='bx',\n",
                        "    client_secret='bx',\n",
                        ")\n",
                        "\n",
                        "ce_client = IbmCloudCodeEngineV1(authenticator=authenticator)\n",
                        "ce_client.set_service_url(\n",
                        "    'https://api.' + os.environ.get('CE_PROJECT_REGION') + '.codeengine.cloud.ibm.com/api/v1'\n",
                        ")\n",
                        "\n",
                        "iam_response = requests.post('https://iam.cloud.ibm.com/identity/token', headers={\n",
                        "    'Content-Type': 'application/x-www-form-urlencoded'\n",
                        "}, data={\n",
                        "    'grant_type': 'urn:ibm:params:oauth:grant-type:apikey',\n",
                        "    'apikey': os.environ.get('CE_API_KEY'),\n",
                        "    'response_type': 'delegated_refresh_token',\n",
                        "    'receiver_client_ids': 'ce',\n",
                        "    'delegated_refresh_token_expiry': '3600'\n",
                        "})\n",
                        "delegated_refresh_token = iam_response.json()['delegated_refresh_token']\n",
                        "\n",
                        "kubeconfig_response = ce_client.get_kubeconfig(\n",
                        "    x_delegated_refresh_token=delegated_refresh_token,\n",
                        "    id=os.environ.get('CE_PROJECT_ID'),\n",
                        ")\n",
                        "kubeconfig_string = kubeconfig_response.get_result().content\n"
                      ]
                    }
                  ]
                }
              ],
              "go": [
                {
                  "name": "Example request",
                  "example": [
                    {
                      "lang": "go",
                      "type": "code",
                      "source": [
                        "authenticator := &core.IamAuthenticator{\n",
                        "  ApiKey:       os.Getenv(\"CE_API_KEY\"),\n",
                        "  ClientId:     \"bx\",\n",
                        "  ClientSecret: \"bx\",\n",
                        "}\n",
                        "\n",
                        "ceClient, _ := ibmcloudcodeenginev1.NewIbmCloudCodeEngineV1(&ibmcloudcodeenginev1.IbmCloudCodeEngineV1Options{\n",
                        "  Authenticator: authenticator,\n",
                        "  URL:           \"https://api.\" + os.Getenv(\"CE_PROJECT_REGION\") + \".codeengine.cloud.ibm.com/api/v1\",\n",
                        "})\n",
                        "\n",
                        "iamRequestData := url.Values{}\n",
                        "iamRequestData.Set(\"grant_type\", \"urn:ibm:params:oauth:grant-type:apikey\")\n",
                        "iamRequestData.Set(\"apikey\", os.Getenv(\"CE_API_KEY\"))\n",
                        "iamRequestData.Set(\"response_type\", \"delegated_refresh_token\")\n",
                        "iamRequestData.Set(\"receiver_client_ids\", \"ce\")\n",
                        "iamRequestData.Set(\"delegated_refresh_token_expiry\", \"3600\")\n",
                        "client := &http.Client{}\n",
                        "req, _ := http.NewRequest(\"POST\", \"https://iam.cloud.ibm.com/identity/token\", strings.NewReader(iamRequestData.Encode()))\n",
                        "req.Header.Add(\"Content-Type\", \"application/x-www-form-urlencoded\")\n",
                        "resp, _ := client.Do(req)\n",
                        "var iamResponseData map[string]string\n",
                        "json.NewDecoder(resp.Body).Decode(&iamResponseData)\n",
                        "delegatedRefreshToken := iamResponseData[\"delegated_refresh_token\"]\n",
                        "\n",
                        "projectID := os.Getenv(\"CE_PROJECT_ID\")\n",
                        "result, _, _ := ceClient.GetKubeconfig(&ibmcloudcodeenginev1.GetKubeconfigOptions{\n",
                        "  XDelegatedRefreshToken: &delegatedRefreshToken,\n",
                        "  ID:           &projectID,\n",
                        "})\n"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      }
    },
    "components": {
      "securitySchemes": {
        "authorizationHeader": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      },
      "schemas": {
        "MessagePayload": {
          "required": [
            "message",
            "messageid",
            "statuscode",
            "timestamp",
            "x-request-id"
          ],
          "type": "object",
          "properties": {
            "message": {
              "type": "string",
              "x-go-name": "Message",
              "description": "message returned with the status code"
            },
            "messageid": {
              "type": "string",
              "x-go-name": "MessageID",
              "description": "Unique identifier for the message"
            },
            "statuscode": {
              "type": "integer",
              "format": "int64",
              "x-go-name": "StatusCode",
              "description": "status code associated with the API response"
            },
            "timestamp": {
              "type": "string",
              "format": "date-time",
              "x-go-name": "TimeStamp",
              "description": "Time of the message generation"
            },
            "x-request-id": {
              "type": "string",
              "x-go-name": "RequestID"
            }
          },
          "description": "MessagePayload -",
          "x-go-package": "github.ibm.com/coligo/api-server/lib"
        }
      }
    }
  }